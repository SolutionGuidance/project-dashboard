#+STARTUP: showeverything

* [[https://github.com/solutionguidance/psm/issues/740][740]]   (open): Re-screen approved providers monthly

  >The PSM shall support admin-configurable automated re-screening.  C.f. psm-FR-7.3.
  
  And possibly:
  >psm-FR-6.1 The PSM shall download all monitoring risk scores for each month as a CSV
  
  The way I understand this is that the PSM will re-run automated checks on all approved applications on a monthly basis (though we should make the exact period configurable in Drools).  Right now, the only automated check is the LEIE, but by the end of June we'll have another one.
  
  This is another item that we could use some more input about: how will users use this re-screening information?  What's an appropriate UI for this?  The CSV?  Notification emails about new exclusions sent to designated users?
** LABEL CHANGES
   + fr-4.7

* [[https://github.com/solutionguidance/psm/issues/739][739]]   (open): Choose initial set of reports

  States need reports about screening.
  
  >psm-AD-1.3 The PSM shall provide reports that allow users to drill down from summarized data to detailed data.
  >psm-AD-3.4 The PSM shall support simple queries and pre-formatted reports that are easy to access, follow a user-friendly protocol, and produce responses immediately.
  >psm-AD-3.5 The PSM shall provide ad hoc reporting capability that presents summarized information on key factors to executive staff upon request.
  >psm-FR-6.5 The PSM shall, to extent permitted by law, make screening data available for analytics and other reporting purposes.
  
  These requirements don't tell us exactly which reports states will need. @chj124, @WyomingSarah, can you chime in on this?
  
  A first list:
  - Number of applications received by month
  - Percent of applications rejected/approved by month
  - Mean and median time from submission to review by month
  
  What are some others?
** LABEL CHANGES
   + ad-1.1
   + ad-1.2
   + ad-1.3
   + ad-3.1
   + ad-3.2
   + ad-3.4
   + ad-3.5
   + ad-3.6

* [[https://github.com/solutionguidance/psm/issues/738][738]]   (open): Choose second federal data source

  Following on from #17, we now need to choose our second federal data source.  This is most likely to be either PECOS or the Death Master File.
** LABEL CHANGES
   + ia-3.2
   + iu-2.2
   + iu-2.3
   + ia-1.2
   + ia-3.1
   + ia-3.9

* [[https://github.com/solutionguidance/psm/issues/734][734]]   (open): Moving backward in PHN enrollment loses county contract

  tl;dr: hitting "previous" traps you on a page and forgets the previously uploaded attachment
  
  To reproduce,
  
  1. start an enrollment application for a Public Health Nursing Organization
  2. upload a county contract on the Facility Credentials page in the "PHN Agency must be a county or have a contract with a county" section
  3. move forward in the application by filling out the rest of the page and clicking "Next"
  4. click "Previous" to return to the Facility Credentials page
  5. click "Next" to move on from this previously-completed page
  
  Expected behavior:
  The previously entered data is saved and accepted
  
  Actual behavior:
  The contract is lost, the error "Copy of contract with county is required for this provider type." is shown, and the field is highlighted as being in error.
  
  ![contract-missing](https://user-images.githubusercontent.com/1494855/37855466-ccd3d768-2ec5-11e8-8820-066b7ad7ed98.png)
  
  Related to issue #158.
** LABEL CHANGES
   + fr-7.14
   + ia-4.2

* [[https://github.com/solutionguidance/psm/issues/728][728]] (closed): Separate pages for provider and service admin search results

  As mentioned in PR #716:  "Currently the search results pages are the same pages/JSP templates for both service admin and provider roles."  We should create a separate template and page for the provider search results. Then we can have separate user help links/modals for the action column for each role. This will also allow us to address #691.

** LABELS
   - duplicate
** LABEL CHANGES
   + ad-1.4
   + ad-5.13
* [[https://github.com/solutionguidance/psm/issues/725][725]]   (open): Verify facility credentials

  In PR #719, we added facility credentials to the admin enrollment application review screen, but do not require admins to mark them as approved. In part, we decided on this because we're not clear on what exactly the behavior should be, and we didn't want to do too much work that might need to be undone.
  
  Is it useful to make admins mark each facility credential as approved? If so, is there any automated review that can or should happen, such as checking some external data source?
  
  If so, there are some steps we'll need to take:
  - update the data model to record each facility credential as approved or not approved
  - update the Drools rules to require that each facility credential is approved
  - update the UI to include a column of checkboxes for facility credentials
  
  See also issue #261.

** LABELS
   - backend
   - enhancement
   - state-question
* [[https://github.com/solutionguidance/psm/issues/722][722]]   (open): Inactive greyed-out edit and view links in "Action" column

  Rather than showing either an edit or a view link in the Actions column (depending on the status of an enrollment application), show both edit and view links for every row, but have one or the other 'greyed-out' and inactive depending on the status.  The idea is that this will be clearer for users.  One possibility would be to open the "Action" column help modal (that explains when you can edit vs just view enrollments) when users click on the inactive links.
  
  This issue was split off from PR #716.
** LABEL CHANGES
   + fr-7.14

* [[https://github.com/solutionguidance/psm/issues/721][721]]   (open): Add reject notifications

  As discovered while working on #341 it appears that RejectHandler.java is never actually invoked by the rejection process triggered from the application UI.
  
  More detail from @jasonaowen:
  
  "nothing calls reject (at endpoint /agent/enrollment/reject); instead, the reject button in the admin review interface calls rejectTicket (at endpoint /agent/enrollment/rejectTicket), which does not continue the jBPM process"
  
  We should look into:
  
  1) Whether both endpoints need to exist (removing any un-necessary code).
  2) Which endpoint is the correct one to call from the review interface.
  3) Where it would be appropriate to add the reject notification
** LABEL CHANGES
   + sq-1.5

* [[https://github.com/solutionguidance/psm/issues/711][711]]   (open): Remove or complete Categories of Service (COS)

  The "COS" action is incompletely implemented and not mentioned in the RTM.  I believe we should remove it unless we know of a compelling reason it should be included in the PSM.
  
  If we do keep it, then we should write help text to cover this area of the application.

* [[https://github.com/solutionguidance/psm/issues/709][709]]   (open): Add a11y tests for lesser-used pages

  We have set up accessibility testing for the main portions of the application, but there are a few places that still need it.
  
  Quoting from @PaulMorris in #518:
  
  ```
  Here are the pages that will still not have a11y tests after PRs #676, #679, #684, and #686 land.
  
  For service admin login
  Pages for individual 'view enrollment'
  Pages for organization and individual 'edit enrollment'
  Pages for organization and individual 'renew enrollment'
  My Profile page
  Update profile page
  Advanced Search page
  Quick Search results page
  
  For system admin login
  Providers page
  Service Agents page
  Service Administrators page
  System Administrators page
  View User Account page
  Edit User Account Page
  Delete User Account Modal
  Quick Search Results
  Advanced Search Results
  ```
** LABEL CHANGES
   + ad-2.4
   + sq-1.2

* [[https://github.com/solutionguidance/psm/issues/708][708]]   (open): Rendering issues in Facility Credentials screen

  When creating an application as a Head Start provider type, the page has some layout issues:
  
  ![15eaf75a-7582-4b2c-9498-c243362e9343](https://user-images.githubusercontent.com/1494855/37310168-7e0a49a0-2619-11e8-9d7f-3fa87713ae42.png)
  
  In particular, the dividing lines are not consistent and extend partially into the white area, and "License/Certification" is on its own line. Additionally (not shown) once you add a license, the allowed types do not fit into the space provided.

** LABELS
   - bug
   - ux
** LABEL CHANGES
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/703][703]] (closed): Add writing PR descriptions to CONTRIBUTING.md

  Currently our CONTRIBUTING document does not cover writing good PR descriptions, although there are expectations about it.  It would be good to document our practice on this.
** LABEL CHANGES
   + sq-1.1

* [[https://github.com/solutionguidance/psm/issues/701][701]]   (open): Can only save enrollment as draft once

  I created a new enrollment and was able to save it as a draft once.  The second time I tried to do so (before completing and submitting it), I got a "server error" in the UI and following stack trace:
  ```
  Caused by: javax.persistence.PersistenceException: org.hibernate.HibernateException: identifier of an instance of gov.medicaid.entities.ProviderProfile was altered from 1439 to 0
          at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1692)
          at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1602)
          at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1608)
          at org.hibernate.jpa.internal.EntityManagerImpl$CallbackExceptionMapperImpl.mapManagedFlushFailure(EntityManagerImpl.java:235)
          at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2967)
          at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2339)
          at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:485)
          at org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.beforeCompletion(JtaTransactionCoordinatorImpl.java:316)
          at org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinatorNonTrackingImpl.beforeCompletion(SynchronizationCallbackCoordinatorNonTrackingImpl.java:47)
          at org.hibernate.resource.transaction.backend.jta.internal.synchronization.RegisteredSynchronization.beforeCompletion(RegisteredSynchronization.java:37)
          at org.jboss.as.txn.service.internal.tsr.JCAOrderedLastSynchronizationList.beforeCompletion(JCAOrderedLastSynchronizationList.java:116)
          at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
          at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:368)
          at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:91)
          at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:162)
          at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1200)
          ... 139 more
  Caused by: org.hibernate.HibernateException: identifier of an instance of gov.medicaid.entities.ProviderProfile was altered from 1439 to 0
          at org.hibernate.event.internal.DefaultFlushEntityEventListener.checkId(DefaultFlushEntityEventListener.java:64)
          at org.hibernate.event.internal.DefaultFlushEntityEventListener.getValues(DefaultFlushEntityEventListener.java:175)
          at org.hibernate.event.internal.DefaultFlushEntityEventListener.onFlushEntity(DefaultFlushEntityEventListener.java:135)
          at org.hibernate.event.internal.AbstractFlushingEventListener.flushEntities(AbstractFlushingEventListener.java:216)
          at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:85)
          at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:38)
          at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1282)
          at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:465)
          at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2963)
          ... 150 more
  ```
  
  I could continue to fill out and submit the enrollment, but everything entered after the first time I saved as draft was lost.

** LABELS
   - bug
** LABEL CHANGES
   + fr-7.14
   + fr-7.7
* [[https://github.com/solutionguidance/psm/issues/700][700]]   (open): Accessibility of user help pages

  There's an accessibility issue on the user help pages.  The search form is missing a label/title. Possible fixes for that would be an upstream contribution to Sphinx or a local modification of the Sphinx theme we are using.
** LABEL CHANGES
   + ad-2.4

* [[https://github.com/solutionguidance/psm/issues/699][699]]   (open): Remove help topics subsystem

  As discussed in #396, we will handle help through the contextual helptext added in #422.  Any additional help that state users want to add will work through that system, not this one.
  
  Removing this subsystem involves:
  - [ ] Removing the front end (currently visible to service admins)
  - [ ] Removing related database table(s) and creating the associated migration (see #254)
  - [ ] Removing controlling code
  - [ ] Removing references in documentation (ping for @jcunard)
  
  Please note any other complications in comments on this issue.

** LABELS
   - Z-REQ-PSM-FR-7.2
     The PSM shall provide detailed instructions for completing the
     application via a Help link.
     <<< FR 7. Usability >>>
** LABEL CHANGES
   + sq-1.5

* [[https://github.com/solutionguidance/psm/issues/695][695]] (closed): Base issue for requirements that don't (yet) have issue tickets.

  Some of the PSM's [requirements](https://github.com/SolutionGuidance/psm/tree/master/requirements) don't (yet) have any corresponding issues associated with them.  This might be for one of several reasons:
  
  1) The requirement was already handled in the original TopCoder work of 2013 and before.
  2) The requirement is one of those things that just naturally gets taken care of in the course of building a provider screening module (e.g., if the requirement is that "The PSM shall screen providers", that's something we might never have an actual ticket filed for).
  3) We haven't yet started work on the requirement as of early March 2018, when the first big RTM<->issues mapping sweep was done.  For those requirements, we expect them to have issues (other than this one) eventually, but those issues just haven't been filed yet because we haven't gotten to that part of the roadmap yet.  In theory, we could file issues for those features way in advance, but we're not currently doing a "one master ticket per requirement" thing, so filing in advance would be premature as we'd be unable to be technically specific.
  
  The fact that a given requirement currently points to this issue doesn't tell you whether it's because of (1), (2), or (3).  However, it does tell you that someone has already gone through the effort of trying to find issues that correspond to that requirement, and, assuming no other issues are labeled with that requirement, that no match has been found yet.
  
  There's no need to remove a requirement label from this issue once that requirement has other issues associated with it.  This issue will be closed as soon as it is opened, so it won't block the completion of any requirement.

** LABELS
   - Z-REQ-PSM-FR-1.1
     The PSM shall accept a form that shows a tax ID number and legal
     name for each provider (ex forms: CP 575 or 147C letter; 941
     Employers' Quarterly Federal Tax Return; 8109 Tax Coupon; or
     letter from IRS with the Federal Tax Identification Number and
     legal name).
     <<< FR 1.  Capability to conduct identity verification >>>

   - Z-REQ-PSM-FR-1.3
     The PSM shall screen providers for managed care plans.
     <<< FR 1.  Capability to conduct identity verification >>>

   - Z-REQ-PSM-FR-1.5
     The PSM shall have the capability to escalate the intensity of
     screening for providers that are flagged as higher risk.
     <<< FR 1.  Capability to conduct identity verification >>>

   - Z-REQ-PSM-FR-10.1
     The PSM shall validate HIPAA Taxonomy codes against
     http://www.wpc-edi.com/codes/taxonomy
     <<< FR 10. Compliance >>>

   - Z-REQ-PSM-FR-2.10
     The PSM shall notify managed care plans when a provider becomes
     eligible (has been screened) and/or allow a managed care plan to
     check a provider's eligibility.
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-2.11
     The PSM shall detect and ask specific questions of
     bordering-state providers.
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-2.12
     The PSM shall share NPI between individual providers, for group
     practices.
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-2.13
     The PSM shall limit enrollment to providers in the following
     categories: (1) in-state, (2) out-of-state in-network, (3) within
     a defined "border" region of neighboring states.
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-2.14
     The PSM shall use consistent provider naming conventions to
     differentiate between first names, last names, and business or
     corporate names and to allow flexible searches based on the
     provider name.
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-2.17
     The PSM shall maintain providers’ drug enforcement administration
     (DEA) numbers.
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-2.3
     The PSM shall associate multiple Medicare IDs with the same
     provider, if the provider has multiple locations.
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-3.1
     The PSM shall provide a rejection reason if an application is
     rejected.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.10
     The PSM shall send letter confirming enrollment.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.11
     The PSM shall notify providers 90 days before their enrollment
     expires, so that they can go through revalidation.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.12
     The PSM shall automatically reject applications that do not
     include all mandatory information.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.3
     The PSM shall flag and route records for action if multiple
     internal state assigned provider numbers are associated with a
     single provider.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.6
     The PSM shall conduct a fingerprint-based criminal background
     check for high-risk provider types.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.8
     The PSM shall compare monitoring statistics (e.g. license
     expirations that were not caught within a month, total number of
     sanctions) from one month to the next.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.9
     The PSM shall have the capability to create a learning system to
     ensure that observed negative trends factor back into screening
     rules so as to flag suspicious enrollments early in the screening
     process, ensuring the ability to detect and reduce/eliminate the
     incidence of false positives.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-4.1
     The PSM shall show a list of settings in which a provider might
     see clients/patients, including "Other."
     <<< FR 4.  Configurable Setting >>>

   - Z-REQ-PSM-FR-4.2
     The PSM shall allow applicants to choose multiple care settings.
     <<< FR 4.  Configurable Setting >>>

   - Z-REQ-PSM-FR-4.4
     The PSM shall provide space for results of on-site visits, for
     moderate- and high-risk provider types.
     <<< FR 4.  Configurable Setting >>>

   - Z-REQ-PSM-FR-4.5
     The PSM shall support the Extract, Transform and Load (ETL)
     processes from real-time  web services or batch processes.
     <<< FR 4.  Configurable Setting >>>

   - Z-REQ-PSM-FR-5.1
     The PSM shall issue Medicaid provider ID number to each approved
     provider.
     <<< FR 5. Manage Enrollment >>>

   - Z-REQ-PSM-FR-6.2
     The PSM shall maintain date-specific provider enrollment and
     demographic data.
     <<< FR 6. Retention, Reporting and Auditing >>>

   - Z-REQ-PSM-FR-6.3
     The PSM shall maintain an audit trail of all updates to the
     provider data, for a time period specified by the state.
     <<< FR 6. Retention, Reporting and Auditing >>>

   - Z-REQ-PSM-FR-6.4
     The PSM shall remember previous rejected providers and reasons
     for rejection corresponding form fields
     <<< FR 6. Retention, Reporting and Auditing >>>

   - Z-REQ-PSM-FR-6.8
     The PSM shall provide an input to document the nature for the
     type of screening/monitoring event, the score, and the agencies
     decision for each provider.
     <<< FR 6. Retention, Reporting and Auditing >>>

   - Z-REQ-PSM-FR-7.12
     The PSM shall provide a configurable time frame for a "stale"
     enrollment draft application.
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-FR-7.3
     The PSM shall not send re-screening results to admin for review
     if provider information has not changed.
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-FR-8.3
     The PSM shall support automated criminal background checks for
     all providers as specified by the State.
     <<< FR 8.  Manage Provider Communication >>>

   - Z-REQ-PSM-FR-8.4
     The PSM shall produce notices to applicants of pending status,
     approval, or rejection of their applications.
     <<< FR 8.  Manage Provider Communication >>>

   - Z-REQ-PSM-FR-9.2
     The PSM shall integrate records with MO HealthNet.
     <<< FR 9.  Meets architecture guideline >>>

   - Z-REQ-PSM-FR-9.3
     The PSM shall support a provider appeals process in compliance
     with federal guidelines (42 CFR 431.105)
     <<< FR 9.  Meets architecture guideline >>>

   - Z-REQ-PSM-II-1.1
     The PSM shall use a mix of manual and automated business
     processes.
     <<< II 1.  Technical Service Classification:  Business Process Management >>>

   - Z-REQ-PSM-II-3.1
     The PSM shall adopt MITA-recommended ESB, automated arrangement,
     coordination, and management of system.
     <<< II 3.  Technical Service Classification:  Service Oriented Architecture >>>

   - Z-REQ-PSM-II-3.2
     The PSM shall conduct reliable messaging, including guaranteed
     message delivery (without duplicates) and support for
     non-deliverable messages.
     <<< II 3.  Technical Service Classification:  Service Oriented Architecture >>>

   - Z-REQ-PSM-II-4.3
     Loosely coupled APIs - 
The PSM module dependencies shall be minimized to the greatest extent
possible.
     <<< II 4.  Technical Service Classification:  System Extensibility >>>

* [[https://github.com/solutionguidance/psm/issues/692][692]]   (open): Action column may wrap to two lines

  On service admin "Pending", "Approved", and "Notes" pages content in the action column wraps to two lines:
  
  ![screenshot-2018-2-28 enrollment](https://user-images.githubusercontent.com/1091693/36810821-dea037e0-1c99-11e8-987f-9379e1b17b2e.png)
  
  Also can happen on the results of the advanced search page:
  
  ![screenshot-2018-2-28 advanced search](https://user-images.githubusercontent.com/1091693/36810676-615f618e-1c99-11e8-8b47-397ec4fe58ad.png)

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

* [[https://github.com/solutionguidance/psm/issues/691][691]] (closed): Search results offers admin options to providers

  When logged in as a provider, in the results on the 'advanced search' or 'quick search' pages there are:
  -  "COS" links that lead to "Access is Denied" pages.  There's no need to present these links for providers.
  - "Edit" links for pending enrollments that lead to pages where providers can edit and re-submit.  But the user doc/faq states that "once you’ve submitted an enrollment, you can’t update it in the PSM."
  
  Basically, the results on these pages are rendered the same for both admin and provider logins, but there should be different capabilities and options presented for providers.

** LABELS
   - Z-REQ-PSM-FR-7.13
     The PSM shall support searching and pattern-matching based on all
     fields accepted as input (and based on all reasonable
     combinations of such fields).
     <<< FR 7. Usability >>>

   - duplicate
** LABEL CHANGES
   - fr-7.13
   + iu-2.5
   + ad-1.4
   + ad-5.13
* [[https://github.com/solutionguidance/psm/issues/687][687]]   (open): Advanced Search page a11y test failures

  @cecilia-donnelly [reported](https://github.com/SolutionGuidance/psm/pull/676#issuecomment-368163476) that the a11y test for the provider "Advanced Search" page was failing with "this form has no submit button".  @PaulMorris was not able to reproduce this.  The test is `@ignore`d temporarily until we can troubleshoot this further.

** LABELS
   - Z-REQ-PSM-FR-10.2
     The PSM shall be accessible in compliance with Section 508 of the
     Rehabilitation Act.
     <<< FR 10. Compliance >>>

   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

** LABEL CHANGES
   - fr-10.2
   + ad-2.4
* [[https://github.com/solutionguidance/psm/issues/681][681]]   (open): Rename built user docs to "user help" or "user FAQ"

  Per @jcunard's suggestion, change the title of the documentation from "user manual" to "user help" or "user FAQs."  This should be simple to do in `conf.py`.
  
  ![screenshot-2018-2-21 welcome to provider screening module s documentation provider screening module user manual 1 0 docum](https://user-images.githubusercontent.com/1497818/36499379-a934e058-1706-11e8-88b9-225c8abc836e.png)

** LABELS
   - Z-REQ-PSM-FR-7.2
     The PSM shall provide detailed instructions for completing the
     application via a Help link.
     <<< FR 7. Usability >>>

* [[https://github.com/solutionguidance/psm/issues/675][675]]   (open): Legal name cannot exceed 35 characters

  Is this a limitation we want to have?  It seems unnecessary to me.
  
  ![screenshot from 2018-02-19 14-10-51](https://user-images.githubusercontent.com/1497818/36395427-c3793484-157e-11e8-9d2a-129366c64469.png)

** LABELS
   - Z-REQ-PSM-FR-2.16
     The PSM shall accept, validate, and process transactions or user
     entries to update and maintain provider information.
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-3.16
     The PSM shall provide comprehensive verification of all
     (verifiable) data fields for all providers enrolled
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-7.11
     The PSM shall validate entered information as provider fills out
     application (not at the end of the process).
     <<< FR 7. Usability >>>

* [[https://github.com/solutionguidance/psm/issues/672][672]]   (open): Empty link text for providers with no NPI

  Some provider types, such as Personal Care Assistants, do not have an NPI. After creating such an enrollment, the dashboard and enrollments pages render that enrollment with an empty link to the enrollment:
  
  ![pca-empty-link](https://user-images.githubusercontent.com/1494855/36226993-9501cee8-119d-11e8-90d4-500088c9db5e.png)
  
  This is both a usability problem and an accessibility problem.
  
  We previously addressed a similar case in #573 by making the NPI plain text and moving the link to view the application to the literal string "View", alongside (in that case) "Edit" and "Renew"; in this case it would be next to "Print" and "Export to PDF".

** LABELS
   - Z-REQ-PSM-FR-10.2
     The PSM shall be accessible in compliance with Section 508 of the
     Rehabilitation Act.
     <<< FR 10. Compliance >>>

   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-FR-9.1
     The PSM shall integrate provider-type business rules described in
     the Enrollment Information Guide into the system.
     <<< FR 9.  Meets architecture guideline >>>

   - accessibility
   - bug
   - ux
** LABEL CHANGES
   - fr-10.2
   + ad-2.4
* [[https://github.com/solutionguidance/psm/issues/668][668]]   (open): Rearrange the provider dashboard pages

  The provider "Dashboard > Dashboard" and "Enrollments > Dashboard" pages are very similar, so similar that it's odd to have them in separate tabs in the main navigation bar (as "Dashboard" and "Enrollments").  Some reworking seems in order.
  
  Proposal: make the "Dashboard > Dashboard" page an "All" tab (next to "Draft" "Pending" etc.). And then just have two tabs in the main navigation (either "Dashboard" or "Enrollments" and "My Profile").  Then the tables for the "All", "Draft", etc. tabs could be a merged version combining the features of the current two kinds of tables.
  
  Here are some screenshots showing the similarity:
  
  ![screenshot-2018-2-12-provider-dashboard](https://user-images.githubusercontent.com/1091693/36164940-f7cea6c8-10bb-11e8-93b5-fc5fd70f5192.png)
  
  ![screenshot-2018-2-12-provider-enrollments](https://user-images.githubusercontent.com/1091693/36164950-fed47556-10bb-11e8-9991-01a949f49a8f.png)

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

* [[https://github.com/solutionguidance/psm/issues/666][666]]   (open): Trading Partner Type is not recognized

  @jcunard ran into this issue and I was able to reproduce it.
  
  ![trading-partner-error](https://user-images.githubusercontent.com/1497818/36121991-79e6cb54-100d-11e8-8c20-810ed9f6b802.png)
  
  I reproduced this with the Federally Qualified Health Center type.  I had a draft application that was filled in through the Organization Info page.  I paged back through the application to the beginning.  When I attempted to click "Next" the PSM gave me the error above.
  
  By going back to the dashboard and then clicking back into the draft application I could return to the "Ownership Information" page and successfully submit the enrollment.

** LABELS
   - Z-REQ-PSM-FR-9.1
     The PSM shall integrate provider-type business rules described in
     the Enrollment Information Guide into the system.
     <<< FR 9.  Meets architecture guideline >>>
** LABEL CHANGES
   + fr-7.14

* [[https://github.com/solutionguidance/psm/issues/659][659]]   (open): Add provider type to provider dashboard table

  Currently, the provider dashboard shows enrollments with little to differentiate them (especially if they all have the same NPI):
  
  ![screenshot from 2018-02-08 17-44-22](https://user-images.githubusercontent.com/1497818/36004317-b8d52e46-0cf7-11e8-88cd-ddec4238f6cb.png)
  
  Let's add a "provider type" column to this dashboard.  The most likely reason for a provider to have multiple applications is if they are applying under different provider types, so that should be the best differentiator.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

* [[https://github.com/solutionguidance/psm/issues/655][655]]   (open): Remove or generify UMPI field

  UMPI stands for "Unique Minnesota Provider Identifier", and is one of several MN-specific customizations (see also #74, #571).
  
  It is only used in a few places; one is the in the organization provider type Home And Community Based Services (Waivered Services) Enrollment Application:
  
  ![Screenshot of UMPI field in Home And Community Based Services (Waivered Services) Enrollment Application](https://user-images.githubusercontent.com/1494855/35825277-4e656434-0a83-11e8-99c7-6c9d6daa304c.png)
  
  We should record all the places the PSM requests a UMPI, with the intent of fixing it in some manner.
  
  Do other states have similar, state-specific IDs for providers? If so, are they NPI-compatible? (By which I mean, 10 digits, with the last digit a [Luhn check digit](https://en.wikipedia.org/wiki/Luhn_algorithm); presumably state-specific IDs would have different valid initial digits.) If we only need to support NPI-compatible state provider IDs, we could replace "UMPI" with "State Provider ID" or similar and use the same code we're already using; if not, we'll need to figure out a way to have additional, configurable IDs.
  
  On the other hand, if all the provider types that use UMPIs are Minnesota-specific, and there are no corresponding state-specific provider types & IDs we need to support, we can simply delete these provider types and be done.

** LABELS
   - Z-REQ-PSM-II-4.5
     The PSM shall be configurable where feasible.
     <<< II 4.  Technical Service Classification:  System Extensibility >>>

   - state-question
** LABEL CHANGES
   + sq-1.5
* [[https://github.com/solutionguidance/psm/issues/653][653]]   (open): Remove styles from labels

  In general, styles should not be attached directly to the `label` element.  In the course of updating and merging #583, we found a specific problem caused by the `label` styling.  Labels are all being floated left, meaning that in some cases, the newly added labels are appearing to the left of the radio buttons.  
  
  We can work around this, but in the future we should not be adding styles to plain `label` elements.  Those styles should either go in classes which can be attached to `label`s or even on wrapper divs around them.
  
  Thanks to @PaulMorris for thinking through and explaining this!

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-SQ-1.5
     The PSM shall use D.R.Y. coding principles to avoid unnecessary
     complexity, inflexibility, redundancy, and denormalization in the
     source code and database schemas, and to use precise terminology
     in data structures and operations.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/647][647]] (closed): Fix Serenity test reports

  Our integration tests produce JUnit test reports, but the Serenity Gradle plugin provides a `aggregate` target that collects the screenshots Serenity captures during the tests and builds some HTML around them. These Serenity test reports stopped working at some point - they now always say 0 tests.
  
  Fix the Serenity test reports, so that `./gradlew integration-tests:test integration-tests:aggregate` lets us look at the screenshots.
  
  Blocks #266 Publish Output from Serenity Tests.

** LABELS
   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/641][641]] (closed): Create API that returns a list of approved and/or rejected providers

  See the [proposed APIs for Poplin](https://github.com/SolutionGuidance/psm/blob/master/docs/Poplin-API-proposals.md).  The first section, call it "Phase 1a," includes:
  
  - Get a list of screened providers
  - Get of list of ineligible providers
  - Get providers by eligibility date
  
  Our first task is to estimate how difficult this would be.  There is currently a form in the app (visible to admins) that shows provider applicants by their status:
  
  ![enrollments-by-status](https://user-images.githubusercontent.com/1497818/35244244-22390004-ff85-11e7-97e9-4ff8acffec4a.png)
  
  We have questions on our side about:
  1. Using the `hapi-fhir` library to create an API rather than consume it (currently, the PSM consumes the LEIE API, which was made with `hapi-fhir`). 
  2. Using FHIR's "practitioner" resource to represent our providers.
  
  @notpace, @dhill, tagging you so you can easily follow this issue.  Can you link to the SHR spec you showed in our call?  Is it [this](http://standardhealthrecord.org/fhir/StructureDefinition-shr-entity-Practitioner.html)?

** LABELS
   - Z-REQ-PSM-FR-9.4
     The PSM shall verify provider eligibility in support of other
     system processes, i.e. payment of claims.
     <<< FR 9.  Meets architecture guideline >>>

   - backend
   - enhancement
** LABEL CHANGES
   + iu-2.2
   + iu-2.3
   + ia-1.2
   + ia-3.1
   + ia-3.9
* [[https://github.com/solutionguidance/psm/issues/638][638]]   (open): Add automated cross-browser testing

  Pursuant to #298, and spurred by #635: we need to test in more than one browser.  Presumably we can run the same Selenium tests with different browser drivers.  Our switch to Jenkins (#629) may even make this easier.

** LABELS
   - Z-REQ-PSM-AD-2.5
     To the greatest extent possible, the PSM shall be browser
     agnostic.
     <<< AD 2.  Technical Service Classification:  Client Support >>>

   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - enhancement
* [[https://github.com/solutionguidance/psm/issues/635][635]] (closed): FEIN validation error in Internet Explorer

  Thanks to @jcunard for catching this.
  
  In Internet Explorer (I tested in "Edge," technically), the FEIN input element for the "organization info" tab used by organizational providers (e.g., Community Health Clinic) gets an erroneous error.
  
  ![fein-validation-error](https://user-images.githubusercontent.com/1497818/35071987-754f46ee-fba8-11e7-8ad4-8d8359f6accf.png)
  
  Since FEINs are 9 digits, plus a hyphen, this is definitely wrong.  This does *not* happen in Firefox.  I haven't tested in Chromium yet.  For IE users, though, this is a showstopper.  It means that they can't proceed through the application process, because with a correct (9-digit) FEIN the browser objects, and with a 7-digit one the PSM itself flags the FEIN as invalid: 
  
  ![fein-error-psm](https://user-images.githubusercontent.com/1497818/35072120-e594db08-fba8-11e7-9171-bf4f3b3ca8bf.jpg)

** LABELS
   - Z-REQ-PSM-FR-1.2
     The PSM shall ensure that tax ID number is 9 digits
     <<< FR 1.  Capability to conduct identity verification >>>

   - Z-REQ-PSM-FR-3.16
     The PSM shall provide comprehensive verification of all
     (verifiable) data fields for all providers enrolled
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

** LABEL CHANGES
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/629][629]] (closed): Use Jenkins for continuous integration

  We've been discussing when to move away from Travis for a while, for the following reasons:
  
  1. Travis CI is a proprietary service.  We prefer not to depend on proprietary services.
  2. Jenkins allows us to set up scripts and infra about our CI outside of this repository.  One specific CI setup will not be applicable to other groups who want to use this repository, so it's better to separate it from the application code itself.
  3. Fix our unreliable Wildfly deployment on Travis (see #304).  (This has been resolved, but could come up again.)
  4. Fix our unreliable connection to Sauce Labs on Travis (see #533), by running the integration tests on the Jenkins server.  This also removes another dependency on a proprietary service, since we wouldn't need to use Sauce Labs anymore.
  5. Ability to split our CI checks into separate streams, e.g., as @jasonaowen put it "separate, parallel CI checks - splitting linting, and unit tests, and integration tests, and building, and whatever else into separate jobs that each run on a new PR."  This would be easier with Jenkins, and would allow us to more easily see the difference between "this PR breaks a feature" and "this PR has style problems."
  6. Run some updates on a regular, but not every PR, cycle.  Most immediately, this refers to things like updating the GitHub Pages site, as in PR #445.  We don't need a new copy of the generated files for every PR, but the site needs to be kept up-to-date.  Doing this weekly or similar would be easier with Jenkins.
  7. Keep and publish Serenity reports more easily, as in #266.
  
  I'm sure there are others -- please add them here.

** LABELS
   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/626][626]]   (open): Manage JavaScript dependencies and modernize build

  Currently, we have several vendored JavaScript dependencies:
  
  - [ ] [jQuery](https://jquery.com/), v1.7.1 - MIT (`jquery-1.7.1.min.js`)
  - [ ] [Masked Input jQuery plugin](http://digitalbush.com/projects/masked-input-plugin/), v1.3.1 - MIT (`jquery.maskedinput.min.js`)
  - [ ] [TableSorter, v2.3.11](https://github.com/Mottie/tablesorter/releases/tag/2.3.11) - MIT or GPL (`jquery.tablesorter.min.js`, `jquery.tablesorter.widgets.js`)
  - [ ] [Tiny Scrollbar](http://baijs.com/tinyscrollbar/), version unknown - MIT (`jquery.tinyscrollbar.min.js`)
  - [ ] [jQuery UI, v1.8.14](https://api.jqueryui.com/1.8/) - MIT (`jquery.ui.core.js`, `jquery.ui.datepicker.js`, `jquery.ui.widget.js`)
  - [ ] [jQuery Validation Plugin, v1.10.0](https://github.com/jquery-validation/jquery-validation/releases/tag/1.10.0) - MIT or GPL (`jquery.validate.min.js`)
  - [ ] [Chosen, v0.9.14](https://github.com/harvesthq/chosen/releases/tag/v0.9.14) - MIT (`chosen/`)
  - [ ] [WYSIWYG jQuery Plugin](https://github.com/jwysiwyg/jwysiwyg), version 0.98.dev - MIT or GPL (`jwysiwyg/`)
  - [ ] `jquery.compare.js` - version unknown, providence unknown, license unknown
  
  We need to
  1. set up a modern JavaScript build (presumably using npm or yarn?) that knows how to fetch these dependencies so that we can remove them from our repo.
  2. verify that we're actually using each of these
  3. delete what we can
  4. upgrade to more modern versions to address potential security issues, bugs, and improve client compatibility
  
  While we're doing so, we can also set up the build to produce and include minified JavaScript, and validate our JavaScript against our style guidelines (introduced in #428).
  
  This should pave the way for letting us have a more complex but easier to navigate front-end code base, instead of three gigantic files full of duplicate code.
  
  Forked off of #16, which is primary focused on our Java dependencies.

** LABELS
   - Z-REQ-PSM-SQ-1.3
     The PSM shall use modern source code dependency management
     techniques, and shall use up-to-date versions of upstream
     third-party dependencies.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - in progress
   - infra
   - tech-debt
* [[https://github.com/solutionguidance/psm/issues/623][623]]   (open): Build eligibility query API

  The PSM will need to communicate with other pieces of the MMIS.  One way we anticipate doing this is via an "eligibility query API."  Our current thinking about this API is captured in [ICD.md](https://github.com/SolutionGuidance/psm/blob/master/docs/ICD.md#eligibility-query-api).  Many more questions need to be answered about how the API will work.
  
  @brainwane listed a few in #592:
  
  - will this be a public API or an API that requires authorization to access?
  - what will we return if, say, a date of birth corresponds to multiple provider records?
  - how will we discuss individual members of organizational providers?
  
    

** LABELS
   - Z-REQ-PSM-FR-9.4
     The PSM shall verify provider eligibility in support of other
     system processes, i.e. payment of claims.
     <<< FR 9.  Meets architecture guideline >>>

   - enhancement
** LABEL CHANGES
   + iu-2.2
   + iu-2.3
   + ia-1.2
   + ia-3.1
   + ia-3.9
* [[https://github.com/solutionguidance/psm/issues/622][622]]   (open): Prevent issues from browsers caching outdated CSS

  Recently we made some CSS changes that resulted in the PSM's logout button not working for users that had an older version of the site cached in their browsers.
  
  ![broken-logout](https://user-images.githubusercontent.com/1497818/34586692-b0219742-f16a-11e7-9d76-95f10a7ef1f1.jpg)
  
  
  [Spring has built in caching-prevention support.](https://spring.io/blog/2014/07/24/spring-framework-4-1-handling-static-web-resources), but "it only works in `<c:url>` JSP tags - which means it doesn't work in all of our handlebars templates."
  
  @jasonaowen explains:
  >The minimal change to have always-up-to-date CSS would be to convert `html_head.template.html` back to a JSP, and update all of the stylesheet inclusion links to use `<c:url>` or `<spring:url>` - that'd get us most of the way there
  
  >That'd also let us get always-up-to-date JavaScript, since they're all in that same template
  
  > A comprehensive solution that would allow us to also have always-up-to-date images would require a lot more work, for probably less benefit
  
  > (That is, we don't update images in place very often, so the work to make sure those images are always up to date doesn't seem likely to me to pay off)
  
  I'm not sure how often we'll be changing images / CSS, so it's not obvious to me that addressing this is a high priority (for now).  Recording for prioritization down the line.
    

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

* [[https://github.com/solutionguidance/psm/issues/620][620]]   (open): Cannot delete additional practice location

  If there are two or more additional practice locations, a red x icon shows up to the right of each so that you can delete them. However, if you have only one, you cannot delete it - apparently because it wants to always shows an empty additional practice location.
  
  In #619, this was particularly problematic as the reference to an existing lookup couldn't be deleted, nor would the system accept it.
  
  The workaround is to add a new practice location (by clicking on the "+ Add Another Practice Location" link), delete the broken reference, and do not fill it out.
  
  Ideally, there should be no empty practice location by default, users would need to add another practice location to add the first additional location, and the delete button should always be visible - as the licenses page works. Also be cautious of #155.

** LABELS
   - Z-REQ-PSM-FR-2.16
     The PSM shall accept, validate, and process transactions or user
     entries to update and maintain provider information.
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-4.3
     The PSM shall allow providers to update information and initiate
     re-screening process (e.g., in the following situations: name
     change, change of ownership/operator - whether or not it is the
     same practice location, address change, Federal Tax
     Identification Number change at same practice location, change
     from Social Security Number to Federal Tax Identification Number
     at same practice location, change from Federal Tax Identification
     Number to Social Security Number at same practice location,
     payment name or address change, and additional service location)
     <<< FR 4.  Configurable Setting >>>

   - ux
** LABEL CHANGES
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/619][619]]   (open): Adding additional practice locations by lookup fails

  The "Practice Lookup" button in the "Additional Practice Locations" form of the "Practice Info" step allows you to copy the information from an existing practice. However, the information is not properly saved; the effective date is initially empty, and even if you fill it in its value is ignored and marked as missing; additionally, the first line of the practice address is deleted and marked as missing, as well.
  
  1. Before entering additional practice location: ![1](https://user-images.githubusercontent.com/1494855/34534968-567e158a-f08e-11e7-8088-321d71185a79.png)
  2. Lookup form: ![2](https://user-images.githubusercontent.com/1494855/34534969-568a58a4-f08e-11e7-9645-eeff797aaf6b.png)
  3. Copied data: ![3](https://user-images.githubusercontent.com/1494855/34534970-56974140-f08e-11e7-99ba-3bbb453cbbc3.png)
  4. Filled-out date: ![4](https://user-images.githubusercontent.com/1494855/34534971-56a8737a-f08e-11e7-8a7f-25a5e09493f1.png)
  5. Error: ![5](https://user-images.githubusercontent.com/1494855/34534972-56b9e5b0-f08e-11e7-9355-e1453e79680f.png)

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - bug
* [[https://github.com/solutionguidance/psm/issues/618][618]]   (open): Enter key does not submit quick search form

  If I log in as a provider, click on the quick search text input box, type in a search term, and hit enter, I expect the form to submit and show me the results of the search. Instead, hitting the enter key has no effect, and I have to click on the magnifying glass icon to conduct the search.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - ux
** LABEL CHANGES
   + iu-2.5
* [[https://github.com/solutionguidance/psm/issues/616][616]]   (open): Remove or update DEPENDENCIES.md

  As part of #147 Review licenses of dependencies, we created [DEPENDENCIES.md](https://github.com/SolutionGuidance/psm/blob/1f4e258ab9297b2d3a8f58d61941194d3afe0ae5/docs/DEPENDENCIES.md). At the time, all of our dependencies were vendored (checked in to source control), and we needed to research their origins to make sure we were compliant with their licenses.
  
  Since then, we've made tremendous progress with #16 Manage sets of dependencies with Gradle or another tool, and are actively in the process of removing our last vendored libraries. We've also upgraded most of our dependencies, which we have not captured in `DEPENDENCIES.md`.
  
  I suggest that we delete this file. At this point (or in the very near future), we should be able to use a Gradle plugin to generate a report like this, if we still need it. If we don't still need it, we can simply delete it and be done.

** LABELS
   - Z-REQ-PSM-SQ-1.3
     The PSM shall use modern source code dependency management
     techniques, and shall use up-to-date versions of upstream
     third-party dependencies.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/614][614]]   (open): Encrypt secret configuration options at rest

  The PSM has several configuration options specified in [`cms.properties`](https://github.com/SolutionGuidance/psm/blob/master/psm-app/services/src/main/resources/cms.properties). We expect that some of them will contain secrets:
  
  ```properties
  # hashing keys
  keys.formhash=CHANGEIT
  keys.remembermehash=CHANGEIT
  keys.password.secret=CHANGEIT
  keys.password.iterations=360000
  keys.password.hashWidth=512
  ```
  
  Encrypting these at rest would protect against an attacker that has access to this configuration file, but not to the encryption key necessary to use it. Is this a threat model that states are worried about? Is full-disk encryption (which would be invisible to the PSM) enough to address this concern? If not, we should allow these (and similarly sensitive future configuration options, if any - perhaps those related to LDAP, for example) to be individually encrypted.
  
  See also PR #608 Remove jasypt, which removed an unmaintained library which provided property file encryption. Make sure that whatever we replace it with is FIPS-compatible, per #465.

** LABELS
   - Z-REQ-PSM-AD-5.17
     The PSM shall use only FIPS Pub 140-2-approved (or higher)
     encryption algorithms.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - security
   - state-question
** LABEL CHANGES
   + ad-1.4
   + ad-5.1
   + ad-5.13
* [[https://github.com/solutionguidance/psm/issues/613][613]] (closed): Use HTML5 instead of XHTML

  Using HTML5 will allow us to use built-in placeholder text (c.f. #612) and other modern features.  We can add more advantages to this issue as we come across them -- there may be some changes related to the accessibility work, as well.
  
  @jasonaowen points to this [reference article](http://oli.jp/2009/html5-structure4/).
  

** LABELS
   - Z-REQ-PSM-FR-10.2
     The PSM shall be accessible in compliance with Section 508 of the
     Rehabilitation Act.
     <<< FR 10. Compliance >>>

   - Z-REQ-PSM-SQ-1.5
     The PSM shall use D.R.Y. coding principles to avoid unnecessary
     complexity, inflexibility, redundancy, and denormalization in the
     source code and database schemas, and to use precise terminology
     in data structures and operations.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - tech-debt
** LABEL CHANGES
   - fr-10.2
   - sq-1.5
   + ad-2.4
   + sq-1.3
* [[https://github.com/solutionguidance/psm/issues/612][612]]   (open): Enrollment search has broken placeholder text

  The enrollment quick search bar has placeholder text ("Search Keyword"), but clicking on it leaves that placeholder text behind.
  
  ![before](https://user-images.githubusercontent.com/1494855/34496678-6d87b75c-efc8-11e7-805d-0b118de0961d.png)
  ![after](https://user-images.githubusercontent.com/1494855/34496677-6d76a49e-efc8-11e7-8a53-ced081535303.png)
  
  This is caused by [extra spaces in the placeholder text](https://github.com/SolutionGuidance/psm/pull/409/files#r159297289), but would better be fixed by using the [HTML5 `placeholder` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-placeholder) - if and when we move to HTML5.

** LABELS
   - Z-REQ-PSM-FR-7.13
     The PSM shall support searching and pattern-matching based on all
     fields accepted as input (and based on all reasonable
     combinations of such fields).
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - bug
   - quick-fix
   - ux
** LABEL CHANGES
   - fr-7.13
   + iu-2.5
* [[https://github.com/solutionguidance/psm/issues/607][607]]   (open): Add link to main PSM app within user help theme

  While testing #601 I got to `/cms/help/index.html` and found that the userhelp doesn't provide a link back to the main PSM application anywhere in the navigation. This is great when [the userhelp is on a standalone site](https://solutionguidance.github.io/psm/userdocs/html/index.html) but not when it's being built and included with the app.
  
  I suggest that we customize a Sphinx theme for the userhelp that we employ when we use Gradle to build the HTML docs *as part of the application*, and that within that theme, in navigation bars, we include relative hyperlinks for one hierarchical level up (thus, the homepage of the app).

** LABELS
   - Z-REQ-PSM-FR-7.2
     The PSM shall provide detailed instructions for completing the
     application via a Help link.
     <<< FR 7. Usability >>>

   - docs
** LABEL CHANGES
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/604][604]]   (open): Serenity tests failing - page title mismatch?

  When I run `./gradlew test aggregate` on master, I get several failures, e.g.,
  
  >    Scenario: Accepts license. Given I am on the individual provider license info page
  >    Scenario: Accepts license. classMethod
  >    Scenario: Accepts practice information. Given I am on the individual provider practice info page
  >    Scenario: Accepts practice information. classMethod
  >    Scenario: Accepts valid individual provider personal information. Given I am on the personal info page
  >    Scenario: Accepts valid individual provider personal information. classMethod
  
  More detail:
  
  > Given I am on the individual provider license info page
  > `net.serenitybdd.core.exceptions.SerenityManagedException: expected:<"[Provider Type Page]"> but was:<"[Dashboard]">`
  
  This is happening whether or not I have created a draft enrollment as a provider - although if I start with a fresh database then instead of "Dashboard" the page title is "Welcome".

** LABELS
   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/600][600]]   (open): Automate release process with checklist & cron job/bot

  We should automate more of our release process.
  
  - [ ] Create a release checklist for use by maintainers, including things like "increment version number", "update the list of PSM capabilities in `README.md`", and "send announcement to `psm-dev` mailing list"
  - [ ] Create and host an automated bot (e.g. a cron job or Zulip bot) that automatically, once a week, runs some automated release processes and emails or Zulip-messages us to remind us to run through the release checklist
  
  The bot/cron job would, for instance, run:
  * `push-javadoc-to-gh-pages.sh`
  * the script to push *userdocs* to GitHub pages introduced in #445
  * perhaps a fine-tooth-comb style set of integration tests?

** LABELS
   - Z-REQ-PSM-FR-3.21
     The PSM shall save administrative/infrastructure cost by
     providing a multi-tenant provider screening solution
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-SQ-1.4
     The PSM shall use documented build, test, release, and
     installation processes that are automated as much as possible,
     for both development and production use.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - docs
   - infra
* [[https://github.com/solutionguidance/psm/issues/599][599]]   (open): Stop checking for access permissions for system-internal lookups

  As mentioned in #546, some parts of our code use user roles intended for end users.  The internals of the software should not depend on some kind of end user existing (in this case, the `system` user) with certain permissions.  @jasonaowen began removing this with #575, and has found some other places where this needs to be updated.

** LABELS
   - Z-REQ-PSM-AD-5.12
     The PSM shall support roles and responsibilities of individuals
     that are separated through assigned information access
     authorization as necessary to prevent malevolent activity.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

* [[https://github.com/solutionguidance/psm/issues/596][596]]   (open): Reduce use of JAXB class generation

  We use [JAXB](https://en.wikipedia.org/wiki/Java_Architecture_for_XML_Binding) in the PSM mainly to serialize to and deserialize from XML for working with JBPM and Drools. We store XML versions of to-be-processed and currently-being-processed enrollments in JBPM's tables, and when it calls back into our code, we deserialize it, do some things, and then re-serialize it.
  
  I propose that we should, when possible, avoid using and remove these JAXB-generated classes. They're harder to understand, and they often duplicate other, traditional Java classes that we also use, which necessitates meaningless type name distinguishment. Here are a few examples:
  
  - What is the difference between [`OwnershipInformation`](https://github.com/SolutionGuidance/psm/blob/6cbecea2b58b51b46fde3f1b76447098e5287eec/psm-app/services/src/main/java/gov/medicaid/entities/OwnershipInformation.java) and [`OwnershipInformationType`](https://github.com/SolutionGuidance/psm/blob/6cbecea2b58b51b46fde3f1b76447098e5287eec/psm-app/cms-business-model/src/main/resources/Entities.xsd#L951-L959)? The names don't give any clues, but it turns out the first is used with Hibernate and the second is a JAXB-generated class.
  - What is the difference between [`LicenseType`](https://github.com/SolutionGuidance/psm/blob/6cbecea2b58b51b46fde3f1b76447098e5287eec/psm-app/services/src/main/java/gov/medicaid/entities/LicenseType.java) and [`LicenseType`](https://github.com/SolutionGuidance/psm/blob/6cbecea2b58b51b46fde3f1b76447098e5287eec/psm-app/cms-business-model/src/main/resources/Entities.xsd#L525-L540)? They have the exact same names in different packages!
  - What is the difference between [`PayToProvider`](https://github.com/SolutionGuidance/psm/blob/6cbecea2b58b51b46fde3f1b76447098e5287eec/psm-app/services/src/main/java/gov/medicaid/entities/PayToProvider.java) and [`PayToProviderType`](https://github.com/SolutionGuidance/psm/blob/6cbecea2b58b51b46fde3f1b76447098e5287eec/psm-app/services/src/main/java/gov/medicaid/entities/PayToProviderType.java)? Both are traditional Java classes, used with Hibernate - and while the second could probably use a better name, I include it here to point out that you can't always tell the JAXB classes because they have `Type` appended to the end of the name.
  
  As a simpler example, and an easier set of classes to remove, some of the parameter and return types are specified in [`EnrollmentServiceAPI.xsd`](https://github.com/SolutionGuidance/psm/blob/b9cd35ef961aca36c0d61c61948b0aae24bf5bd3/psm-app/cms-business-model/src/main/resources/EnrollmentServiceAPI.xsd), such as for the method [`getTicketDetails`](https://github.com/SolutionGuidance/psm/blob/bcab22c4ec8ccc5f7b2c7b2a9519a5c1b09d032f/psm-app/cms-business-process/src/main/java/gov/medicaid/services/impl/EnrollmentWebServiceBean.java#L196-L209). There is only one caller, the return type has only a single member variable, and the parameter type has four simple data types in it. It makes the method harder to understand, and it makes [the single(!) call site](https://github.com/SolutionGuidance/psm/blob/be7d145fb55acc98dcf9eb0b0a554c0b3b04f1db/psm-app/cms-web/src/main/java/gov/medicaid/controllers/EnrollmentPageFlowController.java#L889-L895) harder to understand and harder to modify.
  
  Remove these complicating classes as and when we can.

** LABELS
   - Z-REQ-PSM-SQ-1.5
     The PSM shall use D.R.Y. coding principles to avoid unnecessary
     complexity, inflexibility, redundancy, and denormalization in the
     source code and database schemas, and to use precise terminology
     in data structures and operations.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - backend
   - in progress
   - tech-debt
* [[https://github.com/solutionguidance/psm/issues/588][588]] (closed): Stop memory leak leading to Wildfly Out of Memory errors

  When developers are working locally, they frequently redeploy the PSM many times in the course of a work session.  Their local Wildfly session eventually throws an Out Of Memory error, which means they need to halt work, kill Wildfly, and restart it.  We should find out why Wildfly gradually runs out of memory on repeated deployments, and fix this problem.

** LABELS
   - Z-REQ-PSM-SQ-1.6
     The PSM shall use system resources efficiently and in proportion
     to operational demands and data size.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - infra
* [[https://github.com/solutionguidance/psm/issues/586][586]]   (open): System admin filter box hidden after filtering

  As a system admin, if I filter the list of users, I expect the applied filter to be shown alongside the filtered list, and I expect the `Hide Filter` / `Filter` button to work the same as on the non-filtered list:
  
  ![filter](https://user-images.githubusercontent.com/1494855/34121056-c86df9da-e3f5-11e7-8737-6be4a66ae3e3.gif)

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - bug
   - ux
* [[https://github.com/solutionguidance/psm/issues/582][582]]   (open): Replace deprecated jQuery `.live(events, handler)` in JS code

  As @jasonaowen notes:
  
  >apparently [`.live(events, handler)`](https://api.jquery.com/live/) was deprecated in jQuery 1.7 (we use 1.7.1), and should be replaced with [`.on(events, handler)`](https://api.jquery.com/on/); [`.click(handler)`](https://api.jquery.com/click/) is a convenience method for `.on('click', handler)`.
  
  We should replace occurrences of `.live(events, handler)` in our JS code with non-deprecated methods.

** LABELS
   - Z-REQ-PSM-SQ-1.3
     The PSM shall use modern source code dependency management
     techniques, and shall use up-to-date versions of upstream
     third-party dependencies.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/572][572]]   (open): Review screening rules

  We have a requirement that
  
  > The PSM shall validate entered information as provider fills out application (not at the end of the process).[1]
  
  We validate the entered information with Drools rules in the file [`cms.validation.drl`](https://github.com/solutionguidance/psm/blob/7accb4c29d75c6a6b495d41daca24f6fb079f655/psm-app/cms-business-process/src/main/resources/cms.validation.drl), which are run at each step of the enrollment process; any information that violates the rules prevents the provider from moving to the next screen of the application.
  
  We have another set of rules in [`cms.screening.drl`](https://github.com/solutionguidance/psm/blob/7accb4c29d75c6a6b495d41daca24f6fb079f655/psm-app/cms-business-process/src/main/resources/cms.screening.drl). These rules are run during the enrollment review process, and mostly relate to things like ["the reviewer must validate the NPI"](https://github.com/solutionguidance/psm/blob/3ac7ba0b5b130b45bb5f30be14bb88cda414e551/psm-app/cms-business-process/src/main/resources/cms.screening.drl#L482-L501).
  
  However, there are also screening rules about the content of the enrollment, and those rules should be moved out of the screening rules and into the validation rules, so that the provider can find out about such errors before submitting the enrollment application. (As a side benefit, it is surprising to a reviewer to click "approve" and then not have the enrollment status be set to approved because it failed some rule - reducing the opportunities for that to happen is valuable.)
  
  See also #571 Remove MN-specific rules, one of which raised this problem by being a screening rule rather than a validation rule.
  
  [1] From [RTM.xslx](https://github.com/solutionguidance/psm/blob/7accb4c29d75c6a6b495d41daca24f6fb079f655/requirements/RTM.xlsx), functional reqs, line 90: psm-FR-7.11

** LABELS
   - Z-REQ-PSM-IU-3.1
     The PSM of shall use standardized business rules definitions that
     reside in a separate application or rules engine.
     <<< IU 3.  Technical Service Classification:  Decision Management >>>

   - tech-debt
** LABEL CHANGES
   + sa-4.0
   + sa-4.2
* [[https://github.com/solutionguidance/psm/issues/571][571]]   (open): Remove MN-specific rules

  Several of our Drools rules are Minnesota-specific, such as [requiring audiologists to be licensed in MN](https://github.com/solutionguidance/psm/blob/3ac7ba0b5b130b45bb5f30be14bb88cda414e551/psm-app/cms-business-process/src/main/resources/cms.screening.drl#L112) or [requiring a MN certificate of compliance for a children's mental health residential treatment facility](https://github.com/solutionguidance/psm/blob/12de0147519753a2891017518099a046292118f6/psm-app/cms-business-process/src/main/resources/cms.validation.drl#L3187).
  
  We should delete these rules, both to make the PSM easier to test and to pave the way for other states to integrate the PSM.

** LABELS
   - Z-REQ-PSM-II-4.5
     The PSM shall be configurable where feasible.
     <<< II 4.  Technical Service Classification:  System Extensibility >>>

   - Z-REQ-PSM-IU-3.1
     The PSM of shall use standardized business rules definitions that
     reside in a separate application or rules engine.
     <<< IU 3.  Technical Service Classification:  Decision Management >>>

** LABEL CHANGES
   + sa-4.0
   + sa-4.2
* [[https://github.com/solutionguidance/psm/issues/569][569]]   (open): Missing "current tab" indicator on several pages

  The PSM used to show which tab the current page was on in its navigation bar. See, for example, the small black down arrow under "My Profile" on the service admin's profile page - the only place they still work:
  
  ![screenshot of the service admin's profile page, to demonstrate the small black down arrow under "My Profile"](https://user-images.githubusercontent.com/1494855/33859488-2683d688-dea2-11e7-86ea-65575ab58513.png)
  
  These were lost by accident as [part of our transition to Handlebars](https://github.com/solutionguidance/psm/pull/538#discussion_r156232946). We should restore them, or if they don't matter, remove them entirely.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - bug
   - tech-debt
   - ux
* [[https://github.com/solutionguidance/psm/issues/566][566]] (closed): Invalid CSRF token for 'PDF export' and 'Print' buttons

  I got the following error by:
   - logging in as a provider (p1)
   - clicking on advanced search
   - clicking either the `Export to PDF` or `Print` buttons. 
  
  ```
  Invalid CSRF Token 'null' was found 
  on the request parameter '_csrf' or header 'X-CSRF-TOKEN'.
  ```
  Related to issue #503 Enable CSRF Protection

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-FR-7.6
     The PSM shall allow applicant to print application for their
     records.
     <<< FR 7. Usability >>>

   - tech-debt
** LABEL CHANGES
   + ad-3.3
* [[https://github.com/solutionguidance/psm/issues/565][565]]   (open): Convert all caps labels to css

  Right now some files (e.g. `pca_billing.jsp`) have all caps labels; I imagine that a screen reader would dictate this letter by letter (as though it were an acronym).  If we want the labels to render all caps we should use the css `text-transform: upper` feature instead of having the content itself be all caps.

** LABELS
   - Z-REQ-PSM-FR-10.2
     The PSM shall be accessible in compliance with Section 508 of the
     Rehabilitation Act.
     <<< FR 10. Compliance >>>

   - tech-debt
   - ux
** LABEL CHANGES
   - fr-10.2
   + ad-2.4
* [[https://github.com/solutionguidance/psm/issues/564][564]]   (open): Ownership Information Percentage of Ownership Interest...

  In `cms_web/WebContent/WEB-INF/pages/provider/enrollment/steps/pageTemplate/default/ownership_information.jsp` around line 936 (give or take a few) there is a form field labeled `% of Ownership Interest`
  
  Unlike all other fields in this form, this input has no name.  It's marked as required but since it has no name I imagine it is not properly connected or stored anywhere.  We should investigate and either:
  
  1. remove the field
  2. properly save it
  3. figure out how this is working and maybe make it more clear within the code.

** LABELS
   - Z-REQ-PSM-FR-2.8
     The PSM shall require the following fields: Contact email, Merger
     y/n, Owner/board names and addresses, Care settings, DEA
     controlled substances certification y/n, DEA revocation y/n
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-4.3
     The PSM shall allow providers to update information and initiate
     re-screening process (e.g., in the following situations: name
     change, change of ownership/operator - whether or not it is the
     same practice location, address change, Federal Tax
     Identification Number change at same practice location, change
     from Social Security Number to Federal Tax Identification Number
     at same practice location, change from Federal Tax Identification
     Number to Social Security Number at same practice location,
     payment name or address change, and additional service location)
     <<< FR 4.  Configurable Setting >>>

   - accessibility
   - tech-debt
** LABEL CHANGES
   + ia-4.2
* [[https://github.com/solutionguidance/psm/issues/563][563]]   (open): Write submodule READMEs

  In each project/submodule within `psm-app` we ought to have a `README.md` file to help developers understand what each covers -- expanding a bit on the brief explanation in `docs/DESIGN.md` and the diagrams in `docs`.

** LABELS
   - Z-REQ-PSM-SC-4.3
     The PSM design documents shall utilize a widely supported
     modeling language (e.g., UML, BPMN).
     <<< SC 4.  S&C:  Modularity Standard >>>

   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - docs
* [[https://github.com/solutionguidance/psm/issues/559][559]]   (open): Write sample prose description of code/data flow for 1-2 common PSM use cases

  Splitting off from #466.
  
  I'll be turning a conversation I had with @jasonaowen today into a prose document, to be used in conjunction with an architecture diagram such as https://github.com/solutionguidance/psm/blob/master/team-notes/psm-architecture-for-stakeholders.odg , to help a developer understand code execution and data flow during the course of 1-2 common use cases.

** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/556][556]] (closed): Drop Down Menu Issue

  Hello,
  
  1. Create New Enrollment (You will find my application I started under the NPI: 1245319599 (12/4/2017).
  2. On the "License Info" page, I tried to make a selection from the drop down menu in the "specialty" category, and there wasn't anything in the drop down menu. I couldn't advance. I've attached a screenshot indicating which drop down menu didn't have any selection options.
  
  Thank-you!
  Sarah 
  
  
  
  [OS_Provider Screening Module_Issue_Screenshot_20171204_v1.0_SRH.docx](https://github.com/solutionguidance/psm/files/1529095/OS_Provider.Screening.Module_Issue_Screenshot_20171204_v1.0_SRH.docx)
  

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

* [[https://github.com/solutionguidance/psm/issues/555][555]] (closed): Do not run Serenity tests on external PRs

  We run our Serenity/Selenium tests with the help of Sauce Labs. Using their service requires account information, which we encode in [Travis secured environment variables](https://docs.travis-ci.com/user/environment-variables/#Defining-Variables-in-Repository-Settings). [The Travis docs say](https://docs.travis-ci.com/user/pull-requests/#Pull-Requests-and-Security-Restrictions)
  
  > Travis CI makes encrypted variables and data available only to pull requests coming from the same repository. These are considered trustworthy, as only members with write access to the repository can send them.
  
  We should disable the Serenity tests when the encrypted variables are unavailable, so that pull requests from external repos have a chance at passing.

** LABELS
   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - infra
* [[https://github.com/solutionguidance/psm/issues/554][554]] (closed): Give form input elements a name for accessibility

  Part of issue #510 , we should make sure each form input element has a name for accessibility.  Here is the relevant HTML_CodeSniffer error:
  > This text input element does not have a name available to an accessibility API. Valid names are: label element, title attribute, aria-label attribute, aria-labelledby attribute.
  > Success Criterion:
  > [4.1.2: Name, Role, Value](http://www.w3.org/TR/WCAG20/#ensure-compat-rsv)
  > Suggested Techniques:
  > [H91](http://www.w3.org/TR/WCAG20-TECHS/H91)
  
  And also this error (they often appear together):
  > This form field should be labelled in some way. Use the label element (either with a "for" attribute or 
  > wrapped around the form field), or "title", "aria-label" or "aria-labelledby" attributes as appropriate.
  > Success Criterion:
  > [1.3.1: Info and Relationships](http://www.w3.org/TR/WCAG20/#content-structure-separation-programmatic)
  > Suggested Techniques:
  > [F68](http://www.w3.org/TR/WCAG20-TECHS/F68)

** LABELS
   - Z-REQ-PSM-FR-10.2
     The PSM shall be accessible in compliance with Section 508 of the
     Rehabilitation Act.
     <<< FR 10. Compliance >>>

   - accessibility
** LABEL CHANGES
   - fr-10.2
   + ad-2.4
* [[https://github.com/solutionguidance/psm/issues/553][553]] (closed): Use accessible submit buttons on all forms

  As part of Issue #510, and related to issue #65, we should use accessible submit buttons for forms.
  
  The HTML CodeSniffer error: "This form does not contain a submit button, which creates issues for those who cannot submit the form using the keyboard. Submit buttons are INPUT elements with type attribute "submit" or "image", or BUTTON elements with type "submit" or omitted/invalid."

** LABELS
   - Z-REQ-PSM-FR-10.2
     The PSM shall be accessible in compliance with Section 508 of the
     Rehabilitation Act.
     <<< FR 10. Compliance >>>

   - accessibility
** LABEL CHANGES
   - fr-10.2
   + ad-2.4
* [[https://github.com/solutionguidance/psm/issues/546][546]] (closed): Post processing fails on submitted enrollment applications

  When a user submits an enrollment, several post-processing steps happen, including the LEIE check. These steps are failing on master, and an exception is logged in the WildFly logs (below). The application never receives a risk level, and cannot be resubmitted by an admin.
  
  <details>
    <summary>stack trace</summary>
  
  ```
  11:52:51,035 SEVERE [gov.medicaid.process.enrollment.ScreeningHandler] (default task-1) Access Denied.: gov.medicaid.services.PortalServiceException: Access Denied.
  	at gov.medicaid.services.impl.ProviderEnrollmentServiceBean.checkTicketEntitlement(ProviderEnrollmentServiceBean.java:912)
  	at gov.medicaid.services.impl.ProviderEnrollmentServiceBean.findAttachment(ProviderEnrollmentServiceBean.java:2157)
  	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  	at java.lang.reflect.Method.invoke(Method.java:498)
  	at org.jboss.as.ee.component.ManagedReferenceMethodInterceptor.processInvocation(ManagedReferenceMethodInterceptor.java:52)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:437)
  	at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.doMethodInterception(Jsr299BindingsInterceptor.java:82)
  	at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.processInvocation(Jsr299BindingsInterceptor.java:93)
  	at org.jboss.as.ee.component.interceptors.UserInterceptorFactory$1.processInvocation(UserInterceptorFactory.java:63)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.invocationmetrics.ExecutionTimeInterceptor.processInvocation(ExecutionTimeInterceptor.java:43)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.jpa.interceptor.SBInvocationInterceptor.processInvocation(SBInvocationInterceptor.java:47)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:437)
  	at org.jboss.weld.ejb.AbstractEJBRequestScopeActivationInterceptor.aroundInvoke(AbstractEJBRequestScopeActivationInterceptor.java:64)
  	at org.jboss.as.weld.ejb.EjbRequestScopeActivationInterceptor.processInvocation(EjbRequestScopeActivationInterceptor.java:83)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ee.concurrent.ConcurrentContextInterceptor.processInvocation(ConcurrentContextInterceptor.java:45)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InitialInterceptor.processInvocation(InitialInterceptor.java:21)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.interceptors.ComponentDispatcherInterceptor.processInvocation(ComponentDispatcherInterceptor.java:52)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.pool.PooledInstanceInterceptor.processInvocation(PooledInstanceInterceptor.java:51)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.tx.CMTTxInterceptor.invokeInCallerTx(CMTTxInterceptor.java:254)
  	at org.jboss.as.ejb3.tx.CMTTxInterceptor.required(CMTTxInterceptor.java:329)
  	at org.jboss.as.ejb3.tx.CMTTxInterceptor.processInvocation(CMTTxInterceptor.java:239)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.CurrentInvocationContextInterceptor.processInvocation(CurrentInvocationContextInterceptor.java:41)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.invocationmetrics.WaitTimeInterceptor.processInvocation(WaitTimeInterceptor.java:47)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.security.SecurityContextInterceptor.processInvocation(SecurityContextInterceptor.java:100)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.deployment.processors.StartupAwaitInterceptor.processInvocation(StartupAwaitInterceptor.java:22)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.ShutDownInterceptorFactory$1.processInvocation(ShutDownInterceptorFactory.java:64)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.LoggingInterceptor.processInvocation(LoggingInterceptor.java:67)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ee.component.NamespaceContextInterceptor.processInvocation(NamespaceContextInterceptor.java:50)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.AdditionalSetupInterceptor.processInvocation(AdditionalSetupInterceptor.java:54)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ContextClassLoaderInterceptor.processInvocation(ContextClassLoaderInterceptor.java:64)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)
  	at org.wildfly.security.manager.WildFlySecurityManager.doChecked(WildFlySecurityManager.java:636)
  	at org.jboss.invocation.AccessCheckingInterceptor.processInvocation(AccessCheckingInterceptor.java:61)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)
  	at org.jboss.invocation.PrivilegedWithCombinerInterceptor.processInvocation(PrivilegedWithCombinerInterceptor.java:80)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.ViewService$View.invoke(ViewService.java:198)
  	at org.jboss.as.ee.component.ViewDescription$1.processInvocation(ViewDescription.java:185)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.ProxyInvocationHandler.invoke(ProxyInvocationHandler.java:73)
  	at gov.medicaid.services.ProviderEnrollmentService$$$view13.findAttachment(Unknown Source)
  	at gov.medicaid.services.util.XMLAdapter.associateUploads(XMLAdapter.java:290)
  	at gov.medicaid.services.util.XMLAdapter.mergeFromXML(XMLAdapter.java:233)
  	at gov.medicaid.services.util.XMLAdapter.fromXML(XMLAdapter.java:197)
  	at gov.medicaid.process.enrollment.ScreeningHandler.executeWorkItem(ScreeningHandler.java:108)
  	at org.drools.persistence.jpa.processinstance.JPAWorkItemManager.internalExecuteWorkItem(JPAWorkItemManager.java:55)
  	at org.jbpm.workflow.instance.node.WorkItemNodeInstance.internalTrigger(WorkItemNodeInstance.java:107)
  	at org.jbpm.workflow.instance.impl.NodeInstanceImpl.trigger(NodeInstanceImpl.java:126)
  	at org.jbpm.workflow.instance.impl.NodeInstanceImpl.triggerNodeInstance(NodeInstanceImpl.java:279)
  	at org.jbpm.workflow.instance.impl.NodeInstanceImpl.triggerCompleted(NodeInstanceImpl.java:238)
  	at org.jbpm.workflow.instance.node.JoinInstance.triggerCompleted(JoinInstance.java:152)
  	at org.jbpm.workflow.instance.node.JoinInstance.internalTrigger(JoinInstance.java:65)
  	at org.jbpm.workflow.instance.impl.NodeInstanceImpl.trigger(NodeInstanceImpl.java:126)
  	at org.jbpm.workflow.instance.impl.NodeInstanceImpl.triggerNodeInstance(NodeInstanceImpl.java:279)
  	at org.jbpm.workflow.instance.impl.NodeInstanceImpl.triggerCompleted(NodeInstanceImpl.java:238)
  	at org.jbpm.workflow.instance.impl.ExtendedNodeInstanceImpl.triggerCompleted(ExtendedNodeInstanceImpl.java:47)
  	at org.jbpm.workflow.instance.node.StateBasedNodeInstance.triggerCompleted(StateBasedNodeInstance.java:216)
  	at org.jbpm.workflow.instance.node.StateBasedNodeInstance.triggerCompleted(StateBasedNodeInstance.java:196)
  	at org.jbpm.workflow.instance.node.WorkItemNodeInstance.triggerCompleted(WorkItemNodeInstance.java:247)
  	at org.jbpm.workflow.instance.node.WorkItemNodeInstance.workItemCompleted(WorkItemNodeInstance.java:309)
  	at org.jbpm.workflow.instance.node.WorkItemNodeInstance.signalEvent(WorkItemNodeInstance.java:285)
  	at org.jbpm.workflow.instance.impl.WorkflowProcessInstanceImpl.signalEvent(WorkflowProcessInstanceImpl.java:342)
  	at org.drools.persistence.jpa.processinstance.JPAWorkItemManager.completeWorkItem(JPAWorkItemManager.java:121)
  	at gov.medicaid.process.enrollment.EnrollmentHistoryHandler.executeWorkItem(EnrollmentHistoryHandler.java:78)
  	at org.drools.persistence.jpa.processinstance.JPAWorkItemManager.internalExecuteWorkItem(JPAWorkItemManager.java:55)
  	at org.jbpm.workflow.instance.node.WorkItemNodeInstance.internalTrigger(WorkItemNodeInstance.java:107)
  	at org.jbpm.workflow.instance.impl.NodeInstanceImpl.trigger(NodeInstanceImpl.java:126)
  	at org.jbpm.workflow.instance.impl.NodeInstanceImpl.triggerNodeInstance(NodeInstanceImpl.java:279)
  	at org.jbpm.workflow.instance.node.SplitInstance.internalTrigger(SplitInstance.java:141)
  	at org.jbpm.workflow.instance.impl.NodeInstanceImpl.trigger(NodeInstanceImpl.java:126)
  	at org.jbpm.workflow.instance.impl.NodeInstanceImpl.triggerNodeInstance(NodeInstanceImpl.java:279)
  	at org.jbpm.workflow.instance.impl.NodeInstanceImpl.triggerCompleted(NodeInstanceImpl.java:238)
  	at org.jbpm.workflow.instance.impl.ExtendedNodeInstanceImpl.triggerCompleted(ExtendedNodeInstanceImpl.java:47)
  	at org.jbpm.workflow.instance.node.StateBasedNodeInstance.triggerCompleted(StateBasedNodeInstance.java:216)
  	at org.jbpm.workflow.instance.node.StateBasedNodeInstance.triggerCompleted(StateBasedNodeInstance.java:196)
  	at org.jbpm.workflow.instance.node.WorkItemNodeInstance.triggerCompleted(WorkItemNodeInstance.java:247)
  	at org.jbpm.workflow.instance.node.WorkItemNodeInstance.workItemCompleted(WorkItemNodeInstance.java:309)
  	at org.jbpm.workflow.instance.node.WorkItemNodeInstance.signalEvent(WorkItemNodeInstance.java:285)
  	at org.jbpm.workflow.instance.impl.WorkflowProcessInstanceImpl.signalEvent(WorkflowProcessInstanceImpl.java:342)
  	at org.drools.persistence.jpa.processinstance.JPAWorkItemManager.completeWorkItem(JPAWorkItemManager.java:121)
  	at gov.medicaid.process.enrollment.ValidationHandler.executeWorkItem(ValidationHandler.java:55)
  	at org.drools.persistence.jpa.processinstance.JPAWorkItemManager.internalExecuteWorkItem(JPAWorkItemManager.java:55)
  	at org.jbpm.workflow.instance.node.WorkItemNodeInstance.internalTrigger(WorkItemNodeInstance.java:107)
  	at org.jbpm.workflow.instance.impl.NodeInstanceImpl.trigger(NodeInstanceImpl.java:126)
  	at org.jbpm.workflow.instance.impl.NodeInstanceImpl.triggerNodeInstance(NodeInstanceImpl.java:279)
  	at org.jbpm.workflow.instance.impl.NodeInstanceImpl.triggerCompleted(NodeInstanceImpl.java:238)
  	at org.jbpm.workflow.instance.impl.ExtendedNodeInstanceImpl.triggerCompleted(ExtendedNodeInstanceImpl.java:47)
  	at org.jbpm.workflow.instance.node.StateBasedNodeInstance.triggerCompleted(StateBasedNodeInstance.java:216)
  	at org.jbpm.workflow.instance.node.StateBasedNodeInstance.triggerCompleted(StateBasedNodeInstance.java:196)
  	at org.jbpm.workflow.instance.node.WorkItemNodeInstance.triggerCompleted(WorkItemNodeInstance.java:247)
  	at org.jbpm.workflow.instance.node.WorkItemNodeInstance.workItemCompleted(WorkItemNodeInstance.java:309)
  	at org.jbpm.workflow.instance.node.WorkItemNodeInstance.signalEvent(WorkItemNodeInstance.java:285)
  	at org.jbpm.workflow.instance.impl.WorkflowProcessInstanceImpl.signalEvent(WorkflowProcessInstanceImpl.java:342)
  	at org.drools.persistence.jpa.processinstance.JPAWorkItemManager.completeWorkItem(JPAWorkItemManager.java:121)
  	at gov.medicaid.process.enrollment.PreProcessHandler.executeWorkItem(PreProcessHandler.java:99)
  	at org.drools.persistence.jpa.processinstance.JPAWorkItemManager.internalExecuteWorkItem(JPAWorkItemManager.java:55)
  	at org.jbpm.workflow.instance.node.WorkItemNodeInstance.internalTrigger(WorkItemNodeInstance.java:107)
  	at org.jbpm.workflow.instance.impl.NodeInstanceImpl.trigger(NodeInstanceImpl.java:126)
  	at org.jbpm.workflow.instance.impl.NodeInstanceImpl.triggerNodeInstance(NodeInstanceImpl.java:279)
  	at org.jbpm.workflow.instance.impl.NodeInstanceImpl.triggerCompleted(NodeInstanceImpl.java:238)
  	at org.jbpm.workflow.instance.node.StartNodeInstance.triggerCompleted(StartNodeInstance.java:49)
  	at org.jbpm.workflow.instance.node.StartNodeInstance.internalTrigger(StartNodeInstance.java:41)
  	at org.jbpm.workflow.instance.impl.NodeInstanceImpl.trigger(NodeInstanceImpl.java:126)
  	at org.jbpm.ruleflow.instance.RuleFlowProcessInstance.internalStart(RuleFlowProcessInstance.java:35)
  	at org.jbpm.process.instance.impl.ProcessInstanceImpl.start(ProcessInstanceImpl.java:194)
  	at org.jbpm.workflow.instance.impl.WorkflowProcessInstanceImpl.start(WorkflowProcessInstanceImpl.java:309)
  	at org.jbpm.process.instance.ProcessRuntimeImpl.startProcessInstance(ProcessRuntimeImpl.java:170)
  	at org.jbpm.process.instance.ProcessRuntimeImpl.startProcess(ProcessRuntimeImpl.java:140)
  	at org.drools.common.AbstractWorkingMemory.startProcess(AbstractWorkingMemory.java:1098)
  	at org.drools.impl.StatefulKnowledgeSessionImpl.startProcess(StatefulKnowledgeSessionImpl.java:320)
  	at org.drools.command.runtime.process.StartProcessCommand.execute(StartProcessCommand.java:120)
  	at org.drools.command.runtime.process.StartProcessCommand.execute(StartProcessCommand.java:39)
  	at org.drools.command.impl.DefaultCommandService.execute(DefaultCommandService.java:36)
  	at org.drools.persistence.SingleSessionCommandService.execute(SingleSessionCommandService.java:373)
  	at org.drools.command.impl.CommandBasedStatefulKnowledgeSession.startProcess(CommandBasedStatefulKnowledgeSession.java:223)
  	at gov.medicaid.services.impl.BusinessProcessServiceBean.enroll(BusinessProcessServiceBean.java:194)
  	at gov.medicaid.services.impl.BusinessProcessServiceBean.submitTicket(BusinessProcessServiceBean.java:530)
  	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  	at java.lang.reflect.Method.invoke(Method.java:498)
  	at org.jboss.as.ee.component.ManagedReferenceMethodInterceptor.processInvocation(ManagedReferenceMethodInterceptor.java:52)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:437)
  	at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.doMethodInterception(Jsr299BindingsInterceptor.java:82)
  	at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.processInvocation(Jsr299BindingsInterceptor.java:93)
  	at org.jboss.as.ee.component.interceptors.UserInterceptorFactory$1.processInvocation(UserInterceptorFactory.java:63)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.invocationmetrics.ExecutionTimeInterceptor.processInvocation(ExecutionTimeInterceptor.java:43)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.jpa.interceptor.SBInvocationInterceptor.processInvocation(SBInvocationInterceptor.java:47)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.tx.EjbBMTInterceptor.handleInvocation(EjbBMTInterceptor.java:103)
  	at org.jboss.as.ejb3.tx.BMTInterceptor.processInvocation(BMTInterceptor.java:58)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:437)
  	at org.jboss.weld.ejb.AbstractEJBRequestScopeActivationInterceptor.aroundInvoke(AbstractEJBRequestScopeActivationInterceptor.java:64)
  	at org.jboss.as.weld.ejb.EjbRequestScopeActivationInterceptor.processInvocation(EjbRequestScopeActivationInterceptor.java:83)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ee.concurrent.ConcurrentContextInterceptor.processInvocation(ConcurrentContextInterceptor.java:45)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InitialInterceptor.processInvocation(InitialInterceptor.java:21)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.interceptors.ComponentDispatcherInterceptor.processInvocation(ComponentDispatcherInterceptor.java:52)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.pool.PooledInstanceInterceptor.processInvocation(PooledInstanceInterceptor.java:51)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.CurrentInvocationContextInterceptor.processInvocation(CurrentInvocationContextInterceptor.java:41)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.invocationmetrics.WaitTimeInterceptor.processInvocation(WaitTimeInterceptor.java:47)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.security.SecurityContextInterceptor.processInvocation(SecurityContextInterceptor.java:100)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.deployment.processors.StartupAwaitInterceptor.processInvocation(StartupAwaitInterceptor.java:22)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.ShutDownInterceptorFactory$1.processInvocation(ShutDownInterceptorFactory.java:64)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.LoggingInterceptor.processInvocation(LoggingInterceptor.java:67)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ee.component.NamespaceContextInterceptor.processInvocation(NamespaceContextInterceptor.java:50)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.AdditionalSetupInterceptor.processInvocation(AdditionalSetupInterceptor.java:54)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ContextClassLoaderInterceptor.processInvocation(ContextClassLoaderInterceptor.java:64)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)
  	at org.wildfly.security.manager.WildFlySecurityManager.doChecked(WildFlySecurityManager.java:636)
  	at org.jboss.invocation.AccessCheckingInterceptor.processInvocation(AccessCheckingInterceptor.java:61)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)
  	at org.jboss.invocation.PrivilegedWithCombinerInterceptor.processInvocation(PrivilegedWithCombinerInterceptor.java:80)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.ViewService$View.invoke(ViewService.java:198)
  	at org.jboss.as.ee.component.ViewDescription$1.processInvocation(ViewDescription.java:185)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.ProxyInvocationHandler.invoke(ProxyInvocationHandler.java:73)
  	at gov.medicaid.services.BusinessProcessService$$$view12.submitTicket(Unknown Source)
  	at gov.medicaid.services.impl.EnrollmentWebServiceBean.submitEnrollment(EnrollmentWebServiceBean.java:321)
  	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  	at java.lang.reflect.Method.invoke(Method.java:498)
  	at org.jboss.as.ee.component.ManagedReferenceMethodInterceptor.processInvocation(ManagedReferenceMethodInterceptor.java:52)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:437)
  	at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.doMethodInterception(Jsr299BindingsInterceptor.java:82)
  	at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.processInvocation(Jsr299BindingsInterceptor.java:93)
  	at org.jboss.as.ee.component.interceptors.UserInterceptorFactory$1.processInvocation(UserInterceptorFactory.java:63)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.invocationmetrics.ExecutionTimeInterceptor.processInvocation(ExecutionTimeInterceptor.java:43)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.jpa.interceptor.SBInvocationInterceptor.processInvocation(SBInvocationInterceptor.java:47)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:437)
  	at org.jboss.weld.ejb.AbstractEJBRequestScopeActivationInterceptor.aroundInvoke(AbstractEJBRequestScopeActivationInterceptor.java:73)
  	at org.jboss.as.weld.ejb.EjbRequestScopeActivationInterceptor.processInvocation(EjbRequestScopeActivationInterceptor.java:83)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ee.concurrent.ConcurrentContextInterceptor.processInvocation(ConcurrentContextInterceptor.java:45)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InitialInterceptor.processInvocation(InitialInterceptor.java:21)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.interceptors.ComponentDispatcherInterceptor.processInvocation(ComponentDispatcherInterceptor.java:52)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.pool.PooledInstanceInterceptor.processInvocation(PooledInstanceInterceptor.java:51)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.tx.CMTTxInterceptor.invokeInNoTx(CMTTxInterceptor.java:263)
  	at org.jboss.as.ejb3.tx.CMTTxInterceptor.notSupported(CMTTxInterceptor.java:313)
  	at org.jboss.as.ejb3.tx.CMTTxInterceptor.processInvocation(CMTTxInterceptor.java:237)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.CurrentInvocationContextInterceptor.processInvocation(CurrentInvocationContextInterceptor.java:41)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.invocationmetrics.WaitTimeInterceptor.processInvocation(WaitTimeInterceptor.java:47)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.security.SecurityContextInterceptor.processInvocation(SecurityContextInterceptor.java:100)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.deployment.processors.StartupAwaitInterceptor.processInvocation(StartupAwaitInterceptor.java:22)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.ShutDownInterceptorFactory$1.processInvocation(ShutDownInterceptorFactory.java:64)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.LoggingInterceptor.processInvocation(LoggingInterceptor.java:67)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ee.component.NamespaceContextInterceptor.processInvocation(NamespaceContextInterceptor.java:50)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.AdditionalSetupInterceptor.processInvocation(AdditionalSetupInterceptor.java:54)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ContextClassLoaderInterceptor.processInvocation(ContextClassLoaderInterceptor.java:64)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)
  	at org.wildfly.security.manager.WildFlySecurityManager.doChecked(WildFlySecurityManager.java:636)
  	at org.jboss.invocation.AccessCheckingInterceptor.processInvocation(AccessCheckingInterceptor.java:61)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)
  	at org.jboss.invocation.PrivilegedWithCombinerInterceptor.processInvocation(PrivilegedWithCombinerInterceptor.java:80)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.ViewService$View.invoke(ViewService.java:198)
  	at org.jboss.as.ee.component.ViewDescription$1.processInvocation(ViewDescription.java:185)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.ProxyInvocationHandler.invoke(ProxyInvocationHandler.java:73)
  	at gov.medicaid.services.EnrollmentWebService$$$view11.submitEnrollment(Unknown Source)
  	at gov.medicaid.controllers.EnrollmentPageFlowController.submit(EnrollmentPageFlowController.java:1077)
  	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  	at java.lang.reflect.Method.invoke(Method.java:498)
  	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
  	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
  	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
  	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
  	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
  	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
  	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
  	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
  	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
  	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
  	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
  	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
  	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
  	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)
  	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
  	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
  	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
  	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
  	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
  	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
  	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:158)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
  	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
  	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
  	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
  	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
  	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:124)
  	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
  	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
  	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
  	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
  	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
  	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
  	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
  	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
  	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
  	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
  	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
  	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
  	at org.springframework.web.multipart.support.MultipartFilter.doFilterInternal(MultipartFilter.java:122)
  	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
  	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
  	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
  	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
  	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
  	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
  	at org.wildfly.extension.undertow.security.SecurityContextAssociationHandler.handleRequest(SecurityContextAssociationHandler.java:78)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
  	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
  	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
  	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
  	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
  	at io.undertow.security.handlers.NotificationReceiverHandler.handleRequest(NotificationReceiverHandler.java:50)
  	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
  	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
  	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
  	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
  	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
  	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
  	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
  	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
  	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:202)
  	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:805)
  	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
  	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
  	at java.lang.Thread.run(Thread.java:748)
  ```
  </details>

** LABELS
   - Z-REQ-PSM-FR-3.13
     The PSM shall have the capability to track and support the
     screening of applications (and ongoing provider updates) for
     National Provider Identifier (NPIs), State licenses, Specialty
     Board certification as appropriate, review team visits when
     necessary, and any other State and/or Federal Requirement.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.23
     The PSM shall reduce processing and transaction time for
     submitting and receiving queries to authoritative data sources
     regarding provider credentials and sanctions.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-IU-3.1
     The PSM of shall use standardized business rules definitions that
     reside in a separate application or rules engine.
     <<< IU 3.  Technical Service Classification:  Decision Management >>>

   - backend
   - bug
* [[https://github.com/solutionguidance/psm/issues/539][539]] (closed): Admin dashboard menu has "action" instead of "status"

  @jcunard points out that the admin Dashboard menu has "Action" as a header for a column that shows the status of the enrollment application (Draft, Pending, Accepted, etc).  I suspect this is because "Action" is the header of the table under the Enrollments tab which does indeed include actions.  The Dashboard view should have "Status" as the header.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - quick-fix
   - ux
* [[https://github.com/solutionguidance/psm/issues/533][533]] (closed): Travis/Sauce Labs disconnection problem?

  Our Travis Build \#1193, which was run when I merged PR #529, Sauce Labs wasn't able to start the job:
  
  ```
          net.thucydides.core.webdriver.UnsupportedDriverException: Could not instantiate new WebDriver instance of type class org.openqa.selenium.remote.RemoteWebDriver (Sauce could not start your job. For more information on what happened, please visit {Sauce Labs link here} (WARNING: The server did not provide any stacktrace information)
  ```
  
  Sauce Labs Test Details tells me "Your test errored. No active tunnel found for identifier 1193.1"
  
  Do you have any ideas about this, @slifty?
  
  Earlier in the Travis log for \#1193, I see:
  
  ```
  E: Failed to fetch http://dl.hhvm.com/ubuntu/dists/trusty/main/binary-i386/Packages  503  Service Unavailable [IP: 64.50.233.100 80]
  E: Some index files failed to download. They have been ignored, or old ones used instead.
  ```
  <sub>Side note: why is the OSL not using HTTPS?</sub>
  
  That subdir does indeed seem to be empty, so I'm not sure why we're trying to fetch it.  The last successful build on master was \#1172, which didn't have this problem.
  
  On the other hand, build \#1196 succeeded and appears to have run the Sauce Lab tests correctly.

** LABELS
   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - infra
* [[https://github.com/solutionguidance/psm/issues/528][528]]   (open): Potential misuse of the PSM by an agent

  We've been discussing the agent/provider permissions divide in #10, and someone brought up a possible problem with allowing an agent unlimited access to a provider's account:
  
  >Administrative person (an agent) in a clinic in one state (State 1) has access to her physician supervisor’s information including NPI. She moves to another state (State 2) and starts working in a low-risk provider type practice (no site visit required), also as an agent. She applies to enroll her old boss through the provider screening module, without his knowledge and lists his bank information as hers. Because she works for a clinic in State 2, she knows some Medicaid beneficiaries and the information needed to submit claims for them. After getting her old boss from another state enrolled in State 2's MMIS, she starts filing fraudulent claims with payments going to her.
  
  We're not handling bank information in the PSM, but this points to one reason why we should be making it easier for states to share information about their providers.  If an NPI is already registered in one state, we might want to add extra scrutiny to that NPI being registered in another state.  There might be valid reasons for it (a provider lives on the border and performs services in both states), but I can see an argument for it indicating higher risk.
  
  Unfortunately, I don't think we can present a purely technical solution to the broader problem of agents misusing their access to provider accounts.  There will always be providers that give their agents access to their accounts, no matter what technical obstacles we put in the way.  
  
  Since this example involves another state, we could also make sure that the address given by the provider matches the one associated with their license in the state's file.  Presumably, in the example above, the provider wouldn't be licensed in State 2, and so would be rejected by the PSM.  We'll have to talk to states about how much friction that's likely to cause for legitimate providers: how often do they update their license files?  How often do providers move?

** LABELS
   - Z-REQ-PSM-AD-5.12
     The PSM shall support roles and responsibilities of individuals
     that are separated through assigned information access
     authorization as necessary to prevent malevolent activity.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - Z-REQ-PSM-FR-2.19
     The PSM shall have the capability to capture critical attributes
     including licensing information, financial data, and any other
     data attributes which could impact a risk level.
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-3.18
     The PSM shall Improve effectiveness of the risk-screening model
     in detecting fraud based issues
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.19
     The PSM shall Improve technical soundness of risk-scoring in
     flagging potential fraudulent patterns and tendencies
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-4.8
     The PSM shall support provider agents (a.k.a. service agents
     a.k.a. non-provider users) who act on a provider's behalf and
     whose authorization may be a subset of that provider's.
     <<< FR 4.  Configurable Setting >>>

   - security
** LABEL CHANGES
   + ad-5.16
* [[https://github.com/solutionguidance/psm/issues/523][523]]   (open): Lock down ops dashboard

  The operations dashboard, as seen when logging in as a service administrator (such as the default user `admin`), contains "recent events": enrollments that have been approved or denied.
  
  These recent events should only be visible to service admins, and should not be visible to anyone else. Lock down access based on the role(s) of the logged-in user.
  
  See also issue #10.

** LABELS
   - Z-REQ-PSM-AD-5.12
     The PSM shall support roles and responsibilities of individuals
     that are separated through assigned information access
     authorization as necessary to prevent malevolent activity.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - Z-REQ-PSM-AD-5.18
     The PSM shall be secure from unauthorized access or use, and
     shall sanitize inputs and outputs where possible so as to avoid
     compromising itself or other systems.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - security
** LABEL CHANGES
   - ad-5.18
   + ad-1.4
   + ad-5.1
   + ad-5.13
* [[https://github.com/solutionguidance/psm/issues/521][521]]   (open): agreement and addendum interface: can't select items using checkboxes

  ![cannot-delete-agreements-addenda](https://user-images.githubusercontent.com/842790/32293845-d0761d06-bf1a-11e7-8fce-a40f809941a2.png)
  
  I've logged in as a service admin. I can use the checkbox at the top of this column to select all the agreements and addenda, but the checkboxes for individual rows are grayed out. This means that, from this screen, I can't select an individual agreement or subset of agreements to delete.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - bug
   - ux
* [[https://github.com/solutionguidance/psm/issues/520][520]]   (open): Upgrade to WildFly 11

  Last week, [WildFly 11 was released](http://wildfly.org/news/2017/10/23/WildFly11-Final-Released/). We should:
  
  - [x] Start using it locally
  - [ ] Update the build to use the new provided libraries
  - [ ] Open and fix any issues we encounter
  - [ ] Start using it in CI
  - [ ] Update our docs and install scripts for the new version

** LABELS
   - Z-REQ-PSM-SQ-1.3
     The PSM shall use modern source code dependency management
     techniques, and shall use up-to-date versions of upstream
     third-party dependencies.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - infra
   - task
* [[https://github.com/solutionguidance/psm/issues/519][519]] (closed): Error shows up/persists inconsistently

  See [this comment](https://github.com/OpenTechStrategies/psm/pull/505#issuecomment-340824438) in #505.  Sometimes, an error on the forgot password form persists when it shouldn't, meaning that it turns up on the login screen incorrectly.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - bug
   - task
   - ux
* [[https://github.com/solutionguidance/psm/issues/518][518]] (closed): Implement accessibility checking in CI

  Integrate automated checking of errors in WCAG Level A and Level AA standards in our continuous integration. This will probably require wiring something into Serenity/Selenium so that the tool can simulate logging in, filling in forms, and navigating; automated accessibility (a11y) tools often look for elements within the rendered HTML and the CSS/JS. [axe-core](https://github.com/dequelabs/axe-core) and [pa11y-ci](https://github.com/pa11y/pa11y-ci) seem promising.
  
  Context: as discussed in #415, we [need to ensure](https://www.access-board.gov/guidelines-and-standards/communications-and-it/about-the-ict-refresh/overview-of-the-final-rule) that the PSM meets Level A and Level AA Success Criteria and Conformance Requirements in WCAG 2.0 in order to meet the requirements of [Section 508 of the Rehabilitation Act of 1973](https://www.section508.gov/content/learn/laws-and-policies) and, more broadly, [the Department of Justice's interpretation of the Americans with Disabilities Act Title II Regulations](https://www.ada.gov/regs2010/titleII_2010/titleII_2010_regulations.htm).

** LABELS
   - Z-REQ-PSM-FR-10.2
     The PSM shall be accessible in compliance with Section 508 of the
     Rehabilitation Act.
     <<< FR 10. Compliance >>>

   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - accessibility
   - infra
   - task
** LABEL CHANGES
   - fr-10.2
   + ad-2.4
* [[https://github.com/solutionguidance/psm/issues/517][517]] (closed): Add language declaration to HTML header

  `pa11y` reminds us that, per `WCAG2AA.Principle3.Guideline3_1.3_1_1.H57.2`, The `html` element should have a `lang` or `xml:lang` attribute which describes the language of the document.
  
  Example of current code:
  ~~~
  <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
  <html xmlns="http://www.w3.org/1999/xhtml"><head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  ~~~
  
  Success Criterion:
  [3.1.1: Language of Page](http://www.w3.org/TR/WCAG20/#meaning-doc-lang-id)
  Suggested Techniques:
  [H57](http://www.w3.org/TR/WCAG20-TECHS/H57)

** LABELS
   - Z-REQ-PSM-FR-10.2
     The PSM shall be accessible in compliance with Section 508 of the
     Rehabilitation Act.
     <<< FR 10. Compliance >>>

   - accessibility
   - quick-fix
   - ux
** LABEL CHANGES
   - fr-10.2
   + ad-2.4
* [[https://github.com/solutionguidance/psm/issues/516][516]] (closed): duplicate ID for Next button on Summary Information page during enrollment

  `pa11y` tells me that we're breaking WCAG2AA.Principle4.Guideline4_1.4_1_1.F77: Duplicate id attribute value `nextBtn` found on the web page. This is because we show a "Next" button before and after the summary display.
  
  Code: line 358 and line 1004 on the Summary page during an enrollment application:
  `<a id="nextBtn" class="greyBtn" href="javascript:submitFormById('enrollmentForm',%20'/cms/provider/enrollment/steps/next')"><span class="btR"><span class="btM"><span class="icon">Next</span></span></span></a>`
  `<a id="nextBtn" class="greyBtn" href="javascript:submitFormById('enrollmentForm',%20'/cms/provider/enrollment/steps/next')"><span class="btR"><span class="btM"><span class="icon">Next</span></span></span></a>`
  
  Selector: `#nextBtn`.
  
  I see that we also have two "Previous" elements for the user to select, but that those don't use an `id` which is, I presume, why the accessibility checker doesn't complain.

** LABELS
   - Z-REQ-PSM-FR-10.2
     The PSM shall be accessible in compliance with Section 508 of the
     Rehabilitation Act.
     <<< FR 10. Compliance >>>

   - accessibility
   - ux
** LABEL CHANGES
   - fr-10.2
   + ad-2.4
* [[https://github.com/solutionguidance/psm/issues/514][514]] (closed): fix color contrast in headers and footers for accessibility

  From HTML CodeSniffer/`pa11y`, we have a few color contrast issues with headers, footers, etc. Example:
  
  * "Contributions welcome" footer: "This element has insufficient contrast at this conformance level. Expected a contrast ratio of at least 4.5:1, but text in this element has a contrast ratio of 2.4:1. Recommendation: change text colour to #004f7d." `WCAG2AA.Principle1.Guideline1_4.1_4_3.G18.Fail`
  (`<a href="https://github.com/OpenTechStrategies/psm">Contributions welcome</a>`)
  
  * Logout link in header: "This element has insufficient contrast at this conformance level. Expected a contrast ratio of at least 4.5:1, but text in this element has a contrast ratio of 3.93:1. Recommendation: change background to #033a6e." (`...<a href="javascript:;">Help</a><a href="/cms/j_spring_security_logout">Logout</a> `)
  
  Success Criterion:
  [1.4.3: Contrast (Minimum)](http://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast)
  Suggested Techniques:
  [G18](http://www.w3.org/TR/WCAG20-TECHS/G18)
  

** LABELS
   - Z-REQ-PSM-FR-10.2
     The PSM shall be accessible in compliance with Section 508 of the
     Rehabilitation Act.
     <<< FR 10. Compliance >>>

   - accessibility
   - ux
** LABEL CHANGES
   - fr-10.2
   + ad-2.4
* [[https://github.com/solutionguidance/psm/issues/513][513]]   (open): ensure screenreaders can see headers on tables

  For accessibility reasons, we should double-check that we comply with Section 508, clause G, Table Headers, when we use tables like `practiceLookupTableTemplate` and `tableLicenseTemplate`:
  
  > If this is a data table, ensure row and column headers are identified using `th` elements.

** LABELS
   - Z-REQ-PSM-FR-10.2
     The PSM shall be accessible in compliance with Section 508 of the
     Rehabilitation Act.
     <<< FR 10. Compliance >>>

   - accessibility
   - ux
** LABEL CHANGES
   - fr-10.2
   + ad-2.4
* [[https://github.com/solutionguidance/psm/issues/512][512]]   (open): Logically nest header elements

  In a few places our header nesting is wrong, causing accessibility issues (which `pa11y` calls out as `Section508.D.HeadingOrder`). Examples where an `h3` should be an `h2`:
  
  * `psm-app/cms-web/WebContent/WEB-INF/pages/provider/enrollment/steps/screening_errors.jsp`:        `<h3>The following problems were identified for this enrollment during screening:</h3>`
  * the Print Preview `h3` in the Provider Dashboard

** LABELS
   - Z-REQ-PSM-FR-10.2
     The PSM shall be accessible in compliance with Section 508 of the
     Rehabilitation Act.
     <<< FR 10. Compliance >>>

   - accessibility
   - ux
** LABEL CHANGES
   - fr-10.2
   + ad-2.4
* [[https://github.com/solutionguidance/psm/issues/511][511]]   (open): Describe form input error to user in text

  If an input error is automatically detected in this form, check that the item(s) in error are identified and the error(s) are described to the user in text. In `pa11y` this is `Section508.N.Errors`. Examples of our current noncompliance:
  
  ~~~
  <form action=\"\" id=\"enrollmentForm\" method=\"post\" enctype=\"multipart/form-data\">                    \n<div class...</form>
  <form action=\"/cms/provider/enrollment/lookup\" id=\"practiceLookupForm\">\n                        <span>...</form>
  <form id=\"paginationForm\" action=\"/cms/provider/dashboard/list/filter\" method=\"get\">\n<div class=\"filterPanel\" style...</form>
  ~~~

** LABELS
   - Z-REQ-PSM-FR-10.2
     The PSM shall be accessible in compliance with Section 508 of the
     Rehabilitation Act.
     <<< FR 10. Compliance >>>

   - accessibility
   - ux
** LABEL CHANGES
   - fr-10.2
   + ad-2.4
* [[https://github.com/solutionguidance/psm/issues/510][510]]   (open): Improve keyboard navigation for forms & elements

  We should ensure that our forms can be navigated using the keyboard and other accessibility tools. In `pa11y` this is `Section508.N.KeyboardNav` ("When electronic forms are designed to be completed on-line, the form shall allow people using assistive technology to access the information, field elements, and functionality required for completion and submission of the form, including all directions and cues."). In HTML CodeSniffer:
  
  > This text input element does not have a name available to an accessibility API. Valid names are: label element, title attribute, aria-label attribute, aria-labelledby attribute.
  > Success Criterion:
  > [4.1.2: Name, Role, Value](http://www.w3.org/TR/WCAG20/#ensure-compat-rsv)
  > Suggested Techniques:
  > [H91](http://www.w3.org/TR/WCAG20-TECHS/H91)
  
  Examples where we currently do not comply:
  
  ~~~
  <input id="enrollmentNumber" class="text" value="" type="text">
  <form action=\"/cms/provider/enrollment/lookup\" id=\"practiceLookupForm\">\n <span>...</form>
  <form action=\"\" id=\"enrollmentForm\" method=\"post\" enctype=\"multipart/form-data\">                    \n<div class...</form>
  <form action=\"/cms/provider/enrollment/lookup\" id=\"practiceLookupForm\">\n                        <span>...</form>
  <form id=\"paginationForm\" action=\"/cms/provider/dashboard/list/filter\" method=\"get\">\n<div class=\"filterPanel\" style...</form>
  <form action=\"/cms/agent/enrollment/approve\" method=\"post\" id=\"approvalForm\">\n\n                        <div ...</form>
  ~~~

** LABELS
   - Z-REQ-PSM-FR-10.2
     The PSM shall be accessible in compliance with Section 508 of the
     Rehabilitation Act.
     <<< FR 10. Compliance >>>

   - accessibility
   - ux
** LABEL CHANGES
   - fr-10.2
   + ad-2.4
* [[https://github.com/solutionguidance/psm/issues/509][509]] (closed): Improve accessibility (e.g. alt text) for images

  To better serve people who use screenreaders, we should ensure that the `img` element's `alt` text serves the same purpose and presents the same information as the image. In `pa11y` this is `Section508.A.Img.GeneralAlt`. Examples where we currently do not comply with this (mostly with modal icons) are in comments below.
  
  [Here is a guide to writing good alt text](https://denise.dreamwidth.org/2013/01/31/writing-alt-text.html).

** LABELS
   - Z-REQ-PSM-FR-10.2
     The PSM shall be accessible in compliance with Section 508 of the
     Rehabilitation Act.
     <<< FR 10. Compliance >>>

   - accessibility
   - ux
** LABEL CHANGES
   - fr-10.2
   + ad-2.4
* [[https://github.com/solutionguidance/psm/issues/508][508]] (closed): Provide descriptive labels/instructions for user input in forms

  We need to provide descriptive labels or instructions (including for required fields) for user input in forms. In `pa11y` this is `Section508.N.Labels`. Examples where we are currently not doing this:
  
  ~~~
  <form action=\"\" id=\"enrollmentForm\" method=\"post\" enctype=\"multipart/form-data\">                    \n<div class...</form>
  <form action=\"/cms/provider/enrollment/lookup\" id=\"practiceLookupForm\">\n                        <span>...</form>
  <form id=\"paginationForm\" action=\"/cms/provider/dashboard/list/filter\" method=\"get\">\n<div class=\"filterPanel\" style...</form>
  ~~~

** LABELS
   - Z-REQ-PSM-FR-10.2
     The PSM shall be accessible in compliance with Section 508 of the
     Rehabilitation Act.
     <<< FR 10. Compliance >>>

   - accessibility
   - ux
** LABEL CHANGES
   - fr-10.2
   + ad-2.4
* [[https://github.com/solutionguidance/psm/issues/507][507]] (closed): Fix anchors that have no link content

  One of our Section 508 problems is anchors without link content. In `pa11y` this error is `Section508.L.NoContentAnchor`.
  
  Many of our pages use an anchor element with a valid `href` attribute, but we supply no link content. Examples:
  ~~~
  <a href=\"javascript:;\" class=\"closeModal\"></a>`
  <a id=\"enrollmentQuickSearch\" href=\"http://localhost:8080/cms/provider/search/quick\" class=\"search\"></a>
  ~~~
  
  This messes with screenreaders.

** LABELS
   - Z-REQ-PSM-FR-10.2
     The PSM shall be accessible in compliance with Section 508 of the
     Rehabilitation Act.
     <<< FR 10. Compliance >>>

   - accessibility
   - ux
** LABEL CHANGES
   - fr-10.2
   + ad-2.4
* [[https://github.com/solutionguidance/psm/issues/504][504]] (closed): Stack trace when mail server unavailable

  If you try to use the "Forgot Password" feature when you don't have a mail server running, you should get an error. Instead, we currently show a stack trace, starting with
  
  > org.apache.jasper.JasperException: javax.el.PropertyNotFoundException: The class 'java.lang.String' does not have the property 'enabled'.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - backend
   - bug
* [[https://github.com/solutionguidance/psm/issues/499][499]] (closed): Header bug: Functions tab disappears on My Profile tab

   For a logged-in service admin, the header menu should always include "Functions."  That item disappears when the admin navigates to My Profile.  Hat tip once again to @jcunard, [on the list](https://groups.google.com/forum/#!topic/psm-dev/q-XGEsndkhA).

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - bug
   - quick-fix
* [[https://github.com/solutionguidance/psm/issues/498][498]]   (open): Providers can edit submitted enrollments

  If a provider searches for their submitted enrollment (e.g., one with a "Pending" status) in simple or advanced search, it will show up in results.  The results include an "Action" column, like the Dashboard, and one of the possible actions is "Edit."  This allows providers to edit a submitted enrollment.  We have been clear that providers are **not** able to edit a submitted enrollment, and @chj124's comments have confirmed that.
  
  This looks like a security hole to me -- thanks for catching it, @jcunard!  See [the list](https://groups.google.com/forum/#!topic/psm-dev/q-XGEsndkhA) for screenshots.
  
  _(Security problems will be handled in accordance with #92 once the PSM is in production use.)_

** LABELS
   - Z-REQ-PSM-AD-5.18
     The PSM shall be secure from unauthorized access or use, and
     shall sanitize inputs and outputs where possible so as to avoid
     compromising itself or other systems.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - backend
   - question
   - security
** LABEL CHANGES
   - ad-5.18
   + ad-1.4
   + ad-5.13
* [[https://github.com/solutionguidance/psm/issues/497][497]]   (open): Allow non-provider users to update their own passwords

  Currently, on the "My Profile" page, only providers have the option to change their passwords.  Other users should also be able to do so.  This might be related to #34 and #10 -- that is, as we give different roles one framework of permissions we'll be able to give them all the ability to edit their own password.  Then it's just a matter of updating the UI.
  
  See @jcunard's [post to the list](https://groups.google.com/forum/#!topic/psm-dev/q-XGEsndkhA) for related screenshots.

** LABELS
   - Z-REQ-PSM-FR-4.8
     The PSM shall support provider agents (a.k.a. service agents
     a.k.a. non-provider users) who act on a provider's behalf and
     whose authorization may be a subset of that provider's.
     <<< FR 4.  Configurable Setting >>>

   - backend
   - enhancement
   - security
   - ux
** LABEL CHANGES
   + ad-5.3
* [[https://github.com/solutionguidance/psm/issues/496][496]] (closed): Simple search (field in upper right) fails to find results

  As a service admin, I used the simple search field to search for a substring of a provider name ("DME") on my local copy.  The provider "DME Test" had submitted two enrollments, and the provider "DME" had submitted one as well, so I would expect one or more of those to turn up in search results.  None did.  Similarly, @jcunard mentioned [on the list](https://groups.google.com/forum/#!topic/psm-dev/q-XGEsndkhA) that the search failed to find her user profile.

** LABELS
   - Z-REQ-PSM-FR-7.13
     The PSM shall support searching and pattern-matching based on all
     fields accepted as input (and based on all reasonable
     combinations of such fields).
     <<< FR 7. Usability >>>

   - bug
** LABEL CHANGES
   - fr-7.13
   + iu-2.5
* [[https://github.com/solutionguidance/psm/issues/495][495]]   (open): DRY the download and sha script

  We have this little snippet used in a bunch of our scripts that downloads and verifies the integrity of third party resources.  We should source it from a single location rather than copying it everywhere.

** LABELS
   - Z-REQ-PSM-SQ-1.5
     The PSM shall use D.R.Y. coding principles to avoid unnecessary
     complexity, inflexibility, redundancy, and denormalization in the
     source code and database schemas, and to use precise terminology
     in data structures and operations.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - infra
   - tech-debt
* [[https://github.com/solutionguidance/psm/issues/486][486]]   (open): Limit number of providers of a given type

  @chj124 [mentioned](https://github.com/OpenTechStrategies/psm/issues/10#issuecomment-337301827):
  
  >A Plan (like Medicaid)
  a. Can set limits on how many dentists there are
  i. Could be set state wide
  ii. Could be set geographically
  b. Limits are set by specialty
  c. Application could be denied initially in (2) if there is no need
  d. The plan also determines the application, screening, and enrollment criteria
  
  He further [suggested](https://github.com/OpenTechStrategies/psm/issues/10#issuecomment-337583143) that the PSM could alert the provider of these limits before they fill out an application / pay the screening fee.  That way, they could decide whether or not to spend the time and money on applying with the knowledge that they might not be able to enroll in the plan right away (until space opened up).

** LABELS
   - Z-REQ-PSM-FR-4.6
     The PSM shall have the ability to enforce limits on the number of
     providers of a given type enrolled simultaneously.
     <<< FR 4.  Configurable Setting >>>

   - backend
   - enhancement
   - task
   - ux
* [[https://github.com/solutionguidance/psm/issues/485][485]]   (open): Application vs. Enrollment

  As @chj124 has pointed out, users of the PSM are *applying* to enroll in Medicaid (or some other program, in the future).  So, it would be better to use the term "application" than "enrollment" for the form the provider is filling out.  To update this term everywhere would mean a big code change which we aren't in a position to make right now (I don't think).  I am going to try to keep this distinction in mind going forward, especially as the PSM begins to incorporate more of the management side tasks.  One of those will be enrolling providers in the program *after* their application has been reviewed.

** LABELS
   - Z-REQ-PSM-SQ-1.5
     The PSM shall use D.R.Y. coding principles to avoid unnecessary
     complexity, inflexibility, redundancy, and denormalization in the
     source code and database schemas, and to use precise terminology
     in data structures and operations.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - tech-debt
** LABEL CHANGES
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/482][482]] (closed): Central documentation site should refer to how it's generated.

  We now have auto-built documentation at https://opentechstrategies.github.io/psm/, coming (I think) from the `gh-pages` branch in this repository.  Still, that doc site should point to some documentation about how the site itself is built, so that if people want to contribute to it, they can.
  
  This is discussed more starting [here](https://chat.opentechstrategies.com/#narrow/stream/Provider.20Screening/subject/user.20documentation/near/784).

** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - docs
   - enhancement
   - quick-fix
** LABEL CHANGES
   + sq-1.4
* [[https://github.com/solutionguidance/psm/issues/476][476]]   (open): CSV export (including sanitization)

  The PSM will offer CSV export of certain kinds of data (probably lists of providers and enrollments) for use by service administrators.
  
  @kfogel mentioned [a warning about malformed CSV files](http://georgemauer.net/2017/10/07/csv-injection.html) and noted:
  > E.g., if I wanted to hack into staff computers at a state medicaid agency, I'd register as a provider, fill in the form fields with some CSV injection data, and wait until they export it.
  > One thing we can do is detect whether people are filling in fields with suspicious data that only makes sense for a CSV-injection attack. Like if your clinic address begins with "=", you know?

** LABELS
   - Z-REQ-PSM-AD-5.18
     The PSM shall be secure from unauthorized access or use, and
     shall sanitize inputs and outputs where possible so as to avoid
     compromising itself or other systems.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - Z-REQ-PSM-FR-6.1
     The PSM shall download all monitoring risk scores for each month
     as a CSV
     <<< FR 6. Retention, Reporting and Auditing >>>

   - Z-REQ-PSM-FR-6.5
     The PSM shall, to extent permitted by law, make screening data
     available for analytics and other reporting purposes.
     <<< FR 6. Retention, Reporting and Auditing >>>

   - enhancement
   - security
** LABEL CHANGES
   + ad-3.3
   + ad-3.4
   + ad-5.1
* [[https://github.com/solutionguidance/psm/issues/472][472]]   (open): INSTALL.md improvements based on Paul Morris' notes

  Below are notes I took while installing the PSM based on INSTALL.md.  I tried to make a note every time I was confused about something, if even just a little bit.  So not all of these items need to lead to edits, but they're all here for completeness.
  
  NOTES
  
  The biggest issue was I read the 'requirements overview' section and started
  installing things at that point, before getting to 'installation instructions'.
  (Sumana has some ideas on how to avoid this problem.)
  
  When installing wildfly 10, the wildfly website talks about 'full' and 'web'
  versions of wildfly.  There ended up being no difference in what you install,
  but it was slightly confusing for a moment.  So maybe mention this in some way,
  or maybe not worth it.
  
  On Ubuntu 16.04 the postgresql-9.6 package is not found:
  
      $ sudo apt install postgresql-9.6
      Reading package lists... Done
      Building dependency tree
      Reading state information... Done
      E: Unable to locate package postgresql-9.6
      E: Couldn't find any package by glob 'postgresql-9.6'
      E: Couldn't find any package by regex 'postgresql-9.6'
  
      $ sudo apt-get install postgresql-9.6
      [sudo] password for paul:
      Reading package lists... Done
      Building dependency tree
      Reading state information... Done
      E: Unable to locate package postgresql-9.6
      E: Couldn't find any package by glob 'postgresql-9.6'
      E: Couldn't find any package by regex 'postgresql-9.6'
  
  even after $ sudo apt update...
  
  It worked after adding the apt repository per
  https://www.postgresql.org/download/linux/ubuntu/
  
      sudo apt-get install postgresql-9.6Reading package lists... Done
      Building dependency tree
      Reading state information... Done
      The following additional packages will be installed:
        libpq5 postgresql-client-9.6 postgresql-contrib-9.6
      Suggested packages:
        locales-all postgresql-doc-9.6 libdbd-pg-perl
      The following NEW packages will be installed:
        postgresql-9.6 postgresql-client-9.6 postgresql-contrib-9.6
      The following packages will be upgraded:
        libpq5
      1 upgraded, 3 newly installed, 0 to remove and 39 not upgraded.
      Need to get 6,031 kB of archives.
      After this operation, 28.3 MB of additional disk space will be used.
      Do you want to continue? [Y/n]
      Get:1 http://apt.postgresql.org/pub/repos/apt xenial-pgdg/main amd64 libpq5 amd64 10.0-1.pgdg16.04+1 [156 kB]
      Get:2 http://apt.postgresql.org/pub/repos/apt xenial-pgdg/main amd64 postgresql-client-9.6 amd64 9.6.5-1.pgdg16.04+2 [1,226 kB]
      Get:3 http://apt.postgresql.org/pub/repos/apt xenial-pgdg/main amd64 postgresql-9.6 amd64 9.6.5-1.pgdg16.04+2 [4,155 kB]
      Get:4 http://apt.postgresql.org/pub/repos/apt xenial-pgdg/main amd64 postgresql-contrib-9.6 amd64 9.6.5-1.pgdg16.04+2 [495 kB]
      Fetched 6,031 kB in 1s (4,100 kB/s)
      (Reading database ... 355519 files and directories currently installed.)
      Preparing to unpack .../libpq5_10.0-1.pgdg16.04+1_amd64.deb ...
      Unpacking libpq5:amd64 (10.0-1.pgdg16.04+1) over (9.5.9-0ubuntu0.16.04) ...
      Selecting previously unselected package postgresql-client-9.6.
      Preparing to unpack .../postgresql-client-9.6_9.6.5-1.pgdg16.04+2_amd64.deb ...
      Unpacking postgresql-client-9.6 (9.6.5-1.pgdg16.04+2) ...
      Selecting previously unselected package postgresql-9.6.
      Preparing to unpack .../postgresql-9.6_9.6.5-1.pgdg16.04+2_amd64.deb ...
      Unpacking postgresql-9.6 (9.6.5-1.pgdg16.04+2) ...
      Selecting previously unselected package postgresql-contrib-9.6.
      Preparing to unpack .../postgresql-contrib-9.6_9.6.5-1.pgdg16.04+2_amd64.deb ...
      Unpacking postgresql-contrib-9.6 (9.6.5-1.pgdg16.04+2) ...
      Processing triggers for libc-bin (2.23-0ubuntu9) ...
      Processing triggers for postgresql-common (173) ...
      Building PostgreSQL dictionaries from installed myspell/hunspell packages...
        en_us
      Removing obsolete dictionary files:
      Setting up libpq5:amd64 (10.0-1.pgdg16.04+1) ...
      Setting up postgresql-client-9.6 (9.6.5-1.pgdg16.04+2) ...
      update-alternatives: using /usr/share/postgresql/9.6/man/man1/psql.1.gz to provide /usr/share/man/man1/psql.1.gz (psql.1.gz) in auto mode
      Setting up postgresql-9.6 (9.6.5-1.pgdg16.04+2) ...
      Unescaped left brace in regex is deprecated, passed through in regex; marked by <-- HERE in m/(?<!\\)\${ <-- HERE ([^}]+)}/ at /usr/sbin/pam_getenv line 78.
      Unescaped left brace in regex is deprecated, passed through in regex; marked by <-- HERE in m/(?<!\\)\${ <-- HERE ([^}]+)}/ at /usr/sbin/pam_getenv line 78.
      Unescaped left brace in regex is deprecated, passed through in regex; marked by <-- HERE in m/(?<!\\)\${ <-- HERE ([^}]+)}/ at /usr/sbin/pam_getenv line 78.
      Unescaped left brace in regex is deprecated, passed through in regex; marked by <-- HERE in m/(?<!\\)\${ <-- HERE ([^}]+)}/ at /usr/sbin/pam_getenv line 78.
      Unescaped left brace in regex is deprecated, passed through in regex; marked by <-- HERE in m/(?<!\\)\${ <-- HERE ([^}]+)}/ at /usr/sbin/pam_getenv line 78.
      Unescaped left brace in regex is deprecated, passed through in regex; marked by <-- HERE in m/(?<!\\)\${ <-- HERE ([^}]+)}/ at /usr/sbin/pam_getenv line 78.
      Unescaped left brace in regex is deprecated, passed through in regex; marked by <-- HERE in m/(?<!\\)\${ <-- HERE ([^}]+)}/ at /usr/sbin/pam_getenv line 78.
      Unescaped left brace in regex is deprecated, passed through in regex; marked by <-- HERE in m/(?<!\\)\${ <-- HERE ([^}]+)}/ at /usr/sbin/pam_getenv line 78.
      Unescaped left brace in regex is deprecated, passed through in regex; marked by <-- HERE in m/(?<!\\)\${ <-- HERE ([^}]+)}/ at /usr/sbin/pam_getenv line 78.
      Unescaped left brace in regex is deprecated, passed through in regex; marked by <-- HERE in m/(?<!\\)\${ <-- HERE ([^}]+)}/ at /usr/sbin/pam_getenv line 78.
      Unescaped left brace in regex is deprecated, passed through in regex; marked by <-- HERE in m/(?<!\\)\${ <-- HERE ([^}]+)}/ at /usr/sbin/pam_getenv line 78.
      Unescaped left brace in regex is deprecated, passed through in regex; marked by <-- HERE in m/(?<!\\)\${ <-- HERE ([^}]+)}/ at /usr/sbin/pam_getenv line 78.
      Unescaped left brace in regex is deprecated, passed through in regex; marked by <-- HERE in m/(?<!\\)\${ <-- HERE ([^}]+)}/ at /usr/sbin/pam_getenv line 78.
      Unescaped left brace in regex is deprecated, passed through in regex; marked by <-- HERE in m/(?<!\\)\${ <-- HERE ([^}]+)}/ at /usr/sbin/pam_getenv line 78.
      Unescaped left brace in regex is deprecated, passed through in regex; marked by <-- HERE in m/(?<!\\)\${ <-- HERE ([^}]+)}/ at /usr/sbin/pam_getenv line 78.
      Creating new cluster 9.6/main ...
        config /etc/postgresql/9.6/main
        data   /var/lib/postgresql/9.6/main
        locale en_US.UTF-8
        socket /var/run/postgresql
        port   5432
      update-alternatives: using /usr/share/postgresql/9.6/man/man1/postmaster.1.gz to provide /usr/share/man/man1/postmaster.1.gz (postmaster.1.gz) in auto mode
      Setting up postgresql-contrib-9.6 (9.6.5-1.pgdg16.04+2) ...
      Processing triggers for libc-bin (2.23-0ubuntu9) ...
  
  
  "Stop the server if it is already running"
  How do I know if it is running?  Should it be running?  Maybe a little more
  disclaimer here in the wording that it shouldn't be running yet.
  
  
  Warnings on starting wildfly just for the record.
  Nothing to do here, there's already a "warnings are ok" message in the doc.
  
      13:16:05,215 WARN  [org.jboss.as.txn] (ServerService Thread Pool -- 60) WFLYTX0013: Node identifier property is set to the default value. Please make sure it is unique.
  
      13:16:06,424 WARN  [org.jboss.as.domain.management.security] (MSC service thread 1-1) WFLYDM0111: Keystore /home/paul/ots/wildfly-10.1.0.Final/standalone/configuration/application.keystore not found, it will be auto generated on first use with a self signed certificate for host localhost
  
      13:18:58,851 WARN  [org.jboss.as.domain.management.security] (default I/O-2) WFLYDM0113: Generated self signed certificate at /home/paul/ots/wildfly-10.1.0.Final/standalone/configuration/application.keystore. Please note that self signed certificates are not secure, and should only be used for testing purposes. Do not use this self signed certificate in production.
      SHA-1 fingerprint of the generated key is b7:08:f4:30:fb:34:92:cb:3d:24:f1:e9:d6:00:d6:e5:4c:6e:77:bb
      SHA-256 fingerprint of the generated key is 7d:00:3e:f2:05:34:d8:e0:5b:d1:be:a7:06:75:73:64:34:96:9f:ce:f7:c7:fc:24:6e:ca:27:85:3d:28:9b:75
  
  
  Had to enter psm psm for user and password, but this was not mentioned in the docs.
  Might be worth being more explicit that this is needed and which user/psw.
  (Where exactly was this?)
  
  
  This line was slightly different than what the docs mentioned:
      13:28:04,474 INFO  [org.jboss.as.server] (management-handler-thread - 6) WFLYSRV0010: Deployed "postgresql-42.1.4.jar" (runtime-name : "postgresql-42.1.4.jar")
  
  In the docs is:
      15:32:15, 773 INFO [org.jboss.as.server] )ServerService Thread Pool --37) WFLYSRV0010: Deployed "postgresql-42.1.1.jar" (runtime-name: "postgresql-42.1.1.jar")
  
  
  Docs say:
      You will need a database user, and a database owned by that user. Create them, and make a note of the password for the database user:
  
      $ sudo -u postgres createuser --pwprompt psm
  
  I thought psm in the line above was the password (not the user name) and changed
  it to my password at first.
  
  
  Maybe a note about 'in the wildfly directory' for those commands?  Generally
  more clarity on what directory the commands are run from would be helpful.
  
  
  'Fill in your local properties:'  is vague, maybe reword for more explicitness.
  
  
  "log in with your management console username and password"
  maybe add "if you are not already logged in"
  
  
  "Deployments > Deploy an Application > start"
  Maybe more specific wording?  tabs at top vs links in page, etc.
  
  "Deployments > Add > Upload a new deployment > browse to file."
  Which file do I browse to to deploy?  Could be clearer here.
  
  Jason helped set me up with:
  .pgpass in home directory which allows no password entry every time for postgres
  Maybe add this to the docs?
  
  Maybe more of a Table of Contents at top for better road-map / overview.
  
  Under build docs, which directory for the gradlew command?  (psm/psm-app)
  
  on doc build, 3 warnings:
  
  :cms-web:apiDocs
  /home/paul/ots/psm/psm-app/cms-web/src/main/java/gov/medicaid/controllers/EnrollmentPageFlowController.java:294: warning - @param argument "ticketId" is not a parameter name.
  /home/paul/ots/psm/psm-app/cms-web/src/main/java/gov/medicaid/controllers/EnrollmentPageFlowController.java:767: warning - @param argument "entity" is not a parameter name.
  /home/paul/ots/psm/psm-app/cms-web/src/main/java/gov/medicaid/controllers/EnrollmentPageFlowController.java:784: warning - @param argument "entity" is not a parameter name.
  3 warnings

** LABELS
   - Z-REQ-PSM-SQ-1.4
     The PSM shall use documented build, test, release, and
     installation processes that are automated as much as possible,
     for both development and production use.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - docs
** LABEL CHANGES
   + sq-1.1
* [[https://github.com/solutionguidance/psm/issues/468][468]] (closed): Ensure that we are using Hibernate everywhere

  "The solution, in order to protect the database from SQL injection attacks, shall access the database from the application through a standard database abstraction layer."
  
  This should be a quick one -- just check that we're not making any raw SQL calls in the codebase and are using Hibernate throughout.  If we are making any direct SQL calls, replace them with a safer method.
  
  

** LABELS
   - Z-REQ-PSM-AD-5.18
     The PSM shall be secure from unauthorized access or use, and
     shall sanitize inputs and outputs where possible so as to avoid
     compromising itself or other systems.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - Z-REQ-PSM-SQ-1.5
     The PSM shall use D.R.Y. coding principles to avoid unnecessary
     complexity, inflexibility, redundancy, and denormalization in the
     source code and database schemas, and to use precise terminology
     in data structures and operations.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - backend
   - quick-fix
   - security
   - task
** LABEL CHANGES
   + ad-1.4
   + ad-5.1
   + ad-5.2
   + ad-5.7
   + ad-5.16
   CHECKED (removed "- ad-5.18")

* [[https://github.com/solutionguidance/psm/issues/467][467]] (closed): Improve ADA compliance

  This is a placeholder that will get more content after we complete #415 and know what our first steps toward improvement are.

** LABELS
   - Z-REQ-PSM-FR-10.2
     The PSM shall be accessible in compliance with Section 508 of the
     Rehabilitation Act.
     <<< FR 10. Compliance >>>

   - accessibility
** LABEL CHANGES
   - fr-10.2
   + ad-2.4
* [[https://github.com/solutionguidance/psm/issues/466][466]] (closed): Document application architecture and interfaces

  - psm-II-4.2 The PSM shall document all interfaces in an Interface Control Document (ICD), along with how those interfaces are maintained.
  - psm-SA-4.3 The PSM design documents shall utilize a widely supported modeling language (e.g., UML, BPMN).
  - psm-IU-4.3 The PSM shall provide an architecture diagram depicting how it is technically structured.
  - psm-SA-3.1 The PSM shall support the architecture adopted to preserve the ability to efficiently, effectively, and appropriately exchange data with other participants in the health and human services enterprise.
  - psm-IA-4.1 The PSM shall support a  Logical Data Model (LDM) in the  identification of data classes, attributes, relationships, standards, and code sets for intrastate exchange.
  
  
  I'm grouping these together for now, but we can certainly split them into different issues as needed.

** LABELS
   - Z-REQ-PSM-IA-4.1
     The PSM shall support a Logical Data Model (LDM) in the
     identification of data classes, attributes, relationships,
     standards, and code sets for intrastate exchange.
     <<< IA 4.  IA Component Name:  Logical Data Model (LDM) >>>

   - Z-REQ-PSM-II-4.2
     The PSM shall document all interfaces in an Interface Control
     Document (ICD), along with how those interfaces are maintained.
     <<< II 4.  Technical Service Classification:  System Extensibility >>>

   - Z-REQ-PSM-II-4.4
     Clearly documented - 
The PSM shall provide detailed API documentation provided for every
API.
     <<< II 4.  Technical Service Classification:  System Extensibility >>>

   - Z-REQ-PSM-IU-4.3
     The PSM shall provide an architecture diagram depicting how it is
     technically structured.
     <<< IU 4.  Technical Service Classification:  Logging >>>

   - Z-REQ-PSM-SC-3.1
     The PSM shall support the architecture adopted to preserve the
     ability to efficiently, effectively, and appropriately exchange
     data with other participants in the health and human services
     enterprise.
     <<< SC 3.  S&C:  Interoperability Condition >>>

   - Z-REQ-PSM-SC-4.3
     The PSM design documents shall utilize a widely supported
     modeling language (e.g., UML, BPMN).
     <<< SC 4.  S&C:  Modularity Standard >>>

   - docs
* [[https://github.com/solutionguidance/psm/issues/465][465]] (closed): Use FIPS-approved encryption

  "The PSM shall use only FIPS Pub 140-2-approved (or higher) encryption algorithms."  and "The Contractor's data encryption solution shall meet Federal Information Processing Standard (FIPS) 140-2 and at a minimum use AES 128 encryption."
  
  The first step here is to get the list of FIPS-approved algorithms (I think @jasonaowen may know about this?).  See also #104.

** LABELS
   - Z-REQ-PSM-AD-5.17
     The PSM shall use only FIPS Pub 140-2-approved (or higher)
     encryption algorithms.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - backend
   - security
* [[https://github.com/solutionguidance/psm/issues/459][459]]   (open): configure LaTeX footer for generated PDF

  In #443, @cecilia-donnelly said:
  
  > I like having the chapter titles at the bottom of the page but I don't particularly like having the section title at the bottom of the page. Our sections are too short for this to be useful, I think.
  
  This requires fiddling with the [LaTeX styling](http://www.sphinx-doc.org/en/stable/latex.html).

** LABELS
   - Z-REQ-PSM-FR-7.2
     The PSM shall provide detailed instructions for completing the
     application via a Help link.
     <<< FR 7. Usability >>>

   - docs
   - help wanted
* [[https://github.com/solutionguidance/psm/issues/458][458]] (closed): bundle user & developer docs for psm-dev

  To do:
  
  - [x] Turn developer/administrator prose documents (e.g., `DESIGN.md`, `INSTALL.md`, `TESTING.md`, `CONTRIBUTING.md`) into PDFs
  - [x] Generate a PDF of user documentation
  - [x] Create a zipped archive of the above PDFs, plus the Javadoc API docs (HTML), plus a textual table of contents
  - [x] Note down steps to achieving the above outcome
  - [x] On Friday, September 29, send the zipped archive to the psm-dev mailing list

** LABELS
   - Z-REQ-PSM-FR-7.1
     The PSM shall provide per-field instructions on the application
     screen.
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-FR-7.2
     The PSM shall provide detailed instructions for completing the
     application via a Help link.
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - Z-REQ-PSM-SQ-1.4
     The PSM shall use documented build, test, release, and
     installation processes that are automated as much as possible,
     for both development and production use.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - docs
   - task
** LABEL CHANGES
   + sq-1.1
* [[https://github.com/solutionguidance/psm/issues/456][456]]   (open): Use consistent code style

  Having a consistent code style to our project makes old code easier to change and new code easier to add. As [Nicholas C. Zakas writes](https://www.smashingmagazine.com/2012/10/why-coding-style-matters/):
  
  > The most important thing when working on a team is communication. People need to be able to work together effectively and the only way to do that is by communicating. As developers, we communicate primarily through code. We communicate with other parts of the software through code and we communicate with other developers through code.
  
  Adopt and document a style guide, and automatically test against it in our code reviews.

** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - docs
   - task
   - tech-debt
* [[https://github.com/solutionguidance/psm/issues/455][455]] (closed): Bad link on admin view

  When administrators click in to "Edit" a Pending enrollment, they see a link to "Enrollments" in the breadcrumb at the top of the screen:
  
  ![screenshot from 2017-09-27 12-02-41](https://user-images.githubusercontent.com/1497818/30926984-91791266-a37c-11e7-8020-f73e6b883b5c.png)
  
  That link claims to direct to 'cms/cms/provider/dashboard/drafts', but when clicked it gives a 404:
  
  ![screenshot from 2017-09-27 12-02-45](https://user-images.githubusercontent.com/1497818/30927096-e813768e-a37c-11e7-9be5-86f67ba03f1e.png)
  

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - bug
   - quick-fix
* [[https://github.com/solutionguidance/psm/issues/454][454]]   (open): License renewal end date grayed out for PCA

  On the License screen for Personal Care Assistants, the "Renewal End Date" is marked as required with a red star, but the field is grayed out.  It isn't really required (users can continue the enrollment without filling it in), so we should either allow users to enter information or remove the field.  
  
  ![screenshot from 2017-09-27 12-00-00](https://user-images.githubusercontent.com/1497818/30926838-0ff1bba8-a37c-11e7-95cd-3f55014105d6.png)

** LABELS
   - Z-REQ-PSM-FR-2.20
     The PSM shall collect and maintain licensure information to
     include at a minimum, licensing state, license number, licensure
     begin and end dates.  
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-3.22
     The PSM shall reduce the time needed by providers to submit
     new/renewal application information and resolve discrepancies.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.5
     The PSM shall screen limited-risk providers by verifying that the
     provider or supplier meets all applicable federal regulations and
     state requirements for the provider or supplier type, conducting
     license verifications, including licensure verifications across
     state lines for physicians, non-physician practitioners,
     providers and suppliers, and conducting database checks on a
     pre-and post-enrollment basis to ensure that providers and
     suppliers continue to meet the enrollment criteria for their
     provider/supplier type.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - quick-fix
* [[https://github.com/solutionguidance/psm/issues/452][452]]   (open): Activate push-javadoc-to-gh-pages.sh earlier in Travis build

  A few weeks ago, after we merged 1fcb87f1eaa587324d7a232c8542b1c843390b74 , our Javadoc syndication to GitHub Pages broke - https://github.com/OpenTechStrategies/psm/tree/fix-gh-pages has an attempted fix.
  
  We didn't notice this initially because the push step is in `after_success` so we didn't get notification that the script was failing. We don't want to slow down CI too much more. But also we don't want to go weeks before finding out a thing like this is broken. Since `scripts/push-javadoc-to-gh-pages.sh` already only runs if the branch involved is `master`, we can move that to the `script:` step without slowing down Travis runs on PRs and other branches.
  
  More urgent than #255.

** LABELS
   - Z-REQ-PSM-SQ-1.4
     The PSM shall use documented build, test, release, and
     installation processes that are automated as much as possible,
     for both development and production use.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - infra
   - tech-debt
* [[https://github.com/solutionguidance/psm/issues/446][446]] (closed): Write API specification for LEIE API

  Create API documentation that defines the LEIE API's endpoints and how to call it, similar to the docs written for our internal APIs as part of #30.

** LABELS
   - Z-REQ-PSM-FR-3.13
     The PSM shall have the capability to track and support the
     screening of applications (and ongoing provider updates) for
     National Provider Identifier (NPIs), State licenses, Specialty
     Board certification as appropriate, review team visits when
     necessary, and any other State and/or Federal Requirement.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-II-4.4
     Clearly documented - 
The PSM shall provide detailed API documentation provided for every
API.
     <<< II 4.  Technical Service Classification:  System Extensibility >>>

   - docs
   - infra
* [[https://github.com/solutionguidance/psm/issues/440][440]]   (open): Rename "same as above"

  In #435, we added a contact phone number to the "contact information" area on the "Personal Information" page (for individual enrollments).  Currently, the checkbox there says "Same as Above."  This is fine, except that there is no phone number on this page.  There *is* a phone number on the "Practice Information" page.  @jasonaowen and I had [a conversation](https://github.com/OpenTechStrategies/psm/pull/435#discussion_r140080484) about this in the PR, and then in IRC I said "I just worry that "separate contact person" suggests that they should *check* the checkbox to have one of those.  So, we could do that, but then we should reverse the enabled/disabled effect on the fields, right?" and Jason agreed.
  
  So, change the checkbox to read "Separate contact person" or similar, and reverse the enabled/disabled default on the corresponding fields.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - bug
   - ux
* [[https://github.com/solutionguidance/psm/issues/439][439]] (closed): Auto-update standalone user docs website and PDF

  Let's turn the user documentation into a navigable website, as mentioned in #395, and also a downloadable PDF, with an attractive cover page featuring the PSM logo.  The cover can say something like "Provider Screening User Manual `{version} {date}`."
  
  This will make it easier for state and federal stakeholders to review the documentation.
  
  @brainwane, I'm picturing this going forward in a few steps.
  
  1. Update the existing Makefile to also produce a (professional-looking, logo-featuring) PDF, which we can `make` and distribute by hand to begin with.
  2. Include the `make` of the userdocs in our CI, as you did with the API docs, and link to them from https://opentechstrategies.github.io/psm/.  
  3. Add the `make` of the new PDF to the CI too, and make it downloadable from the docs site.
  
  I don't *think* this is a duplicate of #395.  To me, this is a clarification of one part of #395, which we're going to complete first.  Happy to move this over there, though, if others think that makes more sense.

** LABELS
   - Z-REQ-PSM-FR-7.2
     The PSM shall provide detailed instructions for completing the
     application via a Help link.
     <<< FR 7. Usability >>>

   - docs
** LABEL CHANGES
   + sq-1.4
* [[https://github.com/solutionguidance/psm/issues/438][438]] (closed): Add monitoring to demo instances

  Because of the Wildfly Out of Memory problem mentioned in #421, our running servers occasionally crash without warning.  Something like [UptimeRobot](https://uptimerobot.com/) might work to alert us about this, or, as @jvasile suggested, we might set up a more advanced monitoring system with our Selenium tests.

** LABELS
   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - infra
** LABEL CHANGES
   + ad-4.1
   + ad-4.2
* [[https://github.com/solutionguidance/psm/issues/432][432]]   (open): Admin changes to contact information are lost

  As an admin, if I edit a pending enrollment to change the contact info, these changes are not persisted.
  
  Steps to reproduce:
  1. As a provider, create and submit an enrollment
  2. As an admin, edit the enrollment and change any of the following:
      1. Check or uncheck "Same as above"
      2. Change the contents of the Contact Name field
      3. Change the contents of the Contact Email field
  3. Re-submit enrollment
  
  Expected behavior: the enrollment has the new contact information
  Actual behavior: the enrollment has the old contact information
  

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-FR-7.5
     The PSM shall allow applicant to edit entered information.
     <<< FR 7. Usability >>>

   - backend
   - bug
** LABEL CHANGES
   + ia-4.2
* [[https://github.com/solutionguidance/psm/issues/431][431]] (closed): Expired session doesn't redirect to login from "profile" page

  To reproduce, log in to the PSM and navigate to the "My Profile" page.  Open another tab into the PSM and log out in that second tab.  Return to the first tab, the one open to "My Profile," and refresh.  Instead of redirecting to the login screen, the PSM gives a stacktrace (see below).
  
  This does not happen from the Dashboard or from editing an enrollment -- the redirection works correctly from those parts of the app. 
  
  ```
  Error processing request
  Context Path:
  /cms
  
  Servlet Path:
  /WEB-INF/pages/error.jsp
  
  Path Info:
  null
  
  Query String:
  null
  
  Stack Trace
  org.apache.jasper.JasperException: javax.el.PropertyNotFoundException: The class 'java.lang.String' does not have the property 'enabled'.
  org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:473)
  org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:402)
  org.apache.jasper.servlet.JspServlet.service(JspServlet.java:346)
  javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
  io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)
  io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:81)
  io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
  io.undertow.jsp.JspFileHandler.handleRequest(JspFileHandler.java:32)
  io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
  io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:274)
  io.undertow.servlet.handlers.ServletInitialHandler.dispatchToPath(ServletInitialHandler.java:209)
  io.undertow.servlet.spec.RequestDispatcherImpl.forwardImpl(RequestDispatcherImpl.java:221)
  io.undertow.servlet.spec.RequestDispatcherImpl.forwardImplSetup(RequestDispatcherImpl.java:147)
  io.undertow.servlet.spec.RequestDispatcherImpl.forward(RequestDispatcherImpl.java:111)
  org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:238)
  org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:250)
  org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1047)
  org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:817)
  org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:719)
  org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644)
  org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:549)
  javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
  javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
  io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)
  io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:368)
  org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:109)
  org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:97)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:100)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:78)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:112)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:35)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:187)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:79)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:169)
  org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:237)
  org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)
  io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
  io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
  io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
  io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
  io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
  org.wildfly.extension.undertow.security.SecurityContextAssociationHandler.handleRequest(SecurityContextAssociationHandler.java:78)
  io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
  io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
  io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
  io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
  io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
  io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
  io.undertow.security.handlers.NotificationReceiverHandler.handleRequest(NotificationReceiverHandler.java:50)
  io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
  io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)
  io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
  io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
  io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
  io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
  io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
  io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
  io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
  io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
  io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
  io.undertow.server.Connectors.executeRootHandler(Connectors.java:202)
  io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:805)
  java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
  java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
  java.lang.Thread.run(Thread.java:748)
  ```

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - backend
   - bug
   - task
* [[https://github.com/solutionguidance/psm/issues/426][426]]   (open): Support batch submission to create/renew several providers' enrollments

  A service agent at an insurance company might want to create or renew several similar enrollments at once. It would be nice if the PSM had a way to support that kind of batch enrollment.
  
  This is probably a far-future feature for us to consider, after the PSM has an API.

** LABELS
   - Z-REQ-PSM-FR-4.5
     The PSM shall support the Extract, Transform and Load (ETL)
     processes from real-time  web services or batch processes.
     <<< FR 4.  Configurable Setting >>>

   - backend
   - enhancement
** LABEL CHANGES
   + fr-2.16
* [[https://github.com/solutionguidance/psm/issues/425][425]]   (open): Per-state configuration allowing/prohibiting e-signatures & proxy signatures

  From ["May service agents sign enrollments on providers' behalf?" on the psm-dev mailing list](https://groups.google.com/d/msg/psm-dev/I4cczE2CxVU/2MMs1b-9AgAJ). Excerpted:
  
  Me:
  
  > is it acceptable for someone who's helping a provider enroll (e.g., an insurer or the office administrator at their practice) to fill out and electronically sign a Provider Statement on the provider's behalf?
  
  > It could be that we should customize this part of the form, so that if you're logged in as a service agent or service admin, there's an additional agreement/addendum where you attest that you're doing this on behalf of a provider who's asked for the enrollment.
  
  @cecilia-donnelly:
  
  > We've had a conversation about e-signatures with at least one state:
  
  >> **State**: Incorporate electronic signatures with the provider enrollment applications and updates.
  
  >> **PSM team**: Currently we have a "Provider Statement" where the provider submitting the application certifies that they have answered accurately.  Does that match what you're thinking of?
  
  >> **State**: Yes.  I suspect each state has its own rules to ensure an e-signature can with stand the legal impact.
  
  > That doesn't answer your specific question, but suggests that this will need to be configurable.

** LABELS
   - Z-REQ-PSM-FR-4.8
     The PSM shall support provider agents (a.k.a. service agents
     a.k.a. non-provider users) who act on a provider's behalf and
     whose authorization may be a subset of that provider's.
     <<< FR 4.  Configurable Setting >>>

   - Z-REQ-PSM-II-4.5
     The PSM shall be configurable where feasible.
     <<< II 4.  Technical Service Classification:  System Extensibility >>>

   - enhancement
   - state-question
* [[https://github.com/solutionguidance/psm/issues/424][424]]   (open): Clarify provider users versus members in group enrollments

  In [a review comment](https://github.com/OpenTechStrategies/psm/pull/382#discussion_r135879333) about group providers adding or removing members from their enrollments, @kfogel was concerned. The relevant part of the documentation:
  
  > _How can I update an existing organizational enrollment to add a new provider (e.g., if a clinic hires a new physician)?_
  
  > If an enrollment is a draft (you haven't submitted it yet), then yes, you can click on the draft enrollment and edit the member list.
  
  > If you have already submitted the enrollment, then you should have the individual, or a service agent, create a new enrollment for an individual provider. On the "Practice Info" screen, the user should say "Yes" to the question "Are you employed and/or independently contracted by a group practice?" and enter the organization's information.
  
  Karl says:
  
  > This sounds a little weird, in terms of the eventual results it would produce in the PSM's data. In the first scenario, it sounds like a given provider just gets another member (but there's still only one provider). In the second case, it sounds like a new provider would be created? That's an odd thing to have be dependent on the mere timing of when a doctor joined a hospital or whatever. Is this an acknowledged bug in the current PSM, and if so, can we say so and link to the appropriate issue?
  
  > Or am I just misunderstanding the end result?

** LABELS
   - Z-REQ-PSM-FR-7.1
     The PSM shall provide per-field instructions on the application
     screen.
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-FR-7.2
     The PSM shall provide detailed instructions for completing the
     application via a Help link.
     <<< FR 7. Usability >>>

   - question
   - state-question
** LABEL CHANGES
   + fr-2.16
* [[https://github.com/solutionguidance/psm/issues/423][423]]   (open): Clarify workflow around draft and submitted enrollments

  In commenting on `docs/userhelp/source/enrollment.rst `, specifically regarding whether a user can edit an enrollment to (for instance) remove a member from a group provider enrollment, @kfogel [said](https://github.com/OpenTechStrategies/psm/pull/382#discussion_r135879669):
  
  > Reading these answers really brings home to me how high-priority it is that we fix this distinction between draft and submitted enrollments, to the extent we can.

** LABELS
   - Z-REQ-PSM-FR-7.7
     The PSM shall allow applicant to save a partial application as a
     draft.
     <<< FR 7. Usability >>>

   - backend
   - question
** LABEL CHANGES
   + fr-2.16
* [[https://github.com/solutionguidance/psm/issues/422][422]]   (open): Review documentation to add relevant contextual help links

  Per https://github.com/OpenTechStrategies/psm/pull/382#discussion_r135878148 by @kfogel:
  
  > make a quick scan over all of the current documentation, looking for places where it discusses a specific part of the user interface, and for those places, note (either there or in an issue) the possibility of a linkback or tooltip or something from that part of the UI to that part of the documentation.

** LABELS
   - Z-REQ-PSM-FR-7.1
     The PSM shall provide per-field instructions on the application
     screen.
     <<< FR 7. Usability >>>

   - docs
   - help wanted
   - review
   - ux
* [[https://github.com/solutionguidance/psm/issues/421][421]]   (open): Add Wildfly restart to CD script

  We've had a problem with Wildfly running out of memory when we deploy multiple times to a running instance (whether that be locally or on remote servers).  This has now affected the continuous deployment at least once, requiring a manual restart of Wildfly on that server.  As a stopgap, we should add a restart of Wildfly to that CD script.  In the longer term -- why is this happening?  Is this a known Wildfly bug?  What can we do to fix or avoid it?

** LABELS
   - Z-REQ-PSM-SQ-1.4
     The PSM shall use documented build, test, release, and
     installation processes that are automated as much as possible,
     for both development and production use.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - infra
   - tech-debt
** LABEL CHANGES
   + sq-1.6
* [[https://github.com/solutionguidance/psm/issues/420][420]]   (open): Adding space after username during registration makes login impossible

  To reproduce:
  
  1. Self-register a new user account with a space at the end of the username, e.g., `0 `. The PSM will allow the registration to succeed and will email a confirmation and password to the user's email address.
  2. Try to log in. Whether you use `0 ` or `0` as the username (with or without the trailing space character), login will fail: `No AuthenticationProvider found for gov.medicaid.security.DomainAuthenticationToken`.
  
  We should disallow or strip trailing spaces during new user creation.

** LABELS
   - Z-REQ-PSM-FR-2.16
     The PSM shall accept, validate, and process transactions or user
     entries to update and maintain provider information.
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-3.16
     The PSM shall provide comprehensive verification of all
     (verifiable) data fields for all providers enrolled
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-7.11
     The PSM shall validate entered information as provider fills out
     application (not at the end of the process).
     <<< FR 7. Usability >>>

   - backend
   - bug
** LABEL CHANGES
   + ad-5.2
   + ad-5.7
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/419][419]]   (open): Error when a provider submits an enrollment

  On at least one occasion, we ran into a bug where, when a provider user filled out an enrollment and hit "Submit," the enrollment was not submitted and the provider got a "Server Error" instead of the popup saying "The enrollment has been successfully submitted."  This happened with two different provider accounts.  The *admin* account, however, was able to submit the enrollments after logging in.
  
  This was on my local setup, which was idiosyncratic in that I had manually reset the status of the enrollments in question to "draft" (in a `psql` shell, by running something like `update "enrollments" set "enrollment_status" = '01';`).  I don't remember if they had already been reviewed when I reset them.  If so, that might have been the source of the problem.  I'd manually reset statuses before without this problem, but perhaps those enrollments were only "pending."  I'll investigate.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - backend
   - bug
* [[https://github.com/solutionguidance/psm/issues/417][417]]   (open): Missing address data in PDF export

  If you export a submitted enrollment, the first line of the address is missing.
  
  Individual provider type, with **private** practice, with address line 1 filled out and address line 2 empty (for both practice and billing address):
  ![screenshot 2017-09-12 16 25 16](https://user-images.githubusercontent.com/1494855/30346554-224b40a4-97d7-11e7-98bc-fad938140efb.png)
  
  ---
  
  Individual provider type, with **primary** practice, with address line 1 filled out and address line 2 empty (for both practice and reimbursement address (which it turns out isn't even shown)):
  ![screenshot 2017-09-12 16 35 57](https://user-images.githubusercontent.com/1494855/30346985-93eac88c-97d8-11e7-8221-f615800dd662.png)
  
  ---
  
  More testing to come.

** LABELS
   - Z-REQ-PSM-FR-7.6
     The PSM shall allow applicant to print application for their
     records.
     <<< FR 7. Usability >>>

   - backend
   - bug
** LABEL CHANGES
   - fr-7.6
   + ad-3.3
* [[https://github.com/solutionguidance/psm/issues/416][416]]   (open): Let user update license/certification or contact info for existing enrollment

  Currently, once an enrollment has been approved, providers, service agents, and service admins cannot change the license and certification information or the contact information for an enrollment. We should let them do that.
  
  It would also be good to let a provider update their license/certification info or contact info for all their enrollments in one go, and for a service agent or service admin to update all a provider's enrollments at once.

** LABELS
   - Z-REQ-PSM-FR-2.16
     The PSM shall accept, validate, and process transactions or user
     entries to update and maintain provider information.
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-3.13
     The PSM shall have the capability to track and support the
     screening of applications (and ongoing provider updates) for
     National Provider Identifier (NPIs), State licenses, Specialty
     Board certification as appropriate, review team visits when
     necessary, and any other State and/or Federal Requirement.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-4.3
     The PSM shall allow providers to update information and initiate
     re-screening process (e.g., in the following situations: name
     change, change of ownership/operator - whether or not it is the
     same practice location, address change, Federal Tax
     Identification Number change at same practice location, change
     from Social Security Number to Federal Tax Identification Number
     at same practice location, change from Federal Tax Identification
     Number to Social Security Number at same practice location,
     payment name or address change, and additional service location)
     <<< FR 4.  Configurable Setting >>>

   - backend
   - enhancement
* [[https://github.com/solutionguidance/psm/issues/415][415]] (closed): Research Section 508 (accessibility) compliance

  In what ways is the PSM currently not compliant with [Section 508](https://www.ada.gov/508/)?  What would we need to do to become compliant?  Is this related to #238?

** LABELS
   - Z-REQ-PSM-FR-10.2
     The PSM shall be accessible in compliance with Section 508 of the
     Rehabilitation Act.
     <<< FR 10. Compliance >>>

   - task
** LABEL CHANGES
   - fr-10.2
   + ad-2.4
* [[https://github.com/solutionguidance/psm/issues/414][414]] (closed): Create and/or document session lock after a given period of inactivity

  After `n` minutes of inactivity (with configurable `n`), lock the logged-in user's session and require them to re-log-in.  Logging in should take them back to the page they were on.
  
  I believe we currently have some kind of cookie/session expiration that automatically logs out a user after a given period, but I don't know if it's tied to (in)activity.
  
  See also #398.

** LABELS
   - Z-REQ-PSM-AD-5.11
     The PSM shall  have standard Access Control specifications to include:
(i) Assigning a unique name and/or number for identifying and tracking
user identity. (Required) (iii) Implementing electronic procedures
that terminate an electronic session after a predetermined time of
inactivity. (Addressable)

     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - Z-REQ-PSM-AD-5.15
     After 15 minutes of inactivity, the PSM shall initiate a session
     lock; the session lock should remain in place until the user
     reestablishes access using established identification and
     authentication procedures.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - security
* [[https://github.com/solutionguidance/psm/issues/413][413]]   (open): Allow providers to have multiple locations?

  We allow individual providers to be associated with multiple groups at different locations.  Do we allow group providers to have multiple locations?
  
  @brainwane has pointed out:
  
  >I'm looking at the organizational enrollment workflow. In step 1, Organization Info: "Do not list additional practice location addresses here. If there are multiple clinic locations, each one must be enrolled separately"
  
  So, we have some conflicting requirements around this (we have a requirement that just says "The PSM shall allow multiple locations for the provider.").  @brainwane and I had talked in IRC about possibly linking different locations together by state Medicaid ID (#347).
  
  I'll tag this as a question for states.

** LABELS
   - Z-REQ-PSM-FR-2.2
     The PSM shall allow multiple locations for the provider.
     <<< FR 2.  Capability to build provider profile >>>

   - backend
   - question
   - state-question
   - ux
* [[https://github.com/solutionguidance/psm/issues/412][412]] (closed): Verify that we accept EIN *or* SSN

  Group practitioners should be identified by EIN and individuals should be identified by SSN.  I believe this is already the case, but we should verify that it works in all cases.  Our requirements point out that some group practices may bill individually, in which case we should identify the providers by SSN.  

** LABELS
   - Z-REQ-PSM-FR-1.2
     The PSM shall ensure that tax ID number is 9 digits
     <<< FR 1.  Capability to conduct identity verification >>>

   - Z-REQ-PSM-FR-1.4
     The PSM shall have the capability to identify providers by
     Employer identification number unless the provider is in solo
     practice or the provider is not in solo practice but billing is
     by the individual practitioner in which case the PSM shall have
     the capability to identify providers by social security number.
     <<< FR 1.  Capability to conduct identity verification >>>

   - Z-REQ-PSM-FR-1.6
     The PSM shall collect and store standardized W-9 information that
     reflects the owner of the EIN and the Doing Business As (DBA)
     name.  
     <<< FR 1.  Capability to conduct identity verification >>>

   - Z-REQ-PSM-FR-4.3
     The PSM shall allow providers to update information and initiate
     re-screening process (e.g., in the following situations: name
     change, change of ownership/operator - whether or not it is the
     same practice location, address change, Federal Tax
     Identification Number change at same practice location, change
     from Social Security Number to Federal Tax Identification Number
     at same practice location, change from Federal Tax Identification
     Number to Social Security Number at same practice location,
     payment name or address change, and additional service location)
     <<< FR 4.  Configurable Setting >>>

   - question
   - ux
* [[https://github.com/solutionguidance/psm/issues/411][411]] (closed): Add a "do you accept EFT" checkbox

  We have a requirement to flag providers that accept Electronic Funds Transfer.  This should be a new checkbox on the enrollment form.
  
  We should *not* be accepting information like bank routing numbers or account numbers.  That will be the provider management module's responsibility.

** LABELS
   - Z-REQ-PSM-FR-2.15
     The PSM shall maintain a flag for providers who are eligible to
     use electronic funds transfer (EFT) and electronic claims
     submission.
     <<< FR 2.  Capability to build provider profile >>>

   - enhancement
   - ux
* [[https://github.com/solutionguidance/psm/issues/408][408]]   (open): Provider name change feature

  A provider should be able to change their name in the PSM, and preferably, to have that name change propagate across all their enrollments.

** LABELS
   - Z-REQ-PSM-FR-2.16
     The PSM shall accept, validate, and process transactions or user
     entries to update and maintain provider information.
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-4.3
     The PSM shall allow providers to update information and initiate
     re-screening process (e.g., in the following situations: name
     change, change of ownership/operator - whether or not it is the
     same practice location, address change, Federal Tax
     Identification Number change at same practice location, change
     from Social Security Number to Federal Tax Identification Number
     at same practice location, change from Federal Tax Identification
     Number to Social Security Number at same practice location,
     payment name or address change, and additional service location)
     <<< FR 4.  Configurable Setting >>>

   - backend
   - enhancement
* [[https://github.com/solutionguidance/psm/issues/407][407]]   (open): Enrollment termination feature

  Let a provider use the PSM to tell the state Medicaid agency that s/he would like to terminate (end) an active enrollment.
  
  This may be more of a provider management module feature.

** LABELS
   - Z-REQ-PSM-FR-5.2
     The PSM shall allow providers to terminate their enrollment on a
     specified date.
     <<< FR 5. Manage Enrollment >>>

   - Z-REQ-PSM-FR-5.3
     The PSM shall require providers to give 30 days notice before
     terminating enrollment.
     <<< FR 5. Manage Enrollment >>>

   - Z-REQ-PSM-FR-5.4
     The PSM shall require PC Plus providers to give 90 days notice
     before terminating enrollment.
     <<< FR 5. Manage Enrollment >>>

   - Z-REQ-PSM-FR-5.7
     PSM shall terminate enrollment if revalidation is not completed.
     <<< FR 5. Manage Enrollment >>>

   - Z-REQ-PSM-FR-5.8
     The PSM shall capture a termination reason code that is provided
     by the State
     <<< FR 5. Manage Enrollment >>>

   - backend
   - enhancement
   - ux
* [[https://github.com/solutionguidance/psm/issues/406][406]]   (open): Suggest software for viewing filetypes

  In user help documentation, use something like [the list of document viewers on this page](https://www.fbo.gov/index?s=opportunity&mode=form&id=fbc47c90f4347f601c2d96f44c8b0e21&tab=core&_cview=1) as guidance for the service admin when viewing a license or certification.

** LABELS
   - Z-REQ-PSM-FR-7.1
     The PSM shall provide per-field instructions on the application
     screen.
     <<< FR 7. Usability >>>

   - docs
** LABEL CHANGES
   + fr-7.15
* [[https://github.com/solutionguidance/psm/issues/405][405]] (closed): Add contextual help for private versus group practice

  In enrollment steps that include the user choosing whether the provider is an individual/private or group practice difference, link to/reuse the user help documentation distinguishing between a private practice and a group practice.

** LABELS
   - Z-REQ-PSM-FR-7.1
     The PSM shall provide per-field instructions on the application
     screen.
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-FR-7.2
     The PSM shall provide detailed instructions for completing the
     application via a Help link.
     <<< FR 7. Usability >>>

   - docs
* [[https://github.com/solutionguidance/psm/issues/404][404]]   (open): Make configurable page of advice from states to providers

  In our user documentation regarding new enrollments, we want to answer the question:
  
  >  What can I do to reduce the risk of delay or rejection for an enrollment? 
  
  @kfogel [asked](https://github.com/OpenTechStrategies/psm/pull/382#discussion_r135876400):
  
  > We should get help from actual state Medicaid agencies on this section... actually, wait, really this section should be configurable. Its content will differ from state to state. In the meantime, can we have an issue filed on that?

** LABELS
   - Z-REQ-PSM-FR-7.2
     The PSM shall provide detailed instructions for completing the
     application via a Help link.
     <<< FR 7. Usability >>>

   - backend
   - docs
   - enhancement
   - ux
** LABEL CHANGES
   + ii-4.5
* [[https://github.com/solutionguidance/psm/issues/401][401]]   (open): Make enrollment renewals possible/easier

  From the requirements: _The PSM shall reduce the time needed by providers to submit new/renewal application information and resolve discrepancies._

** LABELS
   - Z-REQ-PSM-FR-3.22
     The PSM shall reduce the time needed by providers to submit
     new/renewal application information and resolve discrepancies.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - backend
   - enhancement
   - task
   - ux
* [[https://github.com/solutionguidance/psm/issues/399][399]]   (open): Language: "enrollment" or "application"?

  Currently, we mostly refer to "enrollments" in the user-facing messaging of the PSM:
  
  > New Enrollments
  
  > You can now begin the enrollment process.
  
  > Create New Enrollment
  
  @kfogel [pointed out](https://github.com/OpenTechStrategies/psm/pull/382#discussion_r135871331) that many users will think in terms of "applying" and creating an "application" rather than creating an "enrollment". What language should we use, and should we use different language for providers than for other types of users?

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-SQ-1.5
     The PSM shall use D.R.Y. coding principles to avoid unnecessary
     complexity, inflexibility, redundancy, and denormalization in the
     source code and database schemas, and to use precise terminology
     in data structures and operations.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - question
   - state-question
* [[https://github.com/solutionguidance/psm/issues/398][398]]   (open): Spike: user roles research

  What should each user role be able to do?
  
  What would we need to change in order to make that true?
  
  Related: #326.

** LABELS
   - Z-REQ-PSM-AD-5.12
     The PSM shall support roles and responsibilities of individuals
     that are separated through assigned information access
     authorization as necessary to prevent malevolent activity.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - Z-REQ-PSM-AD-5.4
     The PSM shall support a user security profile that controls user
     access rights to data categories and system functions.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - question
   - task
** LABEL CHANGES
   + ad-5.5
   + ad-5.13
* [[https://github.com/solutionguidance/psm/issues/396][396]] (closed): Decide whether to repair or delete help topics system

  Per @jasonaowen in https://github.com/OpenTechStrategies/psm/issues/195#issuecomment-314795045 , we need to decide whether to repair and use, or delete, the help topics system.
  
  > I reviewed the help system in more depth today. We already knew it was incomplete; users cannot see help items admins create. Finishing that implementation is possible, but may not be the most effective use of our time.
  
  > The help system stores its help items (as it calls them) in the database. This allows for admins to create, edit, and delete topics at runtime. This may be useful for state-specific topics, but topics that all states need would have to be included in the seed data.
  
  > Seeding help items is fine, but such seeded help topics are not great for contextual help: we should be careful about providing a help link next to, say, a disclosure question that goes to a dynamic help page - admins could accidentally delete it, thinking it unnecessary in their environment, and be unable to restore it; there are few things more frustrating than clicking on a help link and receiving a 404 error. If we're seeding the data, and hardcoding links, it would be simpler to just write contextual help directly instead of building and using our own custom CMS.
  
  > On the other hand, maybe it really is useful to allow each state to customize its help documentation, and it is worth hardening pre-seeded help items against deletion. If we're providing separate docs for providers and admins, we would also want to build access controls around help topics. This is doable; we have examples of similar pages and patterns in the application.

** LABELS
   - Z-REQ-PSM-FR-7.1
     The PSM shall provide per-field instructions on the application
     screen.
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-FR-7.2
     The PSM shall provide detailed instructions for completing the
     application via a Help link.
     <<< FR 7. Usability >>>

   - backend
   - docs
   - question
   - tech-debt
   - ux
** LABEL CHANGES
   + ii-4.5
* [[https://github.com/solutionguidance/psm/issues/395][395]]   (open): Create standalone PSM brochure website

  Turn https://opentechstrategies.github.io/psm/ into a site that:
  
  - [x] uses the PSM logo
  - [x] hosts a standalone copy of the user docs, per #195 
  - [ ] links to the PSM community of practice, per #394 
  - [ ] offers basic information about what the project is, who it's for, and who's working on it
  - [x] explains how it is generated, per #482

** LABELS
   - Z-REQ-PSM-FR-7.2
     The PSM shall provide detailed instructions for completing the
     application via a Help link.
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - docs
   - task
* [[https://github.com/solutionguidance/psm/issues/394][394]]   (open): Systematize and advertise online PSM community of practice

  We need PSM users to have a living community of practice to ask for help and clarification, and to make suggestions for improvements.
  
  From #195:
  
  The psm-dev mailing list and the #opentechstrategies IRC channel on Freenode, at least for now, comprise our community of practice. In the longer run, we might want to point people to StackOverflow (or run our own site using one of the FLOSS clones of StackOverflow/StackExchange) to provide a richer community of practice.

** LABELS
   - Z-REQ-PSM-FR-7.2
     The PSM shall provide detailed instructions for completing the
     application via a Help link.
     <<< FR 7. Usability >>>

   - docs
   - task
* [[https://github.com/solutionguidance/psm/issues/392][392]] (closed): Upgrade iText to a version >5, or use OpenPDF

  Older versions of iText have [license issues](https://developers.itextpdf.com/question/versions-older-than-5) (thanks for finding this out, @jasonaowen).  Currently we use iText version 2.1.7, which requires us to purchase a license to avoid possible problems.
  
  @jvasile should take a look at their announcement, and we should upgrade iText.  
  
  @jasonaowen, can you add a comment describing how we're using iText?

** LABELS
   - Z-REQ-PSM-SQ-1.3
     The PSM shall use modern source code dependency management
     techniques, and shall use up-to-date versions of upstream
     third-party dependencies.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - tech-debt
* [[https://github.com/solutionguidance/psm/issues/389][389]] (closed): configurable contact page for reaching state Medicaid office

  [From](https://github.com/OpenTechStrategies/psm/pull/382#discussion_r135869007) @kfogel, regarding a "Please speak with the state Medicaid office" instruction in the user documentation:
  
  > Can we file an issue associated with this last sentence, about having a configurable contact page for reaching the state Medicaid office? E.g., psm.example.com/contact or something like that, which is configured differently for each state or territory where the PSM is installed. Then this text could link to that page.

** LABELS
   - Z-REQ-PSM-FR-7.2
     The PSM shall provide detailed instructions for completing the
     application via a Help link.
     <<< FR 7. Usability >>>

   - backend
   - docs
   - enhancement
** LABEL CHANGES
   + ii-4.5
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/386][386]] (closed): Document connecting to a separate rules server

  This work began in #274, but I think we need an addition to INSTALL.md that fully describes how to connect to the rules server and import the PSM's rules into it.  If not in INSTALL, then maybe in a separate doc in the `docs` directory (linked from INSTALL).
  
  Once #385 is handled satisfactorily, we'll likely suggest to devs that they set up and connect to a separate rules server to have a dev setup that is closer to demo (and eventually prod) configurations.

** LABELS
   - Z-REQ-PSM-II-4.5
     The PSM shall be configurable where feasible.
     <<< II 4.  Technical Service Classification:  System Extensibility >>>

   - Z-REQ-PSM-IU-3.1
     The PSM of shall use standardized business rules definitions that
     reside in a separate application or rules engine.
     <<< IU 3.  Technical Service Classification:  Decision Management >>>

   - Z-REQ-PSM-SQ-1.4
     The PSM shall use documented build, test, release, and
     installation processes that are automated as much as possible,
     for both development and production use.
     <<< SQ 1.  Software Quality and Maintainability >>>

** LABEL CHANGES
   + sa-4.2
* [[https://github.com/solutionguidance/psm/issues/385][385]]   (open): Upgrade separate Drools server

  As discussed in #274, we initially set up a rules server with very old versions of things.  As @slifty wrote:
  
  >using JBPM 5.4 and Drools 5.5 means we are forced to use an old versions of several things. I have not tried turning the knobs to see how recent I can go without breaking things, but the version of jboss that is used by default in the official installer (7.1.1) is unsupported and unpatched (so it could very well have known zero days).
  
  We need to upgrade this server for security purposes.  I know we need to upgrade several pieces here -- @jasonaowen, @slifty, can you comment with details?

** LABELS
   - Z-REQ-PSM-SQ-1.3
     The PSM shall use modern source code dependency management
     techniques, and shall use up-to-date versions of upstream
     third-party dependencies.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - infra
   - task
* [[https://github.com/solutionguidance/psm/issues/381][381]] (closed): Add user help documentation building to Gradle build

  We should use something like https://github.com/mikanbako/sphinx-gradle-plugin to wire the Sphinx build step into our Gradle build process.

** LABELS
   - Z-REQ-PSM-SQ-1.4
     The PSM shall use documented build, test, release, and
     installation processes that are automated as much as possible,
     for both development and production use.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/378][378]]   (open): Autofill provider information from PECOS

  @jvasile points out that when a provider enters their NPI, we can query PECOS for their address and other information, and autofill the form with that.

** LABELS
   - Z-REQ-PSM-FR-3.15
     The PSM shall have the turnaround time for performing automated
     checks typical for a web based system
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.23
     The PSM shall reduce processing and transaction time for
     submitting and receiving queries to authoritative data sources
     regarding provider credentials and sanctions.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-7.11
     The PSM shall validate entered information as provider fills out
     application (not at the end of the process).
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - enhancement
** LABEL CHANGES
   + iu-2.2
* [[https://github.com/solutionguidance/psm/issues/376][376]]   (open): Remove right-justified colons between labels and fields on forms

  On forms like the provider enrollment form, the colons on the labels are right-justified and it looks disconnected.
  
  See https://github.com/OpenTechStrategies/psm/issues/308#issue-246414550  for a screenshot.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - accessibility
   - in progress
   - quick-fix
   - ux
* [[https://github.com/solutionguidance/psm/issues/375][375]] (closed): Registration Page name order is inconsistent

  If we're going to ask for first, middle, and last names on the /cms/accounts/new page, we should put the fields in that order.  Right now it's last, first, middle, which... [derp](http://www.woodweb.com/knowledge_base_images/bah/metric-versus-imperial_02.png).

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - help wanted
   - quick-fix
   - ux
* [[https://github.com/solutionguidance/psm/issues/374][374]]   (open): generate & display user-readable credits page

  From @jvasile on #357:
  
  > License info in License.md is appropriate but we might at some point also consider having it in the front end. It's not a license requirement, but I've always thought that the attribution clause should result in something end-user visible in stuff like this. Maybe a late-stage clean up step would take the license.md file and generate a "Thanks" page. That's a future todo...

** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - docs
   - help wanted
* [[https://github.com/solutionguidance/psm/issues/370][370]]   (open): Problem running with Docker

  Followed the instructions in the [Docker directory](https://github.com/OpenTechStrategies/psm/tree/master/docker), but I can't seem t access the web app. Note - I'm running Docker on Mac (Sierra).
  
  I'm pretty sure it's related to the static IP addressing in the docker-compose file. Any chance you could verify that this will run with Docker on Mac?
  
  Thanks!

** LABELS
   - Z-REQ-PSM-SQ-1.4
     The PSM shall use documented build, test, release, and
     installation processes that are automated as much as possible,
     for both development and production use.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - bug
   - infra
* [[https://github.com/solutionguidance/psm/issues/369][369]]   (open): Validate SSN

  We don't currently validate the SSN on form fill-in.  This is convenient for testing, but we should do simple validation to ensure that the SSN entered is in a valid range.  This is a separate check from looking in the DMF or at https://www.ssa.gov/employer/ssnv.htm.  We should look in those places too during the external data sources phase.
  
  Basically, anything that starts with 000, 666, or 9 is invalid. ("Previously unassigned area numbers were introduced for assignment excluding area numbers 000, 666 and 900-999." See https://www.ssa.gov/employer/randomization.html) so we should reject those.
  
  If we want a properly structured ssn that isn't from one of those area ranges, we could use 078-05-1120 or 219-09-9999, which don't belong to anybody. See https://www.ssa.gov/history/ssn/misused.html.

** LABELS
   - Z-REQ-PSM-FR-3.16
     The PSM shall provide comprehensive verification of all
     (verifiable) data fields for all providers enrolled
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - enhancement
   - ux
** LABEL CHANGES
   + ia-4.3
* [[https://github.com/solutionguidance/psm/issues/362][362]] (closed): Individual Beneficial Owner City Field Doesn't Pick up Entered Value

  # Problem
  When enrolling an organizational provider users are asked to provide information on the organization's beneficial owners. One field, the owner's city ignores entered data on the first submit. After showing an error page and users re-enter the city it is accepted.
  
  # Diagnostics
  An inspection of the page shows that the field is initially defined as
  
  ```<input type="text" class="cityInputFor" name="_17_iboOtherZip_0" value="" maxlength="18">```
  
  After form submission, the input changes, both to reflect the error condition, but also the field name has changed:
  
  ```<input type="text" class="cityInputFor errorInput" name="_17_iboOtherCity_0" value="" maxlength="18">```
  
  # Tasks
  - Fix the field naming
  - Verify that the form accepts the city on the first try.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

* [[https://github.com/solutionguidance/psm/issues/360][360]] (closed): Save subcontractor name

  The flow for organizational provider types includes a page for "Business Ownership or Control Interest."  If you choose "Subcontractor" in the "Type" dropdown then a "Name Subcontractor" label and input field appear.  This is all fine, but if you then choose "Save as Draft," the subcontractor name is not saved.  It also does not appear on the summary page.
  
  I think the name is just never inserted into the database.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - backend
   - bug
   - quick-fix
* [[https://github.com/solutionguidance/psm/issues/359][359]] (closed): Make user help docs reliably user-visible

  Ideally, our user help docs in `psm-app/docs/userhelp/` will be user-visible in all deployed instances of the application.
  
  - Bundle the built user help docs into the application, and give them a reasonable URL (such as `/cms/help`).
  - ~~~Integrate Sphinx build into Gradle build process (create a new `docs` project in `build.gradle` and then add a step for the `cms-web` project to always compile the `docs` project)~~~ See #381
  
  (Followup to #311 and #329.)

** LABELS
   - Z-REQ-PSM-FR-7.2
     The PSM shall provide detailed instructions for completing the
     application via a Help link.
     <<< FR 7. Usability >>>

   - ux
* [[https://github.com/solutionguidance/psm/issues/356][356]]   (open): Admin interface should show source of external data

  When we list somebody as excluded (or not), we are either hitting our own database or an external database.  State admin users would find it useful to know the ultimate source of data and we should give an indication of it.  In the LEIE context, maybe that means linking to a record on the LEIE site or pointing people at the LEIE search page.  Either way, if we exclude people, they might legitimately ask "Why?" and we need a better answer than "the computer said so".

** LABELS
   - Z-REQ-PSM-FR-3.13
     The PSM shall have the capability to track and support the
     screening of applications (and ongoing provider updates) for
     National Provider Identifier (NPIs), State licenses, Specialty
     Board certification as appropriate, review team visits when
     necessary, and any other State and/or Federal Requirement.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-7.1
     The PSM shall provide per-field instructions on the application
     screen.
     <<< FR 7. Usability >>>

   - enhancement
* [[https://github.com/solutionguidance/psm/issues/355][355]]   (open): Improve UI in screening log

  I appreciate the explicit message in "Status: SUCCESS ... No records were matched". When we do find a match, I would love for that screen to explicitly also say, under "Status: SUCCESS" something that parallels the "no records" phrasing, e.g., "At least one record was matched", on its own line, before the NPI and other details of the matched record.
  
  (This was previously a comment on #345.)

** LABELS
   - Z-REQ-PSM-FR-6.6
     The PSM shall keep a record of the date of each
     screening/monitoring event, the score, and the agencies decision
     for each provider.
     <<< FR 6. Retention, Reporting and Auditing >>>

   - quick-fix
   - ux
** LABEL CHANGES
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/354][354]]   (open): Redesign Enrollment Review page

  There is a lot of information an admin needs to see on the review page, and we should consider redesigning it to better present that information. Here's an example of the current page:
  
  ![screenshot 2017-08-08 14 34 56](https://user-images.githubusercontent.com/1494855/29141071-b7296bc4-7d1a-11e7-8502-043092b73ad1.png)
  
  For each of the automatic screenings against external sources, there are several things we should be clearly communicating, which I think we are not now:
  - Was the automatic screening successful, or was there an error?
  - If the automatic screening was successful, was it positive or negative?
  - Does the admin need to take any action? For example, if a match was found in the LEIE, does the admin need to manually verify the provider's SSN using the official LEIE site? Contrarily, if the NPI is not in the National Plan and Provider Enumeration System (NPPES), I don't think there is anything the admin needs to or can do - the enrollment should be rejected.
  - If the admin needs to take an action, have they yet?
  
  Right now, we're trying to fit most of that information into a two-state checkbox and a link, which is not great.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - enhancement
   - ux
* [[https://github.com/solutionguidance/psm/issues/352][352]] (closed): Renewal Date earlier than Original Issue Date

  On the license information page, I noticed that the renewal date could be before the original issue date. Additionally, I noticed that the renewal date could be a date in the past. 

** LABELS
   - Z-REQ-PSM-PH-1.4
     The PSM shall verify that all dates are valid and reasonable.
     <<< PH 1.  CSF PH2: Provider claims are adjudicated accurately within established time parameters. >>>

   - backend
   - bug
   - quick-fix
* [[https://github.com/solutionguidance/psm/issues/351][351]] (closed): Make summary page table more accessible for testing

  Right now, I'm comparing the summary page table with the user input table for the tests. I found the summary page table elements, but I found them using relatively long jquery that seems susceptible to not working if changes are made to the site. I currently use $(".wholeCol > div:nth-child(12) > label).getText() to find an element. I think it'd be really helpful if the elements had IDs to make them easier to find!

** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - quick-fix
* [[https://github.com/solutionguidance/psm/issues/350][350]] (closed): broken link in README

  hi, here's the broken link:
  
  http://www.topcoder.com/cms/medicaid-enrollment-portal/
  

** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/349][349]]   (open): Consider future federal/external data sources

  This issue is to capture possible future federal or other external data sources the PSM might usefully integrate with.
  
  * [Fraud Investigation Database](https://www.cms.gov/Research-Statistics-Data-and-Systems/Computer-Data-and-Systems/FID-2/Overview.html) and other databases listed [by CMS](https://www.cms.gov/Research-Statistics-Data-and-Systems/Research-Statistics-Data-and-Systems.html), such as the Healthcare Integrated General Ledger Accounting System (HIGLAS)
  
  [More links & thoughts in #17.]

** LABELS
   - Z-REQ-PSM-FR-3.13
     The PSM shall have the capability to track and support the
     screening of applications (and ongoing provider updates) for
     National Provider Identifier (NPIs), State licenses, Specialty
     Board certification as appropriate, review team visits when
     necessary, and any other State and/or Federal Requirement.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - enhancement
   - question
   - task
** LABEL CHANGES
   - fr-3.13
   + iu-2.2
   + iu-2.3
   + ia-1.2
   + ia-2.1
   + ia-3.9
   CHECKED (removed "+ ia-3.1")
* [[https://github.com/solutionguidance/psm/issues/347][347]] (closed): Capture Medicaid Number for new Enrollments

  # Problem
  Requirement psm-2.9 states that PSM application shall accept a medicaid number for new enrollments. There is no field for this value.
  
  Add this field to the ~individual and~ organizational info page~s~ in the enrollment workflow and update the serenity tests to confirm.

** LABELS
   - Z-REQ-PSM-FR-2.9
     The PSM shall accept the following fields: Applicant Name,
     Contact Person, Contact phone, Medicaid number
     <<< FR 2.  Capability to build provider profile >>>

   - quick-fix
* [[https://github.com/solutionguidance/psm/issues/346][346]] (closed): Capture contact phone # for individual provider enrollments

  # Problem
  Requirement psm-2.9 states that the application must accept a contact phone number. There is no 
  field for this on the "Personal Information" page.
  
  Add a field for this and update the serenity tests to validate this new field.

** LABELS
   - Z-REQ-PSM-FR-2.9
     The PSM shall accept the following fields: Applicant Name,
     Contact Person, Contact phone, Medicaid number
     <<< FR 2.  Capability to build provider profile >>>

   - quick-fix
* [[https://github.com/solutionguidance/psm/issues/343][343]] (closed): Assign IDs to requirements

  # Problem
  We have an excel spreadsheet holding all of the requirements for the PSM application. As we develop
  tests to demonstrate fulfillment of these requirements we have no means to trace the tests back to
  the requirements.
  
  # Approach 
  Assign each row in the requirements spreadsheet a unique Identifier.

** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - Z-REQ-PSM-SQ-1.5
     The PSM shall use D.R.Y. coding principles to avoid unnecessary
     complexity, inflexibility, redundancy, and denormalization in the
     source code and database schemas, and to use precise terminology
     in data structures and operations.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/342][342]]   (open): DBA is required field

  When signing up a new organizational provider as a Durable Medical Equipment provider, the "Doing Business As" field is required.  It shouldn't be.

** LABELS
   - Z-REQ-PSM-FR-2.6
     The PSM shall require the following fields: Provider Name,
     Business Phone, Provider Street Address, City, State, Zip Code,
     County, SSN, Date of Birth, License Number, IRS Payee Name, DBA
     Name, Payee Address, Payee City, Payee State, Payee Zip Code,
     Payee Tax ID, Provider Email address
     <<< FR 2.  Capability to build provider profile >>>

   - backend
   - bug
   - ux
** LABEL CHANGES
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/341][341]]   (open): Notify submitter & drafter via contact email when enrollment status changes

  We should send a provider an email notification when their enrollment status (pending, modified, approved, or rejected) changes.
  
  (Once this is implemented, it should be documented in `psm-app/docs/userhelp/source/service-admin-help.rst` .)

** LABELS
   - Z-REQ-PSM-FR-8.1
     The PSM shall support communications to and from providers and
     track and monitor responses to the communications.
     <<< FR 8.  Manage Provider Communication >>>

   - Z-REQ-PSM-FR-8.2
     The PSM shall generate information requests, correspondence, or
     notifications based on the status of the application for
     enrollment.
     <<< FR 8.  Manage Provider Communication >>>

   - backend
   - enhancement
   - in progress
   - task
* [[https://github.com/solutionguidance/psm/issues/340][340]] (closed): "System error" on creating user (though creation succeeds)

  When I'm logged in as the `system` user and create a new provider-type user, I get a "System Error" page after hitting "Save."  The new user is, however, created correctly.  I think this is a regression -- at one point I believe creating users brought us to some kind of success page.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - bug
* [[https://github.com/solutionguidance/psm/issues/338][338]]   (open): Improve user help documentation

  For all users:
  
  * What kind of computer or phone do I need to have to use this system? (#298)
  * What file types and file sizes are allowed for the license and certification scans? (#263 and #192) [Possible answer: The site currently does not limit the file types you can upload, but to make sure the state staff can read the file, the recommended file types are PDF, PNG, and JPEG. The maximum file size is 512 megabytes (512 MB).]
  * What if my question isn't answered here?
  
  For service agents:
  * [Define "service agent" at the top of the documentation](https://github.com/OpenTechStrategies/psm/pull/382#discussion_r135882892).
  
  For service admins:
  * What is a Category Of Service for an enrollment, and why/how do you use it?
  * What is the approval workflow and why can a service admin approve some enrollments and not others?
  * How can a service admin renew an enrollment?
  * What software should I use when viewing various filetypes? (#406)
  
  For providers:
  
  -  Can I do this on paper instead?
  -  How long will it take to process my enrollment?
  -  If the state rejects my enrollment, how do I learn the reason and appeal?
  -  Will I get a reminder when it's time to renew my enrollment?
  -  How do I renew my enrollment? (#401)
  -  I know nothing is going to change in my enrollment next year. Can I ask you to auto-renew my enrollment?
  -  What should I do if I suspect someone is illegitimately using my enrollment to engage in Medicaid fraud?
  -  How does enrolling differ from credentialling? [Potential answer to double-check: The Provider Screening Module is how states screen providers (checking whether they are *excluded* from participating), rather than
  credential them (checking whether they are *qualified* to participate). The PSM does help states check credentialling authorities (such as [PECOS, the federal Medicare Provider Enrollment, Chain, and Ownership System](https://pecos.cms.hhs.gov/)), when possible.]
  - Why and how would a provider enroll multiple times? (See https://github.com/OpenTechStrategies/psm/pull/382#discussion_r135873015 and https://github.com/OpenTechStrategies/psm/pull/382#discussion_r135876834 and https://github.com/OpenTechStrategies/psm/pull/382#discussion_r135876996 .)
  
  Additionally:
  * Reorganize and reword the help to reflect intended audiences. See https://github.com/OpenTechStrategies/psm/pull/382#discussion_r135872561 , https://github.com/OpenTechStrategies/psm/pull/382#discussion_r135873174 , https://github.com/OpenTechStrategies/psm/pull/382#discussion_r135873228  , https://github.com/OpenTechStrategies/psm/pull/382#discussion_r135879962 , https://github.com/OpenTechStrategies/psm/pull/382#discussion_r135881209

** LABELS
   - Z-REQ-PSM-FR-7.2
     The PSM shall provide detailed instructions for completing the
     application via a Help link.
     <<< FR 7. Usability >>>

   - docs
* [[https://github.com/solutionguidance/psm/issues/337][337]] (closed): Can't enroll as a podiatrist

  Missing the correct type of license in the License Type dropdown.  See #307, #293, #233.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - bug
* [[https://github.com/solutionguidance/psm/issues/336][336]]   (open): Can't paste into NPI field

  What it says on the TIN.  We shouldn't be forcing users to memorize their NPIs, especially since leaving the input with a half-entered NPI means the app deletes the already-entered information (we shouldn't do that, either).

** LABELS
   - Z-REQ-PSM-FR-3.16
     The PSM shall provide comprehensive verification of all
     (verifiable) data fields for all providers enrolled
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.24
     The PSM shall validate, and/or verify that all data items that
     contain self-checking digits (e.g., National Provider Identifier)
     passes a specified check-digit test. 
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - enhancement
   - quick-fix
   - review
   - ux
** LABEL CHANGES
   + ia-4.3
* [[https://github.com/solutionguidance/psm/issues/335][335]]   (open): Show author and timestamp on enrollment notes

  As demonstrated in these screenshots, a service admin can write and view notes on enrollments. But the PSM doesn't show who wrote a note or when. It would help the admin better understand and interpret notes on enrollments if the PSM automatically included the note's author and timestamp for each note.
  
  ![test-note](https://user-images.githubusercontent.com/842790/28946979-8623d76a-787b-11e7-80b6-d7d846a04f40.png)
  ![list-of-enrollments-including-notes](https://user-images.githubusercontent.com/842790/28946980-863bc424-787b-11e7-8808-452762d0ebc5.png)

** LABELS
   - Z-REQ-PSM-FR-6.6
     The PSM shall keep a record of the date of each
     screening/monitoring event, the score, and the agencies decision
     for each provider.
     <<< FR 6. Retention, Reporting and Auditing >>>

   - Z-REQ-PSM-FR-7.10
     The PSM shall show integrated history of a provider record --
     allow users to scroll back in history to see changes over time
     without needing to navigate to separate files.
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - enhancement
   - help wanted
   - ux
** LABEL CHANGES
   + iu-4.1
   + ad-5.8
* [[https://github.com/solutionguidance/psm/issues/333][333]] (closed): Make the "Create New Enrollment" Button Testable

  # Problem
  As part of Serenity testing for the enrollment process, we need to programmatically click on the
  "Create New Enrollment" button from the application dashboard. This button lacks an ID in the DOM and is difficult to find as part of a JQuery path.
  
  # Solution
  
  - [ ] Modify the dashboard page so that `<a>` element has an ID that can be referenced. 
  - [ ] Modify `DashboardPage` class to reference this in the `clickOnNewEnrollment` method.

** LABELS
   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - quick-fix
* [[https://github.com/solutionguidance/psm/issues/331][331]]   (open): add username of submitter to enrollment details review screen

  When a service admin is reviewing enrollments, they'll find it useful to know whether a provider submitted the enrollment themselves or used a service agent or service admin to do so, and if the latter, who the actual submitter was. A service admin will want to be able to see who made the enrollment submission, to more easily notice and address patterns (e.g., "all the enrollments coming from this particular service agent are ill-formatted, so I'll ring them up with advice"). Right now, the PSM gives the service admin no indication of who made a submission.
  
  I suggest that the service admin's "View Enrollment Details" summary (see screenshot) include the submitter username as metadata (perhaps next to "Submitted On").
  
  ![view-enrollment-details](https://user-images.githubusercontent.com/842790/28938137-1b1a0f7c-785b-11e7-9ca8-5cb8aae3a325.png)

** LABELS
   - Z-REQ-PSM-FR-4.8
     The PSM shall support provider agents (a.k.a. service agents
     a.k.a. non-provider users) who act on a provider's behalf and
     whose authorization may be a subset of that provider's.
     <<< FR 4.  Configurable Setting >>>

   - enhancement
   - ux
* [[https://github.com/solutionguidance/psm/issues/328][328]]   (open): Validate fields on loss of focus instead of on submission

  From @kfogel in #325:
  
  >Karl asks: We should talk about how we plan to add immediate validation, so that the user is made aware of such errors as soon as they indicate the field is complete (e.g., by tabbing or clicking away from the field).  [...] Do we agree that this is on the roadmap (even if not for MVP), and that it's something we can talk about?
  
  This enhancement is to do validation of dates, NPIs, etc on click away / loss of focus instead of on page submission.  Some already do this (e.g. NPI), but others, like DOB, don't yet.  Completing this is not part of MVP, but is on the roadmap.
  
  <sub>Confidential to @kfogel: I don't think talking about this is compelling content for a demo.  It'll be good to *show* later, once it's working, but I think describing it will take more time than we have.</sub>

** LABELS
   - Z-REQ-PSM-FR-3.16
     The PSM shall provide comprehensive verification of all
     (verifiable) data fields for all providers enrolled
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - next
   - task
   - ux
** LABEL CHANGES
   + ia-4.3
   + ia-4.4
* [[https://github.com/solutionguidance/psm/issues/327][327]]   (open): consider retention policies/deleting and archiving provider accounts

  Providers will sometimes want to deactivate their PSM accounts, such as when they retire. They may think of this as deletion; for record-keeping posterity we should probably allow them to archive their accounts, moving them into a permanent dormant state.
  
  Also, we'll need to think about a flexible data retention framework that can accommodate states' different data retention policies.

** LABELS
   - Z-REQ-PSM-PH-1.1
     The PSM shall verify that required data items are present and
     retained (See SMM 11375) including all data needed for State or
     Federal reporting requirements.
     <<< PH 1.  CSF PH2: Provider claims are adjudicated accurately within established time parameters. >>>

   - Z-REQ-PSM-PH-1.2
     The PSM shall check Provider Screening Applications to ensure
     that all required attachments, per the reference records or
     edits, have been received and maintained for audit purposes or
     have been submitted prior to the Provider Screening Applications
     and a prior authorization has been established.
     <<< PH 1.  CSF PH2: Provider claims are adjudicated accurately within established time parameters. >>>

   - Z-REQ-PSM-PH-1.3
     The PSM shall verify that all data necessary for legal
     requirements are retained.
     <<< PH 1.  CSF PH2: Provider claims are adjudicated accurately within established time parameters. >>>

   - enhancement
   - infra
   - state-question
   - ux
** LABEL CHANGES
   + ia-4.2
* [[https://github.com/solutionguidance/psm/issues/326][326]]   (open): Improve user role names and explanations

  @jasonaowen and I just discussed [a review note](https://github.com/OpenTechStrategies/psm/pull/311#discussion_r130903066) by @cecilia-donnelly about user role names:
  
  > We should really come up with better/more intuitive names for these roles.
  
  I suspect that reading the Vermont, Missouri, Minnesota, and Ohio requirements documents would help us learn what terms the people in each state use when thinking about these roles. I have some suggestions/thoughts:
  
  * "Provider" is probably fine.
  * "Service agent" -- how about "broker" or "provider representative"?
  * "Service admin" -- to distinguish this role better from the "system admin" and focus on what the user *does* (overseeing enrollments and service agents), how about "reviewer", "approver", or "supervisor"?
  * "System admin" -- if the only function of this role is to manage user accounts, maybe we could call them the "accounts admin"?

** LABELS
   - Z-REQ-PSM-AD-5.12
     The PSM shall support roles and responsibilities of individuals
     that are separated through assigned information access
     authorization as necessary to prevent malevolent activity.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - Z-REQ-PSM-AD-5.4
     The PSM shall support a user security profile that controls user
     access rights to data categories and system functions.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - state-question
* [[https://github.com/solutionguidance/psm/issues/321][321]]   (open): Display name of county, not numeric code, as part of practice address

  Splitting this off from #159:
  
  The Practice Information confirmation step during enrollment displays the address with an extra number after the ZIP: the county code.
  
  > `<c:set var="county" value="${requestScope['_06_county']}" /><c:if test="${not empty county}">,</c:if>${county}`
  
  We should probably rig this to actually display the county name, not a numeric county code like "40".

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - quick-fix
   - state-question
* [[https://github.com/solutionguidance/psm/issues/320][320]]   (open): LEIE and documentation-building dependency management

  In PR #317, I proposed using `requirements.txt` to pin dependencies. I don't have as complete an understanding of Python packaging as others on this team, and pinning has trade-offs which we should agree on.
  
  How shall we handle dependencies of the LEIE API, and any other Python projects that will live in this repository? We came up with several options:
  
  1. README with `pip install...` instructions
  2. README with `pip install...` instructions combined with `requirements.txt`
  3. `requirements.txt` with pinned dependencies (current status)
  4. `requirements.txt` with floating dependencies
  5. `setup.py` with dependency ranges
  6. `setup.py` with dependency ranges combined with `requirements.txt` with pinned dependencies
  7. something else, which I've not yet considered
  
  Decide on a strategy and implement it.

** LABELS
   - Z-REQ-PSM-SQ-1.3
     The PSM shall use modern source code dependency management
     techniques, and shall use up-to-date versions of upstream
     third-party dependencies.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - infra
   - task
* [[https://github.com/solutionguidance/psm/issues/319][319]]   (open): clarify enrollment review screen

  ![reviewing-enrollment](https://user-images.githubusercontent.com/842790/28881486-4296d638-7776-11e7-9564-2136cea202d0.png)
  
  The UI here is not super great in my opinion -- the header "License Information" probably ought to be visually separated from the Provider Information section so it's clearer that the "View" link (circled) refers to a license/certification.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - ux
* [[https://github.com/solutionguidance/psm/issues/312][312]]   (open): Set up a pull request template

  As we get closer to production, and have more functionality documented, we should be more mindful of the changes we make.
  
  GitHub offers the ability to set up a [pull request template](https://help.github.com/articles/creating-a-pull-request-template-for-your-repository/) which autofills the body of the new PR form. We can populate that with the things we want to be sure of, such as...
  
  - is the functionality being changed documented? is that documentation updated in this PR?
  - how have you tested this?
  - does this affect the UI? do you have before & after pictures?
  
  Also consider [the templates in this repo](https://github.com/stevemao/github-issue-templates) as a source of ideas.

** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - help wanted
   - infra
   - task
* [[https://github.com/solutionguidance/psm/issues/309][309]]   (open): "Additional Practice Locations" County field expects code, not string

  The county field will not accept letters, only numbers.  It appears to expect the code / ID of the county.  Really, this should be a dropdown as in #283.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - backend
   - bug
   - quick-fix
   - ux
** LABEL CHANGES
   + ia-4.4
* [[https://github.com/solutionguidance/psm/issues/308][308]] (closed): Ownership information checkbox autofills improperly

  Some organizational provider types (e.g. Durable Medical Equipment), have an "Ownership Information" page.  On that page, when a user fills in an individual provider, there is a checkbox with the label "This person/business has an ownership or control interest in another Medicaid disclosing entity, or an entity that does not participate in Medicaid but is required to disclose ownership and control interest because of participation in any Title V, XVIII, or XX programs."  When I did *not* check that checkbox and hit "Next," the following happened:
  
  ![screenshot from 2017-07-28 12-37-13](https://user-images.githubusercontent.com/1497818/28729503-40e9ba2c-7392-11e7-8585-64764837a63f.png)
  
  You can see that the checkbox is now checked and the application has some errors because I did not fill in the required information about the other Medicaid disclosing entity.
  
  I only filled in one owner, and did not fill in any business owners.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - bug
   - quick-fix
   - ux
* [[https://github.com/solutionguidance/psm/issues/307][307]]   (open): Birthing Centers cannot submit enrollments

  There are no licenses for Birthing Centers in our sample data.  See also #293 and #233.

** LABELS
   - Z-REQ-PSM-FR-2.7
     The PSM shall accept the following fields: Practice Type,
     Specialties (1 or more), NPI, HIPAA Taxonomy Codes, CLIA number,
     DHSS certification, Optical and Audiology y/n, Collaborative
     Practice Agreement y/n, RHC y/n, Medicare Provider Number, Case
     Mgmt y/n, Rural Health Rate
     <<< FR 2.  Capability to build provider profile >>>

   - backend
   - bug
   - quick-fix
** LABEL CHANGES
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/305][305]]   (open): Should service admins be able to edit all aspects of a pending enrollment?

  Right now, a service administrator ("service admin") user can edit every part of a pending enrollment. (This includes provider/organization information (provider type, name, Social Security #, NPI, date of birth, email address, contact name and address), license info (PHS Indian Hospital info, licenses/certifications), and everything in the Practice Information and Provider Statement sections. (See #301 for a ramification of this last bit.)
  
  But what that means is that a service administrator can change the details within an enrollment after a provider *has already submitted it and given their electronic signature* attesting to the accuracy and completeness of the enrollment. This reduces the validity/provenance of the enrollment as a legal document.
  
  I presume that the reason for a service administrator to be able to edit a pending enrollment is to make it faster and easier to fix small enrollment issues like misformatted addresses, and to reduce the burden on the provider or service agent. I'm not certain how thoroughly we record changes to an enrollment, and how we display that audit trail to administrators and auditors.
  
  Should we remove this privilege?

** LABELS
   - Z-REQ-PSM-AD-5.12
     The PSM shall support roles and responsibilities of individuals
     that are separated through assigned information access
     authorization as necessary to prevent malevolent activity.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - security
   - state-question
** LABEL CHANGES
   + iu-4.1
   + ia-4.2
   + ad-5.8
   + ad-5.9
   + ad-5.13
   + fr-4.8
* [[https://github.com/solutionguidance/psm/issues/304][304]] (closed): Teach Travis to Deploy application to container and run integration tests

  # Problem
  As part of PR #279 we need to be able to run the full suite of Serenity tests against a freshly deployed
  application, running in the travis container. I've been working on this off and on for several weeks and
  the best I can come up with is unreliably unreliable (it works just often enough to make us feel that it should work).
  
  # Configuration
  In the `204_selenium_tests` branch the travis.yml file has entries to call a script called `start-wildfly-deploy-application.sh' which:
  
  - Creates the PSM database and user on the travis-provided Postgres server
  - Loads the seed data into the database
  - Downloads the Postgres jdbc driver
  - Starts up wildfly in standalone mode
  - Deploy's Postgres driver and creates data sources
  - Configures wildlfly to talk to the travis-provided SMTP server
  - Finally deploys the freshly build EAR file to the server
  
  The travis.yml file has some additions to it:
  
  - Tells travis to launch a Postgres 9.6 service in the container
  - Install Firefox version 46.0.1 (the latest version of Firefox compatible with our selenium drivers)
  - Sets environment variables to help selenium find the Firefox binary and X-windows virtual display
  - Start the Xwindows virtual display service so we can run Firefox headlessly
  - Build the EAR file
  - Deploy the EAR file
  - Finally run tests against the running application
  
  # Current Situation
  There are two common failure modes:
  
  1. When starting wildfly you get an exception that it can't start JMS due to a missing dependency: 
  ```
  19:55:23,058 INFO  [org.jboss.ws.common.management] (MSC service thread 1-6) JBWS022052: Starting JBossWS 5.1.5.Final (Apache CXF 3.1.6)
  
  19:55:23,107 ERROR [org.apache.activemq.artemis.core.server] (ServerService Thread Pool -- 64) AMQ224000: Failure in initialisation: java.lang.RuntimeException: Cannot initialize queue:Resource temporarily unavailable
  ```
  
  2. After wildfly is reloaded to accept the data sources we deploy the app and we get a different error (which I can't find in my history, but it is similar)
  
  I thought the second failure mode was caused by attempting to deploy in the middle of the restart and tried adding a second call to `wait_for_wildfly` but that introduced a race condition since the restart can happen quickly and that script misses the line in the log file that it is supposed to wait on.
  
  Lately I've seen that I can get past the first failure mode by clearing out the travis cache, build. It fails, try again and it succeeds, try again and it fails thereafter.
  
  
  
   

** LABELS
   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - infra
   - task
* [[https://github.com/solutionguidance/psm/issues/301][301]]   (open): When service admin edits pending enrollment, PSM inappropriately checks provider statement date

  To reproduce:
  
  * Create and submit an enrollment so that it's in the Pending state. (To do this, you'll need to state the current date in the Provider Statement screen.)
  * Wait till at least the next day.
  * Log in as a service administrator.
  * Navigate to [the pending enrollments view](http://localhost:8080/cms/provider/search/pending?statuses=Pending&showFilterPanel=true) and click the Edit link for the pending enrollment, e.g., `cms/provider/enrollment/reopen?id=33` .
  * Click on the Provider Statement tab, e.g., `javascript:submitFormById('enrollmentForm',%20'/cms/provider/enrollment/jump?page=Provider+Statement')`.
  * Click on any other tab, such as License Info.
  
  What should happen:
  
  The PSM should allow you to go to that other tab to view the enrollment details.
  
  What happens instead:
  
  Although the URL changes (to, for instance, `cms/provider/enrollment/jump?page=License+Information`), the screen doesn't change away from the Provider Statement tab. An error message displays:
  
  > Please correct the following errors:
  > Provider statement signature date cannot be a past date.
  
  This is inappropriate; we shouldn't be asking the service administrator to change the date that the provider attested to the accuracy of their submission.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - backend
   - bug
* [[https://github.com/solutionguidance/psm/issues/300][300]]   (open): Set guidelines for copyright headers

  Source code that we create as part of this project should have a license header. What should that header be? How should we treat existing code?
  
  We have a [LICENSE.md](https://github.com/OpenTechStrategies/psm/blob/524683b84ef119d26c266dc71bb3cb796266199d/LICENSE.md) file, which specifies that we are using the Apache license. The bulk of the header will thus be the Apache license header, but with what copyright line? How shall we update existing code?
  
  [CONTRIBUTING.md](https://github.com/OpenTechStrategies/psm/blob/524683b84ef119d26c266dc71bb3cb796266199d/CONTRIBUTING.md) has some guidelines around this, but it would be good to add a specific template and guidelines around updating existing code.
  
  In particular, for those of us working on this on behalf of CMS, is there a government contract we should cite, as so much of the code developed by TopCoder does? How shall we assign copyright?

** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - question
* [[https://github.com/solutionguidance/psm/issues/299][299]] (closed): Podiatrist can't submit enrollment

  Our sample data appears to have no issuing board(s) for the Podiatrist provider type, so Podiatrists cannot complete the enrollment process.
  
  See also #293.

** LABELS
   - Z-REQ-PSM-FR-2.7
     The PSM shall accept the following fields: Practice Type,
     Specialties (1 or more), NPI, HIPAA Taxonomy Codes, CLIA number,
     DHSS certification, Optical and Audiology y/n, Collaborative
     Practice Agreement y/n, RHC y/n, Medicare Provider Number, Case
     Mgmt y/n, Rural Health Rate
     <<< FR 2.  Capability to build provider profile >>>

   - bug
** LABEL CHANGES
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/298][298]]   (open): Specify OSes and browsers we support

  Issues like #265 will be easier if we know which browsers & versions we commit to supporting.

** LABELS
   - Z-REQ-PSM-AD-2.5
     To the greatest extent possible, the PSM shall be browser
     agnostic.
     <<< AD 2.  Technical Service Classification:  Client Support >>>

   - Z-REQ-PSM-FR-7.2
     The PSM shall provide detailed instructions for completing the
     application via a Help link.
     <<< FR 7. Usability >>>

   - question
   - state-question
* [[https://github.com/solutionguidance/psm/issues/293][293]]   (open): Nurse Midwife can't submit enrollment

  Our sample data appears to have no issuing board(s) for the Certified Nurse Midwife subspecialty, so Nurse Midwifes cannot complete the enrollment process.

** LABELS
   - Z-REQ-PSM-FR-2.7
     The PSM shall accept the following fields: Practice Type,
     Specialties (1 or more), NPI, HIPAA Taxonomy Codes, CLIA number,
     DHSS certification, Optical and Audiology y/n, Collaborative
     Practice Agreement y/n, RHC y/n, Medicare Provider Number, Case
     Mgmt y/n, Rural Health Rate
     <<< FR 2.  Capability to build provider profile >>>

   - backend
   - bug
   - quick-fix
** LABEL CHANGES
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/292][292]] (closed): Label all required fields

  We have some related requirements about required fields:
  
  - [x] The PSM shall indicate which fields are required.
  - [x] The PSM shall require the following fields: Provider Name, Business Phone, Provider Street Address, City, State, Zip Code, County, SSN, Date of Birth, License Number, IRS Payee Name, DBA Name, Payee Address, Payee City, Payee State, Payee Zip Code, Payee Tax ID, Provider Email address
  - [x] The PSM shall automatically reject applications that do not include all mandatory information.
  - [x] The PSM shall prevent application submission if required fields are empty.
  
  In most places, we have red asterisks to indicate required fields, meeting the first requirement (though we need a thorough review to make sure that *all* required fields are so indicated).  The auto-rejection and submission-prevention items work in the cases I've reviewed -- a Selenium test to spot-check those would be helpful.

** LABELS
   - Z-REQ-PSM-FR-2.5
     The PSM shall indicate what kinds of documents/attachments are
     required by provider type.
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-2.6
     The PSM shall require the following fields: Provider Name,
     Business Phone, Provider Street Address, City, State, Zip Code,
     County, SSN, Date of Birth, License Number, IRS Payee Name, DBA
     Name, Payee Address, Payee City, Payee State, Payee Zip Code,
     Payee Tax ID, Provider Email address
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-2.8
     The PSM shall require the following fields: Contact email, Merger
     y/n, Owner/board names and addresses, Care settings, DEA
     controlled substances certification y/n, DEA revocation y/n
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-7.8
     The PSM shall indicate which fields are required.
     <<< FR 7. Usability >>>

* [[https://github.com/solutionguidance/psm/issues/291][291]] (closed): Verify that initial requirements are met

  - [x] The PSM shall ensure that tax ID number is 9 digits
  - [x] The PSM shall allow applicant to upload attachments to support the application.
  - [x] The PSM shall accept the following fields: Applicant Name, Contact Person, Contact phone, Medicaid number
  - [x] The PSM shall separate providers into risk categories limited, moderate, and high based on provider type, as established by CMS.
  - [x] The PSM shall provide a screen to verify entered information.
  - [x] The PSM shall allow applicant to edit entered information.
  - [x] The PSM shall allow applicant to print application for their records.
  - [x] The PSM shall allow applicant to save a partial application as a draft.
  - [x] The PSM shall indicate what kinds of documents/attachments are required by provider type.
  - [x] The PSM shall validate entered information as provider fills out application (not at the end of the process).
  
  I believe that these requirements are met with the current state of the PSM.  Some of them can be verified manually, while others should be tested with Selenium.  If any of them are not met, please open an issue to fix them.  (If it's better to separate these into individual issues we can do that too.)

** LABELS
   - Z-REQ-PSM-FR-1.2
     The PSM shall ensure that tax ID number is 9 digits
     <<< FR 1.  Capability to conduct identity verification >>>

   - Z-REQ-PSM-FR-2.4
     The PSM shall allow applicant to upload attachments to support
     the application.
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-2.5
     The PSM shall indicate what kinds of documents/attachments are
     required by provider type.
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-2.9
     The PSM shall accept the following fields: Applicant Name,
     Contact Person, Contact phone, Medicaid number
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-3.4
     The PSM shall separate providers into risk categories limited,
     moderate, and high based on provider type, as established by CMS.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-7.11
     The PSM shall validate entered information as provider fills out
     application (not at the end of the process).
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-FR-7.5
     The PSM shall allow applicant to edit entered information.
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-FR-7.6
     The PSM shall allow applicant to print application for their
     records.
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-FR-7.7
     The PSM shall allow applicant to save a partial application as a
     draft.
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-FR-7.9
     The PSM shall prevent application submission if required fields
     are empty.
     <<< FR 7. Usability >>>

* [[https://github.com/solutionguidance/psm/issues/290][290]] (closed): Add 4 extra digits to zipcode field(s)

  Wherever a form asks for a zipcode, add space for the 4 additional digits.

** LABELS
   - Z-REQ-PSM-FR-2.1
     The PSM shall have the option of zipcode + 4 for all address
     fields
     <<< FR 2.  Capability to build provider profile >>>

   - quick-fix
* [[https://github.com/solutionguidance/psm/issues/289][289]] (closed): Use LEIE API to automatically screen providers

  @jvasile has added a draft API to the LEIE data he's pulled in via ETL, as described in #224.  Per conversation in #17, this LEIE data corresponds to the "EXCLUDED PROVIDER VERIFICATION IN OIG (checked means not in exclusion list)" checkbox on the admin review screen:
  
  ![screenshot from 2017-07-24 09-52-43](https://user-images.githubusercontent.com/1497818/28529326-dff2e4d0-7055-11e7-8c5c-99e6610052d6.png)
  
  To automatically screen, the PSM should check the LEIE API for the provider with the name and/or NPI and/or tax id given in the enrollment (however the API expects to be called).  If the provider is in the exclusions list, the checkbox should be left unchecked.  If the provider is not found in the exclusions list, the checkbox should be checked.  In either case, an audit log should appear linked from the "View" link in the Auto Screening column (currently no screening is done):
  
  ![screenshot from 2017-07-24 10-09-46](https://user-images.githubusercontent.com/1497818/28530118-4edeabe8-7058-11e7-86ff-3de993b524f4.png)
  

** LABELS
   - Z-REQ-PSM-FR-3.13
     The PSM shall have the capability to track and support the
     screening of applications (and ongoing provider updates) for
     National Provider Identifier (NPIs), State licenses, Specialty
     Board certification as appropriate, review team visits when
     necessary, and any other State and/or Federal Requirement.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.5
     The PSM shall screen limited-risk providers by verifying that the
     provider or supplier meets all applicable federal regulations and
     state requirements for the provider or supplier type, conducting
     license verifications, including licensure verifications across
     state lines for physicians, non-physician practitioners,
     providers and suppliers, and conducting database checks on a
     pre-and post-enrollment basis to ensure that providers and
     suppliers continue to meet the enrollment criteria for their
     provider/supplier type.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-6.7
     The PSM shall store monthly audit record for a provider even if
     their information has not changed.
     <<< FR 6. Retention, Reporting and Auditing >>>
** LABEL CHANGES
   + iu-2.2
   + iu-2.3
   + ia-1.2
   CHECKED (removed "+ ia-3.1"; removed "+ ia-3.9")

* [[https://github.com/solutionguidance/psm/issues/283][283]]   (open): County field should be a drop-down menu, on Additional Practice Location page.

  See the attachment provided in issue #282 -- it's all there.  Filing this as a separate issue because it's a different kind of problem from the outright bugs otherwise described in that attachment.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - quick-fix
   - ux
* [[https://github.com/solutionguidance/psm/issues/282][282]] (closed): Address entry / preservation problems for Additional Practice Location.

  As reported by Judy Cunard in [this post](https://groups.google.com/d/msg/psm-dev/CoynozmCWfI/3f2zy6gABwAJ), there are some bugs with the address fields on the Additional Practice Location page.  The bugs involve preservation of information & positioning across backwards and forwards page changes, as well as the fact that County is not a drop-down menu (which is now separate bug #283).  Judy provided a narrative reproduction recipe in an attachment; that document is attached here as well.
  
  [PSM Scenario Screen Shots 06302017.docx](https://github.com/OpenTechStrategies/psm/files/1160829/PSM.Scenario.Screen.Shots.06302017.docx)

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - quick-fix
** LABEL CHANGES
   + ia-4.2
* [[https://github.com/solutionguidance/psm/issues/280][280]] (closed): Tell developers how to automatedly create enrollments with sample data

  When we're reviewing PRs (or demoing the system), it would be useful to be able to create sample enrollments without going through the entire workflow in the interface.  
  
  See the [dev-sample-enrollment](https://github.com/OpenTechStrategies/psm/tree/dev-sample-enrollment) branch for my work on this so far.  @jasonaowen and I also talked about it in channel:
  
  >cdonnelly: I'm working on the sample enrollment: https://github.com/OpenTechStrategies/psm/commit/6588afcc9e03f4a1c074f469111ff6026ebe7dcc
  [...]
  >jasonaowen: I think you have the right approach - create an enrollment or two, then dump the database and pick out the relevant bits
  >jasonaowen: ooh, this might be easier: dump before and after, and diff
  >cdonnelly: ohhh that's a great idea!
  >cdonnelly: I was wondering if i'd actually included *too* much info
  >jasonaowen: yeah, the comments and `SET` statements and so on shouldn't be needed
  >jasonaowen: ideally just a few insert statements
  >cdonnelly: so a diff is a great idea

** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - Z-REQ-PSM-SQ-1.4
     The PSM shall use documented build, test, release, and
     installation processes that are automated as much as possible,
     for both development and production use.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - docs
   - infra
** LABEL CHANGES
   + ia-3.8
* [[https://github.com/solutionguidance/psm/issues/274][274]] (closed): Give administrators UI to edit rules

  Each state will have different requirements around provider enrollments: things like what credentials are acceptable, what screening needs to take place, and so on. We are using a rules engine to manage all that, but our current workflow for changing those rules is not very user-friendly.
  
  Present a UI to administrators to allow them to edit those rules at runtime.

** LABELS
   - Z-REQ-PSM-IU-3.1
     The PSM of shall use standardized business rules definitions that
     reside in a separate application or rules engine.
     <<< IU 3.  Technical Service Classification:  Decision Management >>>

** LABEL CHANGES
   + sa-4.0
   + sa-4.2
   + iu-3.2
* [[https://github.com/solutionguidance/psm/issues/273][273]]   (open): PECOS data ETL

  We need PECOS data.  There's some at https://data.cms.gov/Medicare-Enrollment/Order-and-Referring/qcn7-gc3g and there's an API.  We shouldn't ETL this data.  We should query the outside database using the interface they provide.

** LABELS
   - Z-REQ-PSM-FR-3.13
     The PSM shall have the capability to track and support the
     screening of applications (and ongoing provider updates) for
     National Provider Identifier (NPIs), State licenses, Specialty
     Board certification as appropriate, review team visits when
     necessary, and any other State and/or Federal Requirement.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - enhancement
** LABEL CHANGES
   + iu-2.2
   + iu-2.3
   CHECKED (removed "+ iu-4.2"; removed "+ ia-1.2"; removed "+ ia-3.1"; removed "ia-3.9")
* [[https://github.com/solutionguidance/psm/issues/266][266]] (closed): Publish Output from Serenity Tests

  # Problem
  The travis serenity test runs the freshly built application through a series of tests. The output of this 
  test is a friendly dashboard which is, unfortunately discarded at the end of the test. We need to save this artifact for demonstrating  correct function of the system.
  
  
  # Solution
  Travis allows for specific artifacts to be exported to an S3 bucket.
  
  Add AWS Credentials to the travis account and then add the following lines to the .travis.yml
  
  ```
     artifacts:
       paths:
        - ../wildfly-10.1.0.Final/standalone/log/server.log
        - psm-app/integration-tests/build/reports
        - psm-app/integration-tests/target
  ```
  
  Some thought needs to be given to purging old runs from the bucket so that it doesn't grow unbounded.
  

** LABELS
   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - infra
   - task
* [[https://github.com/solutionguidance/psm/issues/265][265]] (closed): Set up first example of embedded help

  @brainwane discussed the need for embedded (tooltip-type) help in #195.
  
  >- In-app context-sensitive help
  >  This depends on the frontend libraries and frameworks we use; James suggested it would be nice if we could in some way reuse stuff from a central knowledge base. [Read the Docs content embedding via JavaScript](https://docs.readthedocs.io/en/latest/features/embed.html) via JavaScript might be something to consider.
  
  When a user is completing a form on a page (for example), we should offer a tooltip for each field that describes what we expect the content of that field to look like.  For example, a tooltip for "NPI" might say something like "National Provider Identifier" and describe where a provider can get an NPI.
  
  The to-do's for this issue are:
  1. Should we use a framework like the RTD one Sumana mentioned?  If so, which one?  We'd like to reuse text in the tooltips and standalone documentation, and keep them up to date with each other.
  2. Create a tooltip for a field.

** LABELS
   - Z-REQ-PSM-FR-7.1
     The PSM shall provide per-field instructions on the application
     screen.
     <<< FR 7. Usability >>>
** LABEL CHANGES
   + fr-7.14

* [[https://github.com/solutionguidance/psm/issues/263][263]]   (open): Change default file upload size in cms.properties

  When entering an enrollment as an Audiologist provider on the sandbox, I entered a large .xcf file as the License.  It was 2.8 MB.  I wasn't able to trigger the error locally, and it appears to be an nginx problem:
  
  ![screenshot from 2017-07-11 12-07-38](https://user-images.githubusercontent.com/1497818/28080501-d709bd9a-6631-11e7-97bc-1f5e5fa899f5.png)
  
  I'm not sure how big the uploaded file needs to be to get this error.  We should set a sensible limit on file upload size, and give a more attractive error to users if they exceed it.  The error should show up on the same page, and allow them to choose a different file.

** LABELS
   - Z-REQ-PSM-FR-2.4
     The PSM shall allow applicant to upload attachments to support
     the application.
     <<< FR 2.  Capability to build provider profile >>>

   - backend
   - task
** LABEL CHANGES
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/262][262]] (closed): Research spike: Drools & business rules interface

  We need to get a better handle on the Drools interface for the PSM. Right now the only way to edit the validation and screening rules is for a programmer to edit `cms.validation.drl` and `cms.screening.drl` in `psm-app/cms-business-process/src/main/resources/`. We need to make it so service admins can change enrollment assessment rules/workflow without having to be programmers. James & Jason have looked a little bit at this, but we need a better sense of what it is we're aiming for when we make it configurable. What should the interface be, allow, do?
  
  This issue is for me to document the current state of affairs and propose aspirations for the business rules interface for the MVP.

** LABELS
   - Z-REQ-PSM-IU-3.1
     The PSM of shall use standardized business rules definitions that
     reside in a separate application or rules engine.
     <<< IU 3.  Technical Service Classification:  Decision Management >>>

** LABEL CHANGES
   + sa-4.0
   + sa-4.2
   + iu-3.2
* [[https://github.com/solutionguidance/psm/issues/261][261]] (closed): Facility credentials not shown at review time

  Some of the organization provider types, such as County Contracted Mental Health Rehab, require documents such as licenses to practice or agreements with the state or county. The enrollment process accepts these uploads, but they are not shown to the admin while reviewing an enrollment, and the UI does not ask or allow the admin to verify the documents.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - bug
   - in progress
   - ux
* [[https://github.com/solutionguidance/psm/issues/260][260]]   (open): Community Mental Health Center requires assurance statement

  There appears to be a drools rule that requires an agreement to be agreed to, but we have no data for that agreement:
  
  > You must accept the Community Mental Health Center Assurance Statement.
  
  ![screenshot 2017-07-10 18 44 33](https://user-images.githubusercontent.com/1494855/28043434-da4e9364-659f-11e7-98bb-ec019e97bfec.png)
  
  We should remove the rule or add seed data for the required statement.

** LABELS
   - Z-REQ-PSM-FR-9.1
     The PSM shall integrate provider-type business rules described in
     the Enrollment Information Guide into the system.
     <<< FR 9.  Meets architecture guideline >>>

   - Z-REQ-PSM-IU-3.1
     The PSM of shall use standardized business rules definitions that
     reside in a separate application or rules engine.
     <<< IU 3.  Technical Service Classification:  Decision Management >>>

   - backend
   - bug
   - quick-fix
** LABEL CHANGES
   + sa-4.0
   + sa-4.2
   + iu-3.2
* [[https://github.com/solutionguidance/psm/issues/259][259]]   (open): Community Mental Health Center refers to missing provider type 

  If you create an enrollment application with the Community Mental Health Center provider type, and try to add an individual member, you will likely get an error:
  
  > Members must be certified mental health professionals or licensed psychiatrists.
  
  ![screenshot 2017-07-10 18 30 29](https://user-images.githubusercontent.com/1494855/28043000-e1f75576-659d-11e7-8745-8ee1c3ae3b9b.png)
  
  After going through the entire list of provider types on that screen, the only provider type it likes is "Certified Mental Health Rehab Prof - CPRP". Presumably that's the former option specified in the error, where is the latter option?
  
  We should either add "Licensed Psychiatrist" as a provider type, or we should update the error. (And it would be nice if the drop down only had allowed provider types, instead of showing all of the individual provider types and chastising you if you choose the wrong one!)

** LABELS
   - Z-REQ-PSM-FR-2.7
     The PSM shall accept the following fields: Practice Type,
     Specialties (1 or more), NPI, HIPAA Taxonomy Codes, CLIA number,
     DHSS certification, Optical and Audiology y/n, Collaborative
     Practice Agreement y/n, RHC y/n, Medicare Provider Number, Case
     Mgmt y/n, Rural Health Rate
     <<< FR 2.  Capability to build provider profile >>>

   - backend
   - bug
** LABEL CHANGES
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/255][255]] (closed): Polish & speed up Javadoc gh-pages publication

  From @jasonaowen's comment on #249:
  
  > I would like to suggest an alternate approach. This is a bigger request than the rest, and it affects only the performance and readability and not the functionality, so please consider it optional.
  
  > 1. We start out in a clone of our repo already, which Travis checks out on our behalf. I believe the variable [`$TRAVIS_BUILD_DIR`](https://docs.travis-ci.com/user/environment-variables) contains the location of that checkout, or you can just `cd ..` to get out of the `psm-app` subdirectory.
  
  > 2. The API docs are generated in a build directory, which is ignored by `.gitignore`. The `gh-pages` branch does not have a `psm-app` directory, so switching branches leaves those built files behind.
  
  > 3. `git push` [allows pushing to a URL](https://git-scm.com/docs/git-push#git-push-ltrepositorygt)
  
  > Given all that, I think all we need do is switch branches, move the docs from `psm-app/build/reports/api-docs`, add them as usual, commit, and push to the URL above. This lets us avoid a duplicate checkout of our fairly sizable repository, and the time and potential network issues associated with it.
  
  Putting this here so we can merge #249 but still pursue improvements per #30.

** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - tech-debt
** LABEL CHANGES
   + sq-1.6
* [[https://github.com/solutionguidance/psm/issues/254][254]]   (open): Allow database schema changes without losing data

  As we develop the application, we will need to continue to change the database schema. So far, those changes have been part of making the application deployable at all, with the change from Oracle to PostgreSQL (#1) and the change from WebSphere to WildFly (#2). Under those circumstances, and with only developers practically able to deploy the application, it was fine to completely drop and recreate the database on every change.
  
  Now that the application is deployable, and other people are using it, we need to start thinking about how to make these schema changes in a friendlier way. This will be particularly critical once we have production deployments, as obviously we cannot ask people to throw away their existing data! Manual deployment steps require extensive documentation and are prone to error, so we should automate the deployment as much as is possible.
  
  This will also help us with continuous deployment (#222), as a sandbox that gets wiped multiple times per day (with every merge to master) could be frustrating to use.

** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - Z-REQ-PSM-SQ-1.4
     The PSM shall use documented build, test, release, and
     installation processes that are automated as much as possible,
     for both development and production use.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - backend
   - enhancement
** LABEL CHANGES
   + ia-4.2
* [[https://github.com/solutionguidance/psm/issues/252][252]]   (open): Consider building and/or privately caching dependencies instead of downloading from third-party servers.

  Right now the PSM build process downloads various third-party dependency .jar files from upstream sources.  This is standard behavior for stuff in the Maven package tree (at least as far as I understand it -- it's sort of like npm), and for WildFly itself.
  
  However, this effectively means our build process has a dependency on servers that are not providing us any SLA.  From a security perspective, it would be ideal to build all the deps from source; failing that, we might want to at least record expected hashes and check that they match what is actually fetched (maybe Maven does this for us?  But are we getting that for WildFly itself?).  And independently of security concerns, third-party upstream servers can go down.
  
  This ticket is just to remember the concern.  We probably shouldn't do anything about it for MVP, as it's not urgent enough.  But maybe for 1.0 we should revisit this.
  
  Here's the IRC conversation today that motivated this ticket:
  
      jasonaowen: oh good, I've triggered travis so often that the
                  wildfly download server has rate-limited the worker >_<
      
      kfogel:     jasonaowen: why are we hitting the WildFly download
                  server?
      
      kfogel:     jasonaowen: oh, *our* instance's server -- not a server
                  run by the people who make WildFly?  I get it now.
      
      jasonaowen: kfogel: no, a server run by the people who make wildfly
      
      jasonaowen: kfogel: we need their binary to build, and I've been
                  working on Travis CI configs
      
      kfogel:     jasonaowen: uh, hm
      
      kfogel:     jasonaowen: we're open source software; it's unusual to
                  be downloading binaries from anyone.  Why are we doing
                  that?
      
      kfogel:     jasonaowen: I mean, don't we download source and build?
      
      jasonaowen: kfogel: we haven't been, no, and wildfly ships a bunch
                  of libraries we depend on
      
      * kfogel is pressing on this point because he suddenly wonders how
        much of our build process involves downloading binaries from
        third-party sites
      
      kfogel:     Oh.
      
      * kfogel ponders
      
      kfogel:     jasonaowen: are these all things that we could, in
                  principle, build from source, but for convenience we
                  choose not to?
      
      jasonaowen: kfogel: yes, vasile has verified the licenses of our
                  dependencies
      
      jasonaowen: kfogel: building all of them is possible, but would be
                  complicated
      
      kfogel:     jasonaowen: I'm thinking partly of security concerns
                  and partly of things like upstream servers
                  rate-limiting us or our clients.  If our product
                  depends on these things, maybe we should grab golden
                  copies of these things and put them on a server we
                  control, and have our build process download from
                  there?
      
      kfogel:     jasonaowen: I'm really leery of our product requiring
                  someone else's server to happen to be working :-).
      
      kfogel:     jasonaowen: we don't have to figure this all out right
                  now in IRC, but I'm just exploring it so we know what
                  issue to file.
      
      kfogel:     jasonaowen: the status quo seems ${BAD} to me.
      
      cdonnelly:  kfogel: jasonaowen: are we mostly depending on the
                  maven repository being up?  Isn't that a relatively
                  normal pattern?
      
      kfogel:     cdonnelly, jasonaowen: And when we say "binaries", we
                  are referring to compiled .jar files, right?
      
      jasonaowen: cdonnelly kfogel: maven and wildfly, yes
      
      cdonnelly:  kfogel: jasonaowen: yes on the .jars, I believe
      
      jasonaowen: cdonnelly kfogel: the pattern we had at my previous company was a
                  bit more rigorous: we had a local cache that spoke
                  maven, and things were carefully promoted from public
                  maven to private cache after a license review; the
                  build servers were isolated from the internet
      
      kfogel:     jasonaowen: *nod*  I realize that there's a continuum
                  between "This server is used by zillions of people and
                  is depended on by a huge community, like the Debian
                  package archives or npm or something" and "this
                  dependency is very idiosyncratic and we're like the
                  only people downloading it from its upstream provider"
      
      jasonaowen: kfogel cdonnelly: obviously there are convenience /
                  cost / complexity tradeoffs here; we started on the
                  convenient side
      
      kfogel:     jasonaowen: maven dep stuff is prolly the first
                  category; WildFly is a smidgen over toward the second,
                  but still more like the first than like the second.
      
      kfogel:     jasonaowen: *nod*  yes, that makes sense
      
      kfogel:     jasonaowen: so, I'll file a ticket for now.  In the
                  meantime, if a particular download is getting rate
                  limited and is affecting our CI, then we should
                  consider solving that by making a private cache.  We
                  don't want our CI slowed down.
      
      jasonaowen: kfogel: it was only a problem after about a dozen
                  builds within an hour; I don't think that's normal
                  behavior
      
      jasonaowen: kfogel: that was happening because both sumanah and I
                  were working on Travis CI configuration
      
      kfogel:     jasonaowen: gotcha
      
      jasonaowen: kfogel: and the resultant slowdown was ~10 minutes
      
      kfogel:     jasonaowen: then no worries for now
      
      jasonaowen: kfogel: that said, it's literally just a wget, so if
                  you mirror the wildfly zip somewhere it's trivial to
                  update the URL
      
      jasonaowen: kfogel: because I agree, it's somewhat burdensome on
                  Wildfly
      
      kfogel:     jasonaowen: yeah, and they're not providing us any SLA
                  either
      
      jasonaowen: kfogel: right

** LABELS
   - Z-REQ-PSM-SQ-1.3
     The PSM shall use modern source code dependency management
     techniques, and shall use up-to-date versions of upstream
     third-party dependencies.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - infra
   - security
   - task
* [[https://github.com/solutionguidance/psm/issues/250][250]]   (open): Show indication of when sandbox was last updated

  @jcunard points out that we should show a message on the sandbox showing when it was last updated.  This will be less important once we have continuous deployment (#222) set up, but for now it will help testers know when the sandbox has changed and is ready for them to take a fresh look.

** LABELS
   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - backend
   - enhancement
** LABEL CHANGES
   + sq-1.1
* [[https://github.com/solutionguidance/psm/issues/248][248]] (closed): Make the "Create New Enrollment" Button on the Welcome Page Testable

  # Problem
  For Selenium tests, elements on the page should be easily selectable via JQuery paths. The "Create New Enrollment" button on the welcome page doesn't have an id and shares the same path with the "Get Profiles" Button.
  
  # Solution
  Give both buttons unique IDs and update the Selenium tests to use them
  

** LABELS
   - Z-REQ-PSM-SQ-1.4
     The PSM shall use documented build, test, release, and
     installation processes that are automated as much as possible,
     for both development and production use.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - quick-fix
** LABEL CHANGES
   + sq-1.2
* [[https://github.com/solutionguidance/psm/issues/242][242]] (closed): Move to Debian stretch

  We currently run on and recommend Debian jessie (Debian 8), the old stable. [On June 17th, 2017, Debian released Debian 9.0; stretch is the new stable](https://www.debian.org/releases/stable/). The PSM should probably run on 9.

** LABELS
   - Z-REQ-PSM-SQ-1.3
     The PSM shall use modern source code dependency management
     techniques, and shall use up-to-date versions of upstream
     third-party dependencies.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - task
* [[https://github.com/solutionguidance/psm/issues/238][238]]   (open): Templatize UI

  We've done some UI templating already, in #173 and #202.  Ultimately, we want to understand the current UI-generation system and possibly update it.  So, this issue is in two parts:
  
  1. How is the UI is being generated now?  What needs to be done to fully templatize it?  The short answer to this, from @jasonaowen, is "via JSPs and CSS."
  
  2. Are there "cross-platform templating solutions"?  i.e., can we use a template that can be generated by Java and Python code?  For example, if we ever want to put a web interface on the [ETL process](https://github.com/OpenTechStrategies/psm/tree/master/etl), which is being done with Python, it should use the same templates that we use for the main app, even though that's written in Java.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - task
   - ux
** LABEL CHANGES
   + sa-4.1
   + sq-1.5
* [[https://github.com/solutionguidance/psm/issues/236][236]]   (open): Import information from different systems

  Build an API to absorb data from other systems.  Each state will have a different system managing providers, and we may need to take in information about those providers for re-screening purposes.  This may be related to #211 and particularly [this comment](https://github.com/OpenTechStrategies/psm/pull/211#issuecomment-312308886).

** LABELS
   - Z-REQ-PSM-II-2.2
     The PSM shall use a standards for message format to ensure
     interoperability (e.g. XML JSON)
     <<< II 2.  Technical Service Classification:  Data Connectivity >>>

   - Z-REQ-PSM-II-2.3
     Transport interoperability - 
The PSM shall comply with standard data transfer protocols as
applicable to health IT systems, their constituent elements/modules,
and services
     <<< II 2.  Technical Service Classification:  Data Connectivity >>>

   - Z-REQ-PSM-II-2.4
     Syntactic interoperability - 
The PSM shall comply with national standards for data message
formatting, as applicable to health IT systems, their constituent
elements/modules, and services
     <<< II 2.  Technical Service Classification:  Data Connectivity >>>

   - Z-REQ-PSM-II-2.5
     Semantic interoperability - 
The PSM shall use standardized code sets to enable the processing and
interpretation of received data as applicable to health IT systems.
     <<< II 2.  Technical Service Classification:  Data Connectivity >>>

   - Z-REQ-PSM-II-4.1
     The PSM shall use RESTful and/or SOAP-based web services for
     seamless coordination and integration with other U.S. Department
     of Health & Human Services (HHS) applications and intrastate
     agencies.
     <<< II 4.  Technical Service Classification:  System Extensibility >>>

   - enhancement
   - infra
   - task
** LABEL CHANGES
   + iu-2.2
   + iu-2.3
   + ia-1.2
   + ia-3.1
   + ia-3.9
   CHECKED
* [[https://github.com/solutionguidance/psm/issues/233][233]]   (open): cannot enroll as podiatrist

  I attempted to create a provider enrollment with the provider type being Podiatrist, and on the licensing/certification page, got this error, even though I'd uploaded an attachment for the license/certification and marked it as a license issued by Minnesota:
  
  > Please correct the following errors:
  
  > Copy of license as a podiatrist from the MN Board of Podiatric Medicine or current state of practice is required.

** LABELS
   - Z-REQ-PSM-FR-2.7
     The PSM shall accept the following fields: Practice Type,
     Specialties (1 or more), NPI, HIPAA Taxonomy Codes, CLIA number,
     DHSS certification, Optical and Audiology y/n, Collaborative
     Practice Agreement y/n, RHC y/n, Medicare Provider Number, Case
     Mgmt y/n, Rural Health Rate
     <<< FR 2.  Capability to build provider profile >>>

   - backend
   - bug
   - quick-fix
** LABEL CHANGES
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/229][229]] (closed): Document publishing API docs in README

  @jasonaowen added a new gradle task to build the API documentation that @brainwane wrote.  We should add a note to the README (or INSTALL) about how to use it.

** LABELS
   - Z-REQ-PSM-SQ-1.4
     The PSM shall use documented build, test, release, and
     installation processes that are automated as much as possible,
     for both development and production use.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/224][224]] (closed): Add an API to ETL results

  Anything we pull in via ETL should be available MMIS-wide via a RESTful API.  For now, we need to make it available to the rest of the module so that the exclusions list is consulted automatically when a new enrollment is submitted.  The first pass at this will likely not include auth, but down the road we may want to use OAuth 2.

** LABELS
   - Z-REQ-PSM-II-2.2
     The PSM shall use a standards for message format to ensure
     interoperability (e.g. XML JSON)
     <<< II 2.  Technical Service Classification:  Data Connectivity >>>

   - Z-REQ-PSM-II-2.3
     Transport interoperability - 
The PSM shall comply with standard data transfer protocols as
applicable to health IT systems, their constituent elements/modules,
and services
     <<< II 2.  Technical Service Classification:  Data Connectivity >>>

   - Z-REQ-PSM-II-2.4
     Syntactic interoperability - 
The PSM shall comply with national standards for data message
formatting, as applicable to health IT systems, their constituent
elements/modules, and services
     <<< II 2.  Technical Service Classification:  Data Connectivity >>>

   - Z-REQ-PSM-II-4.1
     The PSM shall use RESTful and/or SOAP-based web services for
     seamless coordination and integration with other U.S. Department
     of Health & Human Services (HHS) applications and intrastate
     agencies.
     <<< II 4.  Technical Service Classification:  System Extensibility >>>

** LABEL CHANGES
   + iu-2.2
   + iu-2.3
   + iu-4.2
   + ia-1.2
   + ia-3.1
   + ia-3.9
   CHECKED
* [[https://github.com/solutionguidance/psm/issues/223][223]]   (open): Send provider directory information to MITA TAC

  Once the TAC has a defined API endpoint to receive information about providers, add a hook to send provider info to that endpoint.  When we receive information from a provider and their enrollment is submitted, send the directory-relevant information to the TAC's endpoint.

** LABELS
   - Z-REQ-PSM-II-2.4
     Syntactic interoperability - 
The PSM shall comply with national standards for data message
formatting, as applicable to health IT systems, their constituent
elements/modules, and services
     <<< II 2.  Technical Service Classification:  Data Connectivity >>>

   - enhancement
   - infra
** LABEL CHANGES
   + iu-2.2
   + iu-2.3
   + iu-4.2
   + ia-3.1
   + ia-3.9
   CHECKED (removed "+ ia-2.1"; removed "+ ia-1.2")
* [[https://github.com/solutionguidance/psm/issues/222][222]] (closed): Set up continuous deployment

  Now that we have Travis set up for CI, we should take the next step and automate deployments to a testing server.  This will allow us to always do manual testing against the most up-to-date code, without needing to constantly refresh our local instances.

** LABELS
   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - task
* [[https://github.com/solutionguidance/psm/issues/219][219]] (closed): Upgrade Spring

  Per `DEPENDENCIES.md`, we're currently using Spring 3.0.5, which was released 2010-10-20. If we're going to continue to use the 3.x series, we should upgrade to 3.2.18 -- see, for instance, [this post](https://spring.io/blog/2016/12/22/cve-2016-9879-spring-security-3-2-10-4-1-4-4-2-1-released) about a vulnerability that a later version of the Spring Framework addresses.

** LABELS
   - Z-REQ-PSM-SQ-1.3
     The PSM shall use modern source code dependency management
     techniques, and shall use up-to-date versions of upstream
     third-party dependencies.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - backend
   - security
* [[https://github.com/solutionguidance/psm/issues/218][218]] (closed): Write first integration/UI test

  Our first set of tests will exercise the module's core workflows, like creating a new enrollment and reviewing an enrollment.  The goal is to have broad coverage before going deeper into specific classes.
  
  Pending the results of #204, this will likely involve using Selenium.  There are several resources about how to use Selenium with Travis CI, and perhaps @BenGalewsky knows more.

** LABELS
   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/215][215]]   (open): Add extension points to allow per-state integration

  Different states have different workflow requirements. We need to develop something - a plugin system, a messaging system, webhooks, a way to load a jar at runtime, or whatever - to allow states to integrate at the points they're interested in.
  
  One example of this is: what happens when an enrollment is submitted? States might want an email, or a PDF exported to a certain directory, or a ticket filed in an issue tracker.
  
  Another example of this is: what happens when an enrollment is approved? States might want the provider automatically added to an external database, or an approval notice printed.

** LABELS
   - Z-REQ-PSM-II-4.5
     The PSM shall be configurable where feasible.
     <<< II 4.  Technical Service Classification:  System Extensibility >>>

   - enhancement
* [[https://github.com/solutionguidance/psm/issues/214][214]]   (open): Remove TopCoder-specific jarfiles

  Replace the TopCoder-specific jarfiles mentioned in https://github.com/OpenTechStrategies/psm/pull/200/commits/6cb1ad7f8bb8f5bc3ccc6b13149cc0796e438894 with other libraries that serve the same purpose. 

** LABELS
   - Z-REQ-PSM-SQ-1.3
     The PSM shall use modern source code dependency management
     techniques, and shall use up-to-date versions of upstream
     third-party dependencies.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - tech-debt
* [[https://github.com/solutionguidance/psm/issues/213][213]]   (open): Error on viewing notes while editing approved enrollment

  After an enrollment has been approved by a service administrator, a profile is created for the provider. The provider can log back in and edit that profile. If the provider clicks on the "notes" tab, an error page is shown, and the server logs a stack trace:
  
  ```
  13:37:40,382 ERROR [cms-web] (default task-42) Error in method [BaseController#handleError(Exception ex)], details:: gov.medicaid.services.PortalServiceRuntimeException: Missing ticket Id. Only saved requests can have notes.
  	at gov.medicaid.controllers.EnrollmentPageFlowController.showPage(EnrollmentPageFlowController.java:1333)
  	at gov.medicaid.controllers.EnrollmentPageFlowController.showPage(EnrollmentPageFlowController.java:1234)
  	at gov.medicaid.controllers.EnrollmentPageFlowController.showPage(EnrollmentPageFlowController.java:1197)
  	at gov.medicaid.controllers.EnrollmentPageFlowController.jump(EnrollmentPageFlowController.java:901)
  	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  	at java.lang.reflect.Method.invoke(Method.java:498)
  	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:176)
  	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:426)
  	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:414)
  	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:790)
  	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:719)
  	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644)
  	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:560)
  	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
  	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
  	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)
  	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:368)
  	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:109)
  	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:97)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:100)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:78)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:119)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:35)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:187)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:79)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:169)
  	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:237)
  	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)
  	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
  	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
  	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
  	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
  	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
  	at org.wildfly.extension.undertow.security.SecurityContextAssociationHandler.handleRequest(SecurityContextAssociationHandler.java:78)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
  	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
  	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
  	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
  	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
  	at io.undertow.security.handlers.NotificationReceiverHandler.handleRequest(NotificationReceiverHandler.java:50)
  	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
  	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
  	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
  	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
  	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
  	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
  	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
  	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
  	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:202)
  	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:805)
  	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
  	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
  	at java.lang.Thread.run(Thread.java:748)
  ```
  
  I was able to reproduce this on the SGC WebSphere/Oracle instance.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - backend
   - bug
* [[https://github.com/solutionguidance/psm/issues/210][210]] (closed): Disable Gradle Daemon for Travis Build

  Arising from #207 
  
  Since in the CI environment we only ever build once, there is no need to spin up the gradle build daemon. 
  
  One side effect of this daemon is that it stores some transient data in the ~/.gradle directory and reduces our caching opportunities. 
  
  - [ ] disable the daemon for travis builds
  - [ ] change the cache directory to be the entire $HOME/.gradle
   

** LABELS
   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/208][208]]   (open): PayToProvider may be unused

  Investigate how the class `PayToProvider` is used, if there is missing data that would enable it, why it was created, and if it is still useful. Either add data/code/documentation to enable it, or delete it.
  
  Discovered in PR #201.

** LABELS
   - Z-REQ-PSM-SQ-1.5
     The PSM shall use D.R.Y. coding principles to avoid unnecessary
     complexity, inflexibility, redundancy, and denormalization in the
     source code and database schemas, and to use precise terminology
     in data structures and operations.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - backend
   - tech-debt
* [[https://github.com/solutionguidance/psm/issues/206][206]] (closed): Teach Travis to cache the maven repository

  # Problem
  The travis build relies on downloading the entire set of dependant jars from MavenCentral each time it builds. We have seen numerous cases where this fails due to an intermittent networking issue.
  
  # Solution
  Travis offers a local caching option in the config file.
  
  # Tasks
  - [x] Investigate how to use the caching option
  - [x] Modify .travis.yml to use this and verify build works

** LABELS
   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/205][205]] (closed): Investigate data_load subproject

  The `data_load` subproject has some similar classnames to the main `psm-app` project.  It came up in https://github.com/OpenTechStrategies/psm/pull/140#issuecomment-309120275, and may be implicated in the current error on creating new provider types.  (To reproduce: log in as an admin, click on "Functions," and click "Add Provider Type.")
  
  Find out the purpose of the `data_load` subproject, determine whether we still need it, and if so, what needs to be done to make it work correctly.

** LABELS
   - Z-REQ-PSM-SQ-1.5
     The PSM shall use D.R.Y. coding principles to avoid unnecessary
     complexity, inflexibility, redundancy, and denormalization in the
     source code and database schemas, and to use precise terminology
     in data structures and operations.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/204][204]] (closed): Spike: Research Test Frameworks

  # Problem
  As development continues on PSM we need automated testing tools to validate code quality.
  
  # Tasks
  In this spike research alternative frameworks for
  - [x] Code Formatting and Quality standards
  - [x] Unit testing of code modules
  - [ ] Code coverage of tests
  - [x] Integration testing of the deployed Web Application with Selenium

** LABELS
   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/195][195]] (closed): Spike: research user documentation approaches

  We need user documentation that goes beyond just describing the system's capabilities. This issue is for a spike in which Sumana researches where & in what format(s) we should put that documentation within the application repo.
  
  The user documentation should, per 4.5.1. "User Documentation" in the Approaches document:
  • Include guidance specific to each type of user (e.g., providers, administrators, service agents, auditors);
  • Accurately reflect capabilities the PSM provides, and avoid implying capabilities it does not (e.g., editing business rules in a GUI);
  • Prepare users by providing a process overview for each major task they want to perform (e.g., determining someone’s eligibility, editing a user) and informing them of what to expect at each stage (e.g., how long each step might take, what expected output will look like);
  • Predict common problems and suggest troubleshooting steps;
  • Direct users to communities and resources for further help.
  
  Users will need a combination of in-app context-sensitive help (in the form of hover text, pop-up explanations, and captions), standalone prose tutorials or manuals illustrated with screenshots, and a living community of practice to ask for help and clarification, and to make suggestions for improvements.
  
  The standalone prose tutorials will be substantially the same for all installations across the US, and should be stored and maintained in the core Git repository and distributed as part of the live help system. We should also provide a standalone copy of the stock standalone prose tutorials on its web site, ensuring that there is a version accessible to the general public (without requiring a login).

** LABELS
   - Z-REQ-PSM-FR-7.1
     The PSM shall provide per-field instructions on the application
     screen.
     <<< FR 7. Usability >>>

** LABEL CHANGES
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/194][194]]   (open): provide user feedback form that sends user feedback to PSM development team

  We should incorporate functionality into the PSM that makes it quick for any user to send us feedback about a particular page, embedding privacy-compliant, PII-sanitized metadata about the user’s workflow and location.
  PSM developers should regularly review these customer support requests, which will include annotations, requests for improvement, and comments.

** LABELS
   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - backend
   - enhancement
   - ux
** LABEL CHANGES
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/192][192]]   (open): Require certain file type for uploaded licenses

  @jcunard asks [on the list](https://groups.google.com/forum/#!topic/psm-dev/Yt6o8cWyINo):
  >The module let me upload a .png doc as evidence of licensure and it was accepted. Is there a way for the module to ensure that an actual copy of a license is being uploaded? Are you anticipating that states will require a certain file type? 
  
  We should talk to states about how they currently verify licenses.  @bycheng1 pointed out the credentialling database [CAQH](https://www.caqh.org/).  If most states are already using the CAQH system, then interfacing with that might be the more efficient route.

** LABELS
   - Z-REQ-PSM-FR-2.20
     The PSM shall collect and maintain licensure information to
     include at a minimum, licensing state, license number, licensure
     begin and end dates.  
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-3.14
     The PSM shall cross-reference license and sanction information
     with other state or federal agencies.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.16
     The PSM shall provide comprehensive verification of all
     (verifiable) data fields for all providers enrolled
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.5
     The PSM shall screen limited-risk providers by verifying that the
     provider or supplier meets all applicable federal regulations and
     state requirements for the provider or supplier type, conducting
     license verifications, including licensure verifications across
     state lines for physicians, non-physician practitioners,
     providers and suppliers, and conducting database checks on a
     pre-and post-enrollment basis to ensure that providers and
     suppliers continue to meet the enrollment criteria for their
     provider/supplier type.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - state-question
** LABEL CHANGES
   + ia-3.2
* [[https://github.com/solutionguidance/psm/issues/189][189]] (closed): Auto-deploy EAR File Generated by Build

  # Problem
  We have a gradle build that can generate an EAR file, but the process stops there. For a CI process we need to be able to deploy the generated application to a sandbox instance.
  
  The best solution would be to update the Dockerfile to include the EAR file in the docker image. The database docker container would have a startup step that builds the database from `seed.sql` and `legacy_seed.sql` so that the end result is a complete installation of the application, ready for testing.
  
  Another issue would be how to deploy the docker compose environment upon build. The natural solution would be a Kubernetes cluster.

** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/188][188]] (closed): Add checkstyle plugin to Gradle Build

  # Problem
  We need to enforce coding standards and best practice on all assets in this project, but there is a significant base of code already in the repo.
  
  # Task
  - [ ] Add checkstyle plugin to the gradle build
  - [ ] Agree a set of checks to apply
  - [ ] Create a filter to allow checkstyle to pass all of the existing code, but require developers to 
  include checks in any file that is touched during the project

** LABELS
   - Z-REQ-PSM-SQ-1.4
     The PSM shall use documented build, test, release, and
     installation processes that are automated as much as possible,
     for both development and production use.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/186][186]] (closed): change capabilities in README to given-when-then format



** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/185][185]]   (open): Include agreements and addenda on Provider Statement

  For a completed enrollment, it would be nice if the Provider Statement included the text of any agreement(s) and any addendum/addenda that the provider agreed to.

** LABELS
   - Z-REQ-PSM-FR-8.5
     The PSM shall add a attestation, using configurable link or text,
     to the reading and understanding of the required state Medicaid
     agency materials prior to enrollment.
     <<< FR 8.  Manage Provider Communication >>>

   - enhancement
   - ux
** LABEL CHANGES
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/184][184]] (closed): data loss: PSM does not save profile phone number

  1) I'm logged in as a service agent or service administrator. I update my own profile at http://localhost:8080/cms/ops/getUser to add a phone number; when I view my profile, the phone number is missing.
  
  2) I'm logged in as a service administrator. I view the list of service agents at http://localhost:8080/cms/admin/viewAgents . If I edit an agent's information and add a phone number, the PSM saves it. But if I click Edit for a service agent who already has a phone number, the Edit screen doesn't retrieve and display the user's phone number.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - bug
   - quick-fix
* [[https://github.com/solutionguidance/psm/issues/181][181]]   (open): Provider cannot link profile with external auth

  `cms/provider/onboarding/link` is a screen to let a provider user link their profile to an existing account/profile at a partner service (e.g., external authentication). It does not work yet for a variety of reasons.
  
  It could be that the way forward is for us (the PSM) not to hold any account data itself, but rather to simply provide an interface to other auth systems -- if that's true then this issue will be moot.
  
  See also #39.

** LABELS
   - Z-REQ-PSM-AD-5.11
     The PSM shall  have standard Access Control specifications to include:
(i) Assigning a unique name and/or number for identifying and tracking
user identity. (Required) (iii) Implementing electronic procedures
that terminate an electronic session after a predetermined time of
inactivity. (Addressable)

     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - bug
   - infra
   - task
** LABEL CHANGES
   - ad-5.11
   + ad-5.2
   + ad-5.7
   + ad-5.16
* [[https://github.com/solutionguidance/psm/issues/177][177]] (closed): Personal Care Assistant Enrollment Application has no issuing states

  As I tried to enroll as a provider in the type "Personal Care Assistant" I was stymied at step 2 (Training) while trying to add a license/certification, because the dropdown list of issuing states was empty.
  
  Could be related to or part of #166.

** LABELS
   - Z-REQ-PSM-FR-3.13
     The PSM shall have the capability to track and support the
     screening of applications (and ongoing provider updates) for
     National Provider Identifier (NPIs), State licenses, Specialty
     Board certification as appropriate, review team visits when
     necessary, and any other State and/or Federal Requirement.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-II-4.5
     The PSM shall be configurable where feasible.
     <<< II 4.  Technical Service Classification:  System Extensibility >>>

* [[https://github.com/solutionguidance/psm/issues/176][176]] (closed): Registration confirmation page needs contact link, APPNAME substitution

  After a user self-registers, the confirmation message on, for instance, http://localhost:8080/cms/accounts/confirm?id=brtest&token=TcRPiZrwtSfeVNBVfGaxYnX77d0%3D is:
  
  > You have been successfully registered to APPNAME.
  
  We should substitute in an appropriate name. Also, "in" might be better than "to".
  
  ![psm-reg-to-appname](https://user-images.githubusercontent.com/842790/27245559-53c241bc-52ba-11e7-93bc-04966ed5df44.png)

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - quick-fix
   - ux
* [[https://github.com/solutionguidance/psm/issues/175][175]] (closed): system administrator creating user: "confirm password" isn't checked

  I'm logged in as a system administrator user. When I'm creating a new user account, I'm asked for a password and I'm asked to confirm that password. The application is not checking whether it's the same string; the user's created using the Password field even if the two fields do not match.

** LABELS
   - Z-REQ-PSM-AD-5.4
     The PSM shall support a user security profile that controls user
     access rights to data categories and system functions.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - quick-fix
   - security
** LABEL CHANGES
   + ad-5.3
* [[https://github.com/solutionguidance/psm/issues/174][174]]   (open): search for user accounts doesn't retrieve results consistently

  When I'm logged in as a system administrator user, when I'm viewing user accounts if I use the "search keyword" (not the advanced search) and search for a name that's in the list of user accounts, sometimes I get "No user account is found". I think one problem is that it's doing a case-sensitive search, but even that doesn't always explain the lack of results. Also, the title bar says "Advanced Search" even if I've used the keyword search.

** LABELS
   - Z-REQ-PSM-FR-7.13
     The PSM shall support searching and pattern-matching based on all
     fields accepted as input (and based on all reasonable
     combinations of such fields).
     <<< FR 7. Usability >>>

   - backend
   - bug
** LABEL CHANGES
   - fr-7.13
   + iu-2.5
* [[https://github.com/solutionguidance/psm/issues/172][172]] (closed): cannot create a help topic

  When I am logged in as a service administrator, if I try to create a Help topic and hit the save button, I get a stacktrace error:
  
  ~~~
  Error processing request
  Context Path:
  /cms
  
  Servlet Path:
  /admin/createHelpItem
  
  Path Info:
  null
  
  Query String:
  null
  
  Stack Trace
  org.springframework.web.util.NestedServletException: Request processing failed; nested exception is javax.ejb.EJBException: java.lang.NullPointerException
  org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:656)
  org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:560)
  javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
  javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
  io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)
  io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:368)
  org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:109)
  org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:97)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:100)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:78)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:119)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:35)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:187)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:79)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:169)
  org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:237)
  org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)
  io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
  io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
  io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
  io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
  io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
  org.wildfly.extension.undertow.security.SecurityContextAssociationHandler.handleRequest(SecurityContextAssociationHandler.java:78)
  io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
  io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
  io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
  io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
  io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
  io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
  io.undertow.security.handlers.NotificationReceiverHandler.handleRequest(NotificationReceiverHandler.java:50)
  io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
  io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)
  io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
  io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
  io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
  io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
  io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
  io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
  io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
  io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
  io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
  io.undertow.server.Connectors.executeRootHandler(Connectors.java:202)
  io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:805)
  java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
  java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
  java.lang.Thread.run(Thread.java:748)
  ~~~

** LABELS
   - Z-REQ-PSM-FR-7.2
     The PSM shall provide detailed instructions for completing the
     application via a Help link.
     <<< FR 7. Usability >>>
** LABEL CHANGES
   + ii-4.5

* [[https://github.com/solutionguidance/psm/issues/171][171]] (closed): Service administrator cannot view or approve pending enrollments

  I'm logged in as a service administrator. On http://localhost:8080/cms/agent/enrollment/search/draft?statuses=Draft&showFilterPanel=true (clicking "Enrollments", or http://localhost:8080/cms/provider/dashboard/drafts , in the navbar), I get:
  
  "Error
  Server Error
  
  An error has been occurred while processing your request, please contact 1-800-1010-2010 for any concerns."
  
  Stack trace:
  
  ~~~
  16:55:05,411 ERROR [org.jboss.as.ejb3.invocation] (default task-49) WFLYEJB0034: EJB Invocation failed on component BusinessProcessServiceBean for method public abstract java.util.List gov.medicaid.services.BusinessProcessService.getAvailableTasks(java.lang.String,java.util.List) throws java.lang.Exception: javax.ejb.EJBException: javax.persistence.PersistenceException: org.hibernate.HibernateException: Unable to access lob stream
  	at org.jboss.as.ejb3.tx.BMTInterceptor.handleException(BMTInterceptor.java:83)
  	at org.jboss.as.ejb3.tx.EjbBMTInterceptor.checkStatelessDone(EjbBMTInterceptor.java:91)
  	at org.jboss.as.ejb3.tx.EjbBMTInterceptor.handleInvocation(EjbBMTInterceptor.java:106)
  	at org.jboss.as.ejb3.tx.BMTInterceptor.processInvocation(BMTInterceptor.java:58)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:437)
  	at org.jboss.weld.ejb.AbstractEJBRequestScopeActivationInterceptor.aroundInvoke(AbstractEJBRequestScopeActivationInterceptor.java:73)
  	at org.jboss.as.weld.ejb.EjbRequestScopeActivationInterceptor.processInvocation(EjbRequestScopeActivationInterceptor.java:83)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ee.concurrent.ConcurrentContextInterceptor.processInvocation(ConcurrentContextInterceptor.java:45)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InitialInterceptor.processInvocation(InitialInterceptor.java:21)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.interceptors.ComponentDispatcherInterceptor.processInvocation(ComponentDispatcherInterceptor.java:52)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.pool.PooledInstanceInterceptor.processInvocation(PooledInstanceInterceptor.java:51)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.CurrentInvocationContextInterceptor.processInvocation(CurrentInvocationContextInterceptor.java:41)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.invocationmetrics.WaitTimeInterceptor.processInvocation(WaitTimeInterceptor.java:47)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.security.SecurityContextInterceptor.processInvocation(SecurityContextInterceptor.java:100)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.deployment.processors.StartupAwaitInterceptor.processInvocation(StartupAwaitInterceptor.java:22)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.ShutDownInterceptorFactory$1.processInvocation(ShutDownInterceptorFactory.java:64)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.LoggingInterceptor.processInvocation(LoggingInterceptor.java:67)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ee.component.NamespaceContextInterceptor.processInvocation(NamespaceContextInterceptor.java:50)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.AdditionalSetupInterceptor.processInvocation(AdditionalSetupInterceptor.java:54)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ContextClassLoaderInterceptor.processInvocation(ContextClassLoaderInterceptor.java:64)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)
  	at org.wildfly.security.manager.WildFlySecurityManager.doChecked(WildFlySecurityManager.java:636)
  	at org.jboss.invocation.AccessCheckingInterceptor.processInvocation(AccessCheckingInterceptor.java:61)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)
  	at org.jboss.invocation.PrivilegedWithCombinerInterceptor.processInvocation(PrivilegedWithCombinerInterceptor.java:80)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.ViewService$View.invoke(ViewService.java:198)
  	at org.jboss.as.ee.component.ViewDescription$1.processInvocation(ViewDescription.java:185)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.ProxyInvocationHandler.invoke(ProxyInvocationHandler.java:73)
  	at gov.medicaid.services.BusinessProcessService$$$view13.getAvailableTasks(Unknown Source)
  	at gov.medicaid.controllers.admin.EnrollmentController.doSearch(EnrollmentController.java:945)
  	at gov.medicaid.controllers.admin.EnrollmentController.search(EnrollmentController.java:527)
  	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  	at java.lang.reflect.Method.invoke(Method.java:498)
  	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:176)
  	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:426)
  	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:414)
  	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:790)
  	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:719)
  	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644)
  	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:549)
  	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
  	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
  	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)
  	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:368)
  	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:109)
  	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:97)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:100)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:78)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:119)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:35)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:187)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:79)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:169)
  	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:237)
  	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)
  	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
  	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
  	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
  	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
  	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
  	at org.wildfly.extension.undertow.security.SecurityContextAssociationHandler.handleRequest(SecurityContextAssociationHandler.java:78)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
  	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
  	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
  	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
  	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
  	at io.undertow.security.handlers.NotificationReceiverHandler.handleRequest(NotificationReceiverHandler.java:50)
  	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
  	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
  	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
  	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
  	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
  	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
  	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
  	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
  	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:202)
  	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:805)
  	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
  	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
  	at java.lang.Thread.run(Thread.java:748)
  Caused by: javax.persistence.PersistenceException: org.hibernate.HibernateException: Unable to access lob stream
  	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1692)
  	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1602)
  	at org.hibernate.jpa.internal.QueryImpl.getResultList(QueryImpl.java:492)
  	at org.jbpm.task.service.TaskServiceSession.getTasksAssignedAsPotentialOwner(TaskServiceSession.java:730)
  	at org.jbpm.task.service.TaskServiceSession.getTasksAssignedAsPotentialOwner(TaskServiceSession.java:711)
  	at org.jbpm.task.service.local.LocalTaskService.getTasksAssignedAsPotentialOwner(LocalTaskService.java:193)
  	at gov.medicaid.services.impl.BusinessProcessServiceBean.getAvailableTasks(BusinessProcessServiceBean.java:300)
  	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  	at java.lang.reflect.Method.invoke(Method.java:498)
  	at org.jboss.as.ee.component.ManagedReferenceMethodInterceptor.processInvocation(ManagedReferenceMethodInterceptor.java:52)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:437)
  	at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.doMethodInterception(Jsr299BindingsInterceptor.java:82)
  	at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.processInvocation(Jsr299BindingsInterceptor.java:93)
  	at org.jboss.as.ee.component.interceptors.UserInterceptorFactory$1.processInvocation(UserInterceptorFactory.java:63)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.invocationmetrics.ExecutionTimeInterceptor.processInvocation(ExecutionTimeInterceptor.java:43)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.jpa.interceptor.SBInvocationInterceptor.processInvocation(SBInvocationInterceptor.java:47)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.tx.EjbBMTInterceptor.handleInvocation(EjbBMTInterceptor.java:103)
  	... 129 more
  Caused by: org.hibernate.HibernateException: Unable to access lob stream
  	at org.hibernate.type.descriptor.java.DataHelper.extractString(DataHelper.java:270)
  	at org.hibernate.type.descriptor.java.StringTypeDescriptor.wrap(StringTypeDescriptor.java:72)
  	at org.hibernate.type.descriptor.java.StringTypeDescriptor.wrap(StringTypeDescriptor.java:22)
  	at org.hibernate.type.descriptor.sql.ClobTypeDescriptor$1.doExtract(ClobTypeDescriptor.java:44)
  	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
  	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:238)
  	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:234)
  	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:224)
  	at org.hibernate.loader.hql.QueryLoader.getResultRow(QueryLoader.java:452)
  	at org.hibernate.loader.hql.QueryLoader.getResultColumnOrRow(QueryLoader.java:435)
  	at org.hibernate.loader.Loader.getRowFromResultSet(Loader.java:756)
  	at org.hibernate.loader.Loader.processResultSet(Loader.java:972)
  	at org.hibernate.loader.Loader.doQuery(Loader.java:930)
  	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:336)
  	at org.hibernate.loader.Loader.doList(Loader.java:2617)
  	at org.hibernate.loader.Loader.doList(Loader.java:2600)
  	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2429)
  	at org.hibernate.loader.Loader.list(Loader.java:2424)
  	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:501)
  	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:371)
  	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216)
  	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1326)
  	at org.hibernate.internal.QueryImpl.list(QueryImpl.java:87)
  	at org.hibernate.jpa.internal.QueryImpl.list(QueryImpl.java:606)
  	at org.hibernate.jpa.internal.QueryImpl.getResultList(QueryImpl.java:483)
  	... 149 more
  Caused by: org.postgresql.util.PSQLException: Large Objects may not be used in auto-commit mode.
  	at org.postgresql.largeobject.LargeObjectManager.open(LargeObjectManager.java:262)
  	at org.postgresql.largeobject.LargeObjectManager.open(LargeObjectManager.java:248)
  	at org.postgresql.jdbc.AbstractBlobClob.getLo(AbstractBlobClob.java:272)
  	at org.postgresql.jdbc.AbstractBlobClob.getBinaryStream(AbstractBlobClob.java:116)
  	at org.postgresql.jdbc.PgClob.getCharacterStream(PgClob.java:52)
  	at org.hibernate.type.descriptor.java.DataHelper.extractString(DataHelper.java:263)
  	... 173 more
  
  16:55:05,415 ERROR [cms-web] (default task-49) Error in method [BaseController#handleError(Exception ex)], details:: gov.medicaid.services.PortalServiceException: Error while invoking process server.
  	at gov.medicaid.controllers.admin.EnrollmentController.doSearch(EnrollmentController.java:952)
  	at gov.medicaid.controllers.admin.EnrollmentController.search(EnrollmentController.java:527)
  	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  	at java.lang.reflect.Method.invoke(Method.java:498)
  	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:176)
  	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:426)
  	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:414)
  	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:790)
  	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:719)
  	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644)
  	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:549)
  	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
  	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
  	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)
  	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:368)
  	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:109)
  	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:97)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:100)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:78)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:119)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:35)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:187)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:79)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:169)
  	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:237)
  	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)
  	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
  	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
  	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
  	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
  	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
  	at org.wildfly.extension.undertow.security.SecurityContextAssociationHandler.handleRequest(SecurityContextAssociationHandler.java:78)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
  	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
  	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
  	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
  	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
  	at io.undertow.security.handlers.NotificationReceiverHandler.handleRequest(NotificationReceiverHandler.java:50)
  	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
  	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
  	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
  	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
  	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
  	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
  	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
  	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
  	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:202)
  	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:805)
  	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
  	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
  	at java.lang.Thread.run(Thread.java:748)
  Caused by: javax.ejb.EJBException: javax.persistence.PersistenceException: org.hibernate.HibernateException: Unable to access lob stream
  	at org.jboss.as.ejb3.tx.BMTInterceptor.handleException(BMTInterceptor.java:83)
  	at org.jboss.as.ejb3.tx.EjbBMTInterceptor.checkStatelessDone(EjbBMTInterceptor.java:91)
  	at org.jboss.as.ejb3.tx.EjbBMTInterceptor.handleInvocation(EjbBMTInterceptor.java:106)
  	at org.jboss.as.ejb3.tx.BMTInterceptor.processInvocation(BMTInterceptor.java:58)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:437)
  	at org.jboss.weld.ejb.AbstractEJBRequestScopeActivationInterceptor.aroundInvoke(AbstractEJBRequestScopeActivationInterceptor.java:73)
  	at org.jboss.as.weld.ejb.EjbRequestScopeActivationInterceptor.processInvocation(EjbRequestScopeActivationInterceptor.java:83)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ee.concurrent.ConcurrentContextInterceptor.processInvocation(ConcurrentContextInterceptor.java:45)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InitialInterceptor.processInvocation(InitialInterceptor.java:21)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.interceptors.ComponentDispatcherInterceptor.processInvocation(ComponentDispatcherInterceptor.java:52)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.pool.PooledInstanceInterceptor.processInvocation(PooledInstanceInterceptor.java:51)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.CurrentInvocationContextInterceptor.processInvocation(CurrentInvocationContextInterceptor.java:41)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.invocationmetrics.WaitTimeInterceptor.processInvocation(WaitTimeInterceptor.java:47)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.security.SecurityContextInterceptor.processInvocation(SecurityContextInterceptor.java:100)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.deployment.processors.StartupAwaitInterceptor.processInvocation(StartupAwaitInterceptor.java:22)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.ShutDownInterceptorFactory$1.processInvocation(ShutDownInterceptorFactory.java:64)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.LoggingInterceptor.processInvocation(LoggingInterceptor.java:67)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ee.component.NamespaceContextInterceptor.processInvocation(NamespaceContextInterceptor.java:50)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.AdditionalSetupInterceptor.processInvocation(AdditionalSetupInterceptor.java:54)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ContextClassLoaderInterceptor.processInvocation(ContextClassLoaderInterceptor.java:64)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)
  	at org.wildfly.security.manager.WildFlySecurityManager.doChecked(WildFlySecurityManager.java:636)
  	at org.jboss.invocation.AccessCheckingInterceptor.processInvocation(AccessCheckingInterceptor.java:61)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)
  	at org.jboss.invocation.PrivilegedWithCombinerInterceptor.processInvocation(PrivilegedWithCombinerInterceptor.java:80)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.ViewService$View.invoke(ViewService.java:198)
  	at org.jboss.as.ee.component.ViewDescription$1.processInvocation(ViewDescription.java:185)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.ProxyInvocationHandler.invoke(ProxyInvocationHandler.java:73)
  	at gov.medicaid.services.BusinessProcessService$$$view13.getAvailableTasks(Unknown Source)
  	at gov.medicaid.controllers.admin.EnrollmentController.doSearch(EnrollmentController.java:945)
  	... 81 more
  Caused by: javax.persistence.PersistenceException: org.hibernate.HibernateException: Unable to access lob stream
  	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1692)
  	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1602)
  	at org.hibernate.jpa.internal.QueryImpl.getResultList(QueryImpl.java:492)
  	at org.jbpm.task.service.TaskServiceSession.getTasksAssignedAsPotentialOwner(TaskServiceSession.java:730)
  	at org.jbpm.task.service.TaskServiceSession.getTasksAssignedAsPotentialOwner(TaskServiceSession.java:711)
  	at org.jbpm.task.service.local.LocalTaskService.getTasksAssignedAsPotentialOwner(LocalTaskService.java:193)
  	at gov.medicaid.services.impl.BusinessProcessServiceBean.getAvailableTasks(BusinessProcessServiceBean.java:300)
  	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  	at java.lang.reflect.Method.invoke(Method.java:498)
  	at org.jboss.as.ee.component.ManagedReferenceMethodInterceptor.processInvocation(ManagedReferenceMethodInterceptor.java:52)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:437)
  	at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.doMethodInterception(Jsr299BindingsInterceptor.java:82)
  	at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.processInvocation(Jsr299BindingsInterceptor.java:93)
  	at org.jboss.as.ee.component.interceptors.UserInterceptorFactory$1.processInvocation(UserInterceptorFactory.java:63)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.invocationmetrics.ExecutionTimeInterceptor.processInvocation(ExecutionTimeInterceptor.java:43)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.jpa.interceptor.SBInvocationInterceptor.processInvocation(SBInvocationInterceptor.java:47)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.tx.EjbBMTInterceptor.handleInvocation(EjbBMTInterceptor.java:103)
  	... 129 more
  Caused by: org.hibernate.HibernateException: Unable to access lob stream
  	at org.hibernate.type.descriptor.java.DataHelper.extractString(DataHelper.java:270)
  	at org.hibernate.type.descriptor.java.StringTypeDescriptor.wrap(StringTypeDescriptor.java:72)
  	at org.hibernate.type.descriptor.java.StringTypeDescriptor.wrap(StringTypeDescriptor.java:22)
  	at org.hibernate.type.descriptor.sql.ClobTypeDescriptor$1.doExtract(ClobTypeDescriptor.java:44)
  	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
  	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:238)
  	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:234)
  	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:224)
  	at org.hibernate.loader.hql.QueryLoader.getResultRow(QueryLoader.java:452)
  	at org.hibernate.loader.hql.QueryLoader.getResultColumnOrRow(QueryLoader.java:435)
  	at org.hibernate.loader.Loader.getRowFromResultSet(Loader.java:756)
  	at org.hibernate.loader.Loader.processResultSet(Loader.java:972)
  	at org.hibernate.loader.Loader.doQuery(Loader.java:930)
  	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:336)
  	at org.hibernate.loader.Loader.doList(Loader.java:2617)
  	at org.hibernate.loader.Loader.doList(Loader.java:2600)
  	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2429)
  	at org.hibernate.loader.Loader.list(Loader.java:2424)
  	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:501)
  	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:371)
  	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216)
  	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1326)
  	at org.hibernate.internal.QueryImpl.list(QueryImpl.java:87)
  	at org.hibernate.jpa.internal.QueryImpl.list(QueryImpl.java:606)
  	at org.hibernate.jpa.internal.QueryImpl.getResultList(QueryImpl.java:483)
  	... 149 more
  Caused by: org.postgresql.util.PSQLException: Large Objects may not be used in auto-commit mode.
  	at org.postgresql.largeobject.LargeObjectManager.open(LargeObjectManager.java:262)
  	at org.postgresql.largeobject.LargeObjectManager.open(LargeObjectManager.java:248)
  	at org.postgresql.jdbc.AbstractBlobClob.getLo(AbstractBlobClob.java:272)
  	at org.postgresql.jdbc.AbstractBlobClob.getBinaryStream(AbstractBlobClob.java:116)
  	at org.postgresql.jdbc.PgClob.getCharacterStream(PgClob.java:52)
  	at org.hibernate.type.descriptor.java.DataHelper.extractString(DataHelper.java:263)
  	... 173 more
  ~~~

** LABELS
   - Z-REQ-PSM-AD-5.4
     The PSM shall support a user security profile that controls user
     access rights to data categories and system functions.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

** LABEL CHANGES
   + ad-5.13
* [[https://github.com/solutionguidance/psm/issues/170][170]] (closed): empty screening schedule should trigger nudges to service administrator

  When I'm logged in as a service administrator and go to the screening schedule
  
  http://localhost:8080/cms/admin/getScreeningSchedule
  
  I see: "The system will use the following schedule to automatically screen all pending enrollments that have not been manually scheduled for screening.
  Upcoming screening date :
  Screening interval : Every 0"
  
  When I go to Change Schedule, I see that no date, time, or interval is set. It seems to me that the first service administrator should get actively nudged to set these upon first login, and upon subsequent logins if the schedule hasn't been set. Should we also set a default schedule?

** LABELS
   - Z-REQ-PSM-FR-4.7
     The PSM shall support admin-configurable automated re-screening.
     C.f. psm-FR-7.3.
     <<< FR 4.  Configurable Setting >>>

* [[https://github.com/solutionguidance/psm/issues/169][169]]   (open): Some headers/divs display twice

  After I log in as a service administrator, on a Functions page like http://localhost:8080/cms/admin/viewAgents , I see the word "Functions" twice between the "Dashboard | Enrollments | Functions | My Profile" navbar and the content area:
  
  ~~~
                      </div>
                      <div class="breadCrumb">
                          Functions
                      </div>
                      <h1>Functions</h1>
  ~~~
  
  ![functions-twice](https://user-images.githubusercontent.com/842790/27243986-8a5e621c-52b2-11e7-9426-aa00bc3981f0.png)

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - bug
   - ux
* [[https://github.com/solutionguidance/psm/issues/168][168]]   (open): Don't display # field or empty Specialty field in PDF export of enrollment

  I'm logged in as a provider and I've submitted an enrollment as an acupuncturist (which does not allow me to submit a specialty). I go to view my enrollment details (on http://localhost:8080/cms/provider/enrollment/jump?page=Provider+Statement ) and export the PDF.
  
  In the "License Information" section, there's a "#" column (value: "1", probably the ID number of this enrollment in the local database - unnecessary to display, in my opinion), and a "Specialty" column (value: blank - unnecessary to display, or we should explicitly say "None").

** LABELS
   - Z-REQ-PSM-FR-7.6
     The PSM shall allow applicant to print application for their
     records.
     <<< FR 7. Usability >>>

   - backend
   - enhancement
   - quick-fix
** LABEL CHANGES
   + ad-3.3
* [[https://github.com/solutionguidance/psm/issues/167][167]]   (open): Exporting enrollment to PDF: "Remittance Sequence" not substituted in

  I'm logged in as a provider. I go to view my enrollment details (on http://localhost:8080/cms/provider/enrollment/jump?page=Provider+Statement ) and export the PDF.
  
  In the "Practice Information" section:
  
  "Remittance Sequence: PATIENT_ACCOUNT_OR_OWN_REFERENCE_ORDER "

** LABELS
   - Z-REQ-PSM-FR-7.4
     The PSM shall provide a screen to verify entered information.
     <<< FR 7. Usability >>>

   - bug
   - quick-fix
** LABEL CHANGES
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/166][166]]   (open): Review license names, rules, and seed data to find mismatches

  Find out whether there are other cases where rules mandate that XML matches seed data _and_ those two things do not match.  As an example, look at the bug fixed by PR #151.  

** LABELS
   - Z-REQ-PSM-FR-2.19
     The PSM shall have the capability to capture critical attributes
     including licensing information, financial data, and any other
     data attributes which could impact a risk level.
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-2.20
     The PSM shall collect and maintain licensure information to
     include at a minimum, licensing state, license number, licensure
     begin and end dates.  
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-3.13
     The PSM shall have the capability to track and support the
     screening of applications (and ongoing provider updates) for
     National Provider Identifier (NPIs), State licenses, Specialty
     Board certification as appropriate, review team visits when
     necessary, and any other State and/or Federal Requirement.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - backend
   - help wanted
   - task
   - tech-debt
* [[https://github.com/solutionguidance/psm/issues/165][165]]   (open): Remove/edit code pointing to old external-sources app

  The external sources source code is obsolete and was deleted in #68, closing #11.  However, there are still references to it, as in #143.  As we set up a new connection to federal data sources (e.g. building on #67), we'll need to remove and/or edit the code that points to the old `ext-sources` app.

** LABELS
   - Z-REQ-PSM-FR-3.17
     The PSM shall improve efficiency of the Screening Solution in
     terms of cost and schedule to actually implement
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - backend
   - docs
   - tech-debt
** LABEL CHANGES
   - fr-3.17
   + sq-1.5
* [[https://github.com/solutionguidance/psm/issues/163][163]]   (open): dropdown menus too short and narrow

  ![provider-type-too-small](https://user-images.githubusercontent.com/842790/27238684-d720e500-529b-11e7-8e42-578360d9bc8c.png)
  
  In several places in the provider enrollment workflow, the application displays a dropdown menu whose height is too short and cuts off the bottom of the letters in the value chosen.
  
  I'm using Firefox 45.9.0 on Debian.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - bug
   - quick-fix
   - ux
* [[https://github.com/solutionguidance/psm/issues/162][162]]   (open): Provider enrollment: "Provider Statement" UI improvements

  On step 5. ("Provider Statement") of the provider enrollment process:
  
  * The Date field should display a date picker to make it easier for the user to select today's date (and to avoid slip-ups by people who are from countries where the usual sequence of writing dates is day-month-year). We probably should not automatically fill in today's date, because this page is like the signature page of a legal document, so we do want to make the user actively choose (and thus figuratively write) the current date.
  * Next to the "Provider Name" field, we should display a reminder of the user's, to help the user type it in (this is helpful when the user can't remember whether the version they've submitted has a middle name or middle initial, whether to include stuff like "Dr." or "M.D.", etc.)
  * Next to "Provider Title" we should also display the user's title, as a reminder, plus an explanation of what that is (Dr./Mr./Ms.? Position, like "Physician"? Something else?)

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - quick-fix
   - ux
* [[https://github.com/solutionguidance/psm/issues/161][161]]   (open): View Enrollment Details confirmation screen: contact name & email address are blank

  After a provider's created an enrollment, on the "View Enrollment Details" confirmation screen, "Contact name" & "Contact email address" are blank when they should not be. (I checked the "Same as Above" checkbox on the "Personal Info" screen, while enrolling.)
  
  ![view-enrollment-details](https://user-images.githubusercontent.com/842790/27238476-031b9fb6-529b-11e7-8b58-644affcab2a0.png)

** LABELS
   - Z-REQ-PSM-FR-7.4
     The PSM shall provide a screen to verify entered information.
     <<< FR 7. Usability >>>

   - quick-fix
   - ux
** LABEL CHANGES
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/160][160]] (closed): Research available workflows

  Find out what workflows are available in the application, and which ones should be available based on the documentation we have.
  
  This first step is a broad sweep of available paths, not a deep dive into the idiosyncrasies of each specific workflow.

** LABELS
   - Z-REQ-PSM-FR-3.20
     The PSM shall define a common workflow for collecting enrollment
     information of individual providers
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

* [[https://github.com/solutionguidance/psm/issues/159][159]] (closed): Practice address displays punctuated improperly

  During provider enrollment, on the Step 4 ("Summary") screen, in the "practice information" confirmation display, the final line of the practice address displays as (example):
  
  `Minneapolis ,MN ,39582 ,40`
  
  This has an extra number after the ZIP code (perhaps the county code?) and has spaces before commas, instead of spaces after commas. Also, there shouldn't be a comma between the state abbreviation and the ZIP code.
  
  ![practice-information-commas](https://user-images.githubusercontent.com/842790/27238167-e0765632-5299-11e7-843f-b10fd9da57ec.png)

** LABELS
   - Z-REQ-PSM-FR-7.1
     The PSM shall provide per-field instructions on the application
     screen.
     <<< FR 7. Usability >>>
** LABEL CHANGES
   - fr-7.1
   + fr-7.14

* [[https://github.com/solutionguidance/psm/issues/158][158]]   (open): "No file selected" is confusing when a file is uploaded

  If a provider has uploaded a license/certification file, the "no file selected" display next to the "Browse..." button is confusing.
  
  To reproduce:
  * Log in as a provider.
  * Start a new enrollment.
  * In step 2 (license info), the "Upload License/Certification" column asks for a file upload. Upload a file, such as a PDF. 
  * Fill in other info and click "Next" to move on to step 3.
  * Click "Previous" to go back to step 2. 
  
  Result: it says (next to the file browse button) that "no file selected", but under that there's a blue link linking to the PDF that you'd uploaded earlier. 
  
  ![enrollment-no-file-selected](https://user-images.githubusercontent.com/842790/27236950-1b688512-5295-11e7-8389-81e9683c5d7b.png)
  
  This result also happens if the user clicks "Next" but there's an error with one of the other fields; the Step 2 (License info) page redisplays and the "no file selected" caption appears next to the "Browse..." button.
  
  Once the user's uploaded a file, we should find a better way to give the user the option of replacing that file with a different one.
  
  I'm using Firefox 45.9.0 on Debian.

** LABELS
   - Z-REQ-PSM-FR-2.4
     The PSM shall allow applicant to upload attachments to support
     the application.
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - in progress
   - quick-fix
   - ux
* [[https://github.com/solutionguidance/psm/issues/157][157]] (closed): Review libraries for needed updates

  Review the versions we're using of the libraries that we depend on.  Find those that are no longer supported and/or need security upgrades.

** LABELS
   - Z-REQ-PSM-SQ-1.3
     The PSM shall use modern source code dependency management
     techniques, and shall use up-to-date versions of upstream
     third-party dependencies.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - backend
   - infra
   - tech-debt
* [[https://github.com/solutionguidance/psm/issues/156][156]]   (open): Provider enrollment: hard to see red asterisks on blue background

  When a provider is performing a new enrollment, in step 2 (license info), it's hard to see the red asterisks (indicating that at least one license or certification is required), because they're small and on the blue background of the column headers.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - quick-fix
   - ux
* [[https://github.com/solutionguidance/psm/issues/155][155]]   (open): Tell user to add "a" (first), not "another" license/certification

  When a provider is performing a new enrollment, in step 2 (license info), the link to add a first license/certification should say "+ Add a License/Certification", not "+ Add Another License/Certification".

** LABELS
   - Z-REQ-PSM-FR-7.1
     The PSM shall provide per-field instructions on the application
     screen.
     <<< FR 7. Usability >>>
   - quick-fix

** LABEL CHANGES
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/154][154]] (closed): "Help" link does not display help

  The top of every page in the PSM includes a "Help" link (`<a href="javascript:;">Help</a>`). Clicking it has no effect.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - Z-REQ-PSM-FR-7.2
     The PSM shall provide detailed instructions for completing the
     application via a Help link.
     <<< FR 7. Usability >>>

   - bug
   - ux
* [[https://github.com/solutionguidance/psm/issues/152][152]] (closed): unescaped template on provider dashboard

  Line 88 of `psm-app/cms-web/WebContent/WEB-INF/pages/provider/dashboard/list.jsp` isn't escaped properly. I think the presence of `<` inside a `<!-- -->` block is messing stuff up.
  
  Result: " the way various other places in the PSM tree do?" displaying on page. See screenshot.
  
  ~~~
                               TODO: Also, there's a code duplication
                               between this block and the snippet in
                               ../../admin/includes/high_risk_level_means.jsp.
                               And why isn't the code here doing
                               <%@ include file="/WEB-INF/pages/admin/includes/high_risk_level_means.jsp" %>
                               the way various other places in the
                               PSM tree do?
  ~~~
  ![unescaped-template](https://user-images.githubusercontent.com/842790/27235911-c3fa429c-5290-11e7-92f7-d736084b49f9.png)

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

* [[https://github.com/solutionguidance/psm/issues/150][150]] (closed): Spike - research CI environments

  # Problem
  We need an environment that will eventually allow us to
  
  - Detect new commits
  - Compile and build the code
  - Run the code through checkstyle
  - Run unit tests
  - Deploy the ear file to a dev server
  
  Perhaps nightly runs of selenium tests to perform more costly integration tests on the running instance.
  
  # Tasks
  - [x] Research CI environments
  - [x] Create issues for migrating our application to this workflow

** LABELS
   - Z-REQ-PSM-SQ-1.2
     The PSM shall include and undergo automated testing at regular
     intervals, through continuous integration and deployment
     processes.  The PSM shall also undergo manual testing and QA as
     needed.
     <<< SQ 1.  Software Quality and Maintainability >>>
** LABEL CHANGES
   + sa-4.5

* [[https://github.com/solutionguidance/psm/issues/149][149]] (closed): Service admin can edit/delete other users' accounts

  If I am logged in as a service admin, the list of Service Agents I see sometimes lets me see the list of all PSM users, and to edit or delete those user accounts. Also, there's a URL that I can get to that lets me edit the system administrator's account.
  
  To reproduce:
  * Log in as a service admin.
  * Go to `cms/admin/viewAgents` in the browser .
  * Create an agent.
  * Delete that agent (either by clicking the Delete link in the Action column, or by checking the checkbox for that agent and choosing Delete Selected Agents).
  * Confirm that deletion.
  
  Result:
  * The list labelled Service Agents at `cms/admin/viewAgents` now actually contains all user accounts, including system administrators and providers, and offers you the ability to Edit or Delete them. The PSM does save the changes made to those user accounts' first name, last name, and email address, or, in the case of deletion, does accept the deletion (asking whether you're sure you want to delete that "system agent").
  
  * Going directly to `cms/admin/beginEditAgent?userId=SYSTEM` lets me view and edit the system administrator account's user information.
  
  _Note: because the PSM is not being used in production by anyone (as far as we know), we decided to track this as a public GitHub issue. But, had the PSM been further along, the issue would be handled confidentially, per #92._

** LABELS
   - Z-REQ-PSM-AD-5.12
     The PSM shall support roles and responsibilities of individuals
     that are separated through assigned information access
     authorization as necessary to prevent malevolent activity.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - Z-REQ-PSM-AD-5.4
     The PSM shall support a user security profile that controls user
     access rights to data categories and system functions.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - backend
   - security
** LABEL CHANGES
   + ad-5.13
* [[https://github.com/solutionguidance/psm/issues/148][148]] (closed): Make Master Deployable

  # Problem
  The Application requires some tables to be autocreated to be able to come up. We are able to bring it up by setting the auto create tag in the persistence.xml, bringing up the app, switching back, and then running seed.sql.
  
  Furthermore, jBPM requires some data in the tables to work. We have some sample data from Oracle that gets past this.
  
  This makes it hard to deploy the app to a new environment.
  
  # Steps
  - [ ] Determine the tables the autocreated tables that are required to get the app running and add create statements in seed.xml
  - [ ] Determine jBPM inserts needed to get the app to run and add them to seed.xml

** LABELS
   - Z-REQ-PSM-SQ-1.4
     The PSM shall use documented build, test, release, and
     installation processes that are automated as much as possible,
     for both development and production use.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/147][147]] (closed): Review licenses of dependencies

  Check that the libraries we're using (currently in `.jar` files in this repository, soon from the Maven repo or another source) are open source and compatible with Apache 2.

** LABELS
   - Z-REQ-PSM-FR-9.5
     The PSM shall ensure proprietary interfaces and protocols between
     modules are not used.
     <<< FR 9.  Meets architecture guideline >>>

* [[https://github.com/solutionguidance/psm/issues/146][146]] (closed): Dentist or physician requires a specialty, but no specialties appear

  When enrolling as a physician or as a dentist, the application requires a specialty type to be entered:
  
  ![specialty-screenshot](https://user-images.githubusercontent.com/842790/27200269-286af37a-51e7-11e7-866d-c7bef09add3e.png)
  
  But no specialty types appear in the dropdown. We have specialties in the seed data (in table `specialty_types`), so I'm not sure why this is.
  
  [Copying and adding to the issue that @cecilia-donnelly originally filed at NASA-Tournament-Lab/coeci-cms-mpsp#139 .]

** LABELS
   - Z-REQ-PSM-FR-2.7
     The PSM shall accept the following fields: Practice Type,
     Specialties (1 or more), NPI, HIPAA Taxonomy Codes, CLIA number,
     DHSS certification, Optical and Audiology y/n, Collaborative
     Practice Agreement y/n, RHC y/n, Medicare Provider Number, Case
     Mgmt y/n, Rural Health Rate
     <<< FR 2.  Capability to build provider profile >>>

** LABEL CHANGES
   + fr-7.14
* [[https://github.com/solutionguidance/psm/issues/139][139]]   (open): Split BeneficialOwnership subclasses into their own Tables

  BeneficialOwnership entity has two subclasses, PersonBeneficialOwner and OrganizationBeneficialOwner.
  
  There is one table that has the union of the fields needed for this. We kept that as is for expediancy in converting over to H5, but single-table inheritance is not as clear as joined table inheritance, and is not consistent with Entity and its derivatives. 
  
  Please update the table and change these classes.
  
  Progress on #36 and comments from PR #133 

** LABELS
   - Z-REQ-PSM-SQ-1.5
     The PSM shall use D.R.Y. coding principles to avoid unnecessary
     complexity, inflexibility, redundancy, and denormalization in the
     source code and database schemas, and to use precise terminology
     in data structures and operations.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - backend
   - tech-debt
* [[https://github.com/solutionguidance/psm/issues/129][129]] (closed): investigate why JDBC installation sometimes gives "is not a valid node type name" error

  Per [conversation](https://github.com/OpenTechStrategies/psm/pull/102#discussion_r121033116) on [a change](https://github.com/OpenTechStrategies/psm/pull/102#discussion_r121519190) in #102 -- 
  
  When Kevin was going through `INSTALL.md` and working through installing the dependencies, upon running
  
  > $ ./bin/jboss-cli.sh --connect --command="deploy ../postgresql-{VERSION}.jar"
  
  he got an error saying that the `.jar` file "is not a valid node type name". After #102 is merged, we'll have a workaround for this in the installation docs. But we should investigate when and why this error happens, so we can streamline the installation instructions.

** LABELS
   - Z-REQ-PSM-SQ-1.4
     The PSM shall use documented build, test, release, and
     installation processes that are automated as much as possible,
     for both development and production use.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/127][127]]   (open): Implement screening schedules or remove UI

  In converting `ScreeningSchedule` to Hibernate 5 in #126, we learned that there is no functionality attached to the screening schedule: you can read and update the schedule in the admin UI, but there is nothing that ever reads the schedule or acts upon it.
  
  UI that is not backed by functionality is not good: it suggests features that are not implemented, and can lead to confusion or a loss of confidence in the software.
  
  We should either implement screening schedules fully, or remove (or at least disable) the UI around it.

** LABELS
   - Z-REQ-PSM-FR-3.5
     The PSM shall screen limited-risk providers by verifying that the
     provider or supplier meets all applicable federal regulations and
     state requirements for the provider or supplier type, conducting
     license verifications, including licensure verifications across
     state lines for physicians, non-physician practitioners,
     providers and suppliers, and conducting database checks on a
     pre-and post-enrollment basis to ensure that providers and
     suppliers continue to meet the enrollment criteria for their
     provider/supplier type.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-5.6
     The PSM shall require revalidation period to be configurable.
     <<< FR 5. Manage Enrollment >>>

   - backend
   - tech-debt
** LABEL CHANGES
   + fr-4.7
* [[https://github.com/solutionguidance/psm/issues/125][125]]   (open): saveEnrollmentDetails() function may need a rewrite

  See https://github.com/OpenTechStrategies/psm/pull/120#issuecomment-307931920 for details, but [this function](https://github.com/OpenTechStrategies/psm/blob/7427a98842f127634206a91a31a358761f26287d/psm-app/cms-business-process/src/main/java/gov/medicaid/services/impl/ProviderEnrollmentServiceBean.java#L2149-L2161) in `ProviderEnrollmentServiceBean.java` is confusing, and may include some unnecessary lines.  We should rewrite if necessary.
  
  This will become clearer once we are able to submit an enrollment, at which point we'll see if we get an error.

** LABELS
   - Z-REQ-PSM-SQ-1.5
     The PSM shall use D.R.Y. coding principles to avoid unnecessary
     complexity, inflexibility, redundancy, and denormalization in the
     source code and database schemas, and to use precise terminology
     in data structures and operations.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - backend
   - tech-debt
* [[https://github.com/solutionguidance/psm/issues/124][124]]   (open): Add Postgres TCP connection configuration to INSTALL.md

  From IRC:
  
  Jason: sumanah: have we talked about `pg_hba.conf`? I don't think I put any of that in the install guide...
  Jason: sumanah: java needs to connect to pg over TCP instead of a unix domain socket; I think pg either doesn't listen to TCP by default or doesn't allow password auth by default
  Jason: sumanah: if you're looking for things to do, I might suggest digging into that :) maybe with a fresh centos VM?
  Jason: sumanah: oh I think maybe I talked about it with slifty? it got recorded here: https://github.com/OpenTechStrategies/psm/blob/master/rhel-install.sh#L31
  
  Therefore, we should add a `pg_hba.conf` configuration step to `INSTALL.md`.

** LABELS
   - Z-REQ-PSM-SQ-1.4
     The PSM shall use documented build, test, release, and
     installation processes that are automated as much as possible,
     for both development and production use.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - docs
* [[https://github.com/solutionguidance/psm/issues/113][113]] (closed): investigate Mailcatcher replacement

  Right now our install documentation includes installing Mailcatcher as a test mail server. This is suboptimal because people get stuck on its installation, and because it'd be nice to reuse the Java ecosystem instead of making people deal with another language's package management & dependencies for this one thing.
  
  So I am taking a few minutes this afternoon to look around for a Java replacement, hopefully just another app that WildFly can deploy, and that has the nice "view the emails being sent through a web dashboard" feature that Mailcatcher has (even nicer: also put them in a directory ondisk, for testability). A Python replacement would be less awesome but still good since most target servers already have Python 2.7 installed, more than have Ruby and its accoutrements installed.

** LABELS
   - Z-REQ-PSM-SQ-1.3
     The PSM shall use modern source code dependency management
     techniques, and shall use up-to-date versions of upstream
     third-party dependencies.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/111][111]] (closed): specify Linux distro preference in install instructions

  Per conversation with James just now: for now, put a nice note at the top of `INSTALL.md`, suggesting that the user will have a better time on a Debian-based Linux but that we also support RPM-based distributions.

** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/108][108]]   (open): Remove "Lorem Ipsum" text wherever possible.

  Making this a separate issue (disentangling from issue #51).
  
  Branch [51-remove-lorem-ipsum](https://github.com/opentechstrategies/psm/tree/51-remove-lorem-ipsum) has progress so far.  I think that branch is out-of-date now anyway, especially after the issue #53 changes were merged in PR #54.  So I'll make a new branch, basing its name on this new issue number, port over anything from the original branch that needs to be ported over, and create a PR from there.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - enhancement
   - quick-fix
* [[https://github.com/solutionguidance/psm/issues/106][106]] (closed): Broken link on Section 4 of the main page

  The following ext-sourcex-app link in section 4 gets you to a 404 error message:
  
  The ext-sources-app subdirectory holds the source code to the semi-separate middleware application that provides a service wrapper around external data sources, thereby offering the PSM a consistent API to those services.

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

* [[https://github.com/solutionguidance/psm/issues/104][104]]   (open): Encrypt social security numbers at rest

  We need to deal with social security numbers as part of the initial and periodic screening process, which implies that we need to store social security numbers. Currently, there is a field on `Person` named `ssn`, and it is stored in the database.
  
  We should encrypt SSNs at rest, and ensure that access to them is limited and audited.

** LABELS
   - Z-REQ-PSM-AD-5.17
     The PSM shall use only FIPS Pub 140-2-approved (or higher)
     encryption algorithms.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - backend
   - security
** LABEL CHANGES
   + ia-4.2
   + ad-5.1
* [[https://github.com/solutionguidance/psm/issues/103][103]] (closed): OwnershipType Entity may be Obsolete

  I don't see an entry for OwnershipType in Medicade.hbm.xml and don't see any data for it in mpse_clean.sql
  
  A quick look through the code doesn't show it ever being referenced. It is loaded as a property for Asset object, but I don't see any useful references to it from there apart from some scaffolding code:
  ```            
  if (asset.getOwnershipType() != null) {
                  String type = doLegacyMapping(asset.getOwnershipType().getCode(), XREF_OWNERSHIP_TYPE);
                  sb.append(fw(type, ColumnDef.WS_000_EXT_OWN_A_BCKGRD_OWN));
  ```
  
  Can we delete this class?

** LABELS
   - Z-REQ-PSM-SQ-1.5
     The PSM shall use D.R.Y. coding principles to avoid unnecessary
     complexity, inflexibility, redundancy, and denormalization in the
     source code and database schemas, and to use precise terminology
     in data structures and operations.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - tech-debt
* [[https://github.com/solutionguidance/psm/issues/101][101]] (closed): License Status has an apparently unused property called 'Date'

  While converting LicenseStatus to H5 I saw that it has a property called Date which does not seem to be referenced anywhere.
  
  I made the column in seed.sql nullable and carrying on. This should be investigated and perhaps dropped.

** LABELS
   - Z-REQ-PSM-SQ-1.5
     The PSM shall use D.R.Y. coding principles to avoid unnecessary
     complexity, inflexibility, redundancy, and denormalization in the
     source code and database schemas, and to use precise terminology
     in data structures and operations.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/92][ 92]]   (open): Need a mechanism for receiving security vulnerability bug reports.

  The PSM, like most projects, needs a way to [receive bug reports about security vulnerabilities confidentially](http://producingoss.com/en/publicity.html#security-receiving).  Having people file such bug reports in the public tracker is no good -- that's just a 0-day generator :-).
  
  It can be a secure web form, an email address with a published GPG key, whatever.  Just something that lets a designated security team get the information and decide what to do with it before showing anything in public.

** LABELS
   - Z-REQ-PSM-AD-5.18
     The PSM shall be secure from unauthorized access or use, and
     shall sanitize inputs and outputs where possible so as to avoid
     compromising itself or other systems.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - infra
   - task
** LABEL CHANGES
   + sq-1.1
* [[https://github.com/solutionguidance/psm/issues/91][ 91]]   (open): Fix "failed to lazily initialize" warnings in server log

  The changes in PR #86 cause warnings to show up in the server log, like:
  
  > 15:45:03,145 WARNING [gov.medicaid.services.impl.ProviderTypeServiceBean] (default task-29) Method output could not be serialized: failed to lazily initialize a collection of role: gov.medicaid.entities.ProviderType.agreementDocuments, could not initialize proxy - no Session (through reference chain: gov.medicaid.entities.SearchResult["items"]->java.util.ArrayList[0]->gov.medicaid.entities.ProviderType["agreementDocuments"])
  
  This is caused by debug-level performance logging - that is, log statements that time how long various lookups take. Lazily-loaded relations, like `ProviderType#agreementDocuments`, are not initialized by default, since the query to look them up can be very expensive. The partially-initialized object throws an exception when you try to access any of its uninitialized fields. The code that wants the `ProviderType` instance doesn't need the `agreementDocuments`, but the logging framework is trying to serialize the instance to JSON, and warning when it fails to do so.
  
  Make these warnings go away. Ideally we could figure out how to serialize only as much of the object as is initialized; less ideal would be to only serialize the non-optional parts, regardless of whether they're loaded; alternatively, we could decide that this kind of performance logging is better done by another method (a library? something built into the application server? a service like new relic?), and replace the logging framework entirely.

** LABELS
   - Z-REQ-PSM-II-2.1
     The PSM shall perform advanced information monitoring and routes
     system alerts and alarms to communities of interest when the
     system detects unusual conditions.
     <<< II 2.  Technical Service Classification:  Data Connectivity >>>

   - backend
   - tech-debt
* [[https://github.com/solutionguidance/psm/issues/88][ 88]] (closed): Make Service Assurance Types less MN-specific

  The service assurance stuff seems super specific to MN.  At some point we need to figure out whether that is generalizable structure or should be removed entirely.

** LABELS
   - Z-REQ-PSM-II-2.1
     The PSM shall perform advanced information monitoring and routes
     system alerts and alarms to communities of interest when the
     system detects unusual conditions.
     <<< II 2.  Technical Service Classification:  Data Connectivity >>>

* [[https://github.com/solutionguidance/psm/issues/87][ 87]] (closed): Crash/error upon logging in with service admin account

  I have a new, freshly setup instance of the PSM.
  
  I can log in with the system administrator account without errors. But when I try to log in as `admin` (the "service admin" account), the web frontend gives me this "Error processing request" error:
  
  ~~~
  Error processing request
  Context Path:
  /cms
  
  Servlet Path:
  /ops/viewDashboard
  
  Path Info:
  null
  
  Query String:
  null
  
  Stack Trace
  org.springframework.web.util.NestedServletException: Request processing failed; nested exception is javax.ejb.EJBException: javax.persistence.PersistenceException: org.hibernate.exception.SQLGrammarException: could not extract ResultSet
  org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:656)
  org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:549)
  javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
  javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
  io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)
  io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:368)
  org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:109)
  org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:97)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:100)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:78)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:119)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:35)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:187)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:79)
  org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:169)
  org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:237)
  org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)
  io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
  io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
  io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
  io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
  io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
  org.wildfly.extension.undertow.security.SecurityContextAssociationHandler.handleRequest(SecurityContextAssociationHandler.java:78)
  io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
  io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
  io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
  io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
  io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
  io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
  io.undertow.security.handlers.NotificationReceiverHandler.handleRequest(NotificationReceiverHandler.java:50)
  io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
  io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)
  io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
  io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
  io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
  io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
  io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
  io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
  io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
  io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
  io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
  io.undertow.server.Connectors.executeRootHandler(Connectors.java:202)
  io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:805)
  java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
  java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
  java.lang.Thread.run(Thread.java:748)
  ~~~
  
  
  The log in my terminal ends:
  
  ~~~
  15:46:58,801 INFO  [org.springframework.web.servlet.DispatcherServlet] (ServerService Thread Pool -- 80) FrameworkServlet 'mvc-dispatcher': initialization completed in 165 ms
  15:46:58,801 INFO  [org.wildfly.extension.undertow] (ServerService Thread Pool -- 80) WFLYUT0021: Registered web context: /cms
  15:46:58,836 INFO  [org.jboss.as.server] (Controller Boot Thread) WFLYSRV0010: Deployed "cms-portal-services.ear" (runtime-name : "cms-portal-services.ear")
  15:46:58,837 INFO  [org.jboss.as.server] (ServerService Thread Pool -- 37) WFLYSRV0010: Deployed "postgresql-42.1.1.jar" (runtime-name : "postgresql-42.1.1.jar")
  15:46:58,934 INFO  [org.jboss.as] (Controller Boot Thread) WFLYSRV0060: Http management interface listening on http://127.0.0.1:9990/management
  15:46:58,934 INFO  [org.jboss.as] (Controller Boot Thread) WFLYSRV0051: Admin console listening on http://127.0.0.1:9990
  15:46:58,934 INFO  [org.jboss.as] (Controller Boot Thread) WFLYSRV0025: WildFly Full 10.1.0.Final (WildFly Core 2.2.0.Final) started in 15899ms - Started 1425 of 1678 services (447 services are lazy, passive or on-demand)
  15:47:21,453 INFO  [gov.medicaid.security.DomainDatabaseAuthenticationProvider] (default task-2) Attempting database authentication...
  15:47:21,655 INFO  [stdout] (default task-2) Hibernate: 
  15:47:21,655 INFO  [stdout] (default task-2)     select
  15:47:21,655 INFO  [stdout] (default task-2)         authentica0_.username as username1_8_0_,
  15:47:21,655 INFO  [stdout] (default task-2)         authentica0_.password as password2_8_0_ 
  15:47:21,655 INFO  [stdout] (default task-2)     from
  15:47:21,655 INFO  [stdout] (default task-2)         cms_authentication authentica0_ 
  15:47:21,655 INFO  [stdout] (default task-2)     where
  15:47:21,655 INFO  [stdout] (default task-2)         authentica0_.username=?
  15:47:21,706 INFO  [gov.medicaid.security.DomainDatabaseAuthenticationProvider] (default task-2) Internal user found, loading credentials...
  15:47:21,723 INFO  [stdout] (default task-2) Hibernate: 
  15:47:21,724 INFO  [stdout] (default task-2)     select
  15:47:21,724 INFO  [stdout] (default task-2)         cmsuser0_.user_id as user_id1_9_,
  15:47:21,724 INFO  [stdout] (default task-2)         cmsuser0_.email as email2_9_,
  15:47:21,724 INFO  [stdout] (default task-2)         cmsuser0_.first_name as first_na3_9_,
  15:47:21,724 INFO  [stdout] (default task-2)         cmsuser0_.last_name as last_nam4_9_,
  15:47:21,724 INFO  [stdout] (default task-2)         cmsuser0_.middle_name as middle_n5_9_,
  15:47:21,724 INFO  [stdout] (default task-2)         cmsuser0_.phone_number as phone_nu6_9_,
  15:47:21,724 INFO  [stdout] (default task-2)         cmsuser0_.role_code as role_cod9_9_,
  15:47:21,724 INFO  [stdout] (default task-2)         cmsuser0_.status as status7_9_,
  15:47:21,724 INFO  [stdout] (default task-2)         cmsuser0_.username as username8_9_ 
  15:47:21,724 INFO  [stdout] (default task-2)     from
  15:47:21,724 INFO  [stdout] (default task-2)         cms_user cmsuser0_ 
  15:47:21,724 INFO  [stdout] (default task-2)     where
  15:47:21,724 INFO  [stdout] (default task-2)         cmsuser0_.username=?
  15:47:21,726 INFO  [stdout] (default task-2) Hibernate: 
  15:47:21,726 INFO  [stdout] (default task-2)     select
  15:47:21,726 INFO  [stdout] (default task-2)         role0_.code as code1_29_0_,
  15:47:21,726 INFO  [stdout] (default task-2)         role0_.description as descript2_29_0_ 
  15:47:21,726 INFO  [stdout] (default task-2)     from
  15:47:21,726 INFO  [stdout] (default task-2)         roles role0_ 
  15:47:21,727 INFO  [stdout] (default task-2)     where
  15:47:21,727 INFO  [stdout] (default task-2)         role0_.code=?
  15:47:21,789 INFO  [stdout] (default task-4) Hibernate: 
  15:47:21,789 INFO  [stdout] (default task-4)     select
  15:47:21,789 INFO  [stdout] (default task-4)         count(*) as col_0_0_ 
  15:47:21,790 INFO  [stdout] (default task-4)     from
  15:47:21,790 INFO  [stdout] (default task-4)         provider_profiles providerpr0_ 
  15:47:21,790 INFO  [stdout] (default task-4)     left outer join
  15:47:21,790 INFO  [stdout] (default task-4)         risk_levels risklevel1_ 
  15:47:21,790 INFO  [stdout] (default task-4)             on providerpr0_.risk_level_code=risklevel1_.code cross 
  15:47:21,790 INFO  [stdout] (default task-4)     join
  15:47:21,790 INFO  [stdout] (default task-4)         TICKET enrollment2_ 
  15:47:21,790 INFO  [stdout] (default task-4)     left outer join
  15:47:21,790 INFO  [stdout] (default task-4)         request_types requesttyp3_ 
  15:47:21,790 INFO  [stdout] (default task-4)             on enrollment2_.REQUEST_TYP_CD=requesttyp3_.code 
  15:47:21,790 INFO  [stdout] (default task-4)     left outer join
  15:47:21,790 INFO  [stdout] (default task-4)         enrollment_statuses enrollment4_ 
  15:47:21,790 INFO  [stdout] (default task-4)             on enrollment2_.STATUS_CD=enrollment4_.code cross 
  15:47:21,790 INFO  [stdout] (default task-4)     join
  15:47:21,790 INFO  [stdout] (default task-4)         ENTITY entity5_ 
  15:47:21,790 INFO  [stdout] (default task-4)     left outer join
  15:47:21,790 INFO  [stdout] (default task-4)         provider_types providerty6_ 
  15:47:21,790 INFO  [stdout] (default task-4)             on entity5_.PROVIDER_TYP_CD=providerty6_.code 
  15:47:21,790 INFO  [stdout] (default task-4)     where
  15:47:21,790 INFO  [stdout] (default task-4)         providerpr0_.ticket_id=enrollment2_.TICKET_ID 
  15:47:21,790 INFO  [stdout] (default task-4)         and entity5_.TICKET_ID=providerpr0_.ticket_id 
  15:47:21,790 INFO  [stdout] (default task-4)         and providerpr0_.profile_id=entity5_.PROFILE_ID 
  15:47:21,790 INFO  [stdout] (default task-4)         and providerpr0_.ticket_id>0
  15:47:21,795 WARN  [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] (default task-4) SQL Error: 0, SQLState: 42P01
  15:47:21,795 ERROR [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] (default task-4) ERROR: relation "ticket" does not exist
    Position: 165
  15:47:21,799 ERROR [org.jboss.as.ejb3.invocation] (default task-4) WFLYEJB0034: EJB Invocation failed on component ProviderEnrollmentServiceBean for method public abstract gov.medicaid.entities.SearchResult gov.medicaid.services.ProviderEnrollmentService.searchTickets(gov.medicaid.entities.CMSUser,gov.medicaid.entities.ProviderSearchCriteria) throws gov.medicaid.services.PortalServiceException: javax.ejb.EJBException: javax.persistence.PersistenceException: org.hibernate.exception.SQLGrammarException: could not extract ResultSet
  	at org.jboss.as.ejb3.tx.CMTTxInterceptor.handleExceptionInOurTx(CMTTxInterceptor.java:187)
  	at org.jboss.as.ejb3.tx.CMTTxInterceptor.invokeInOurTx(CMTTxInterceptor.java:277)
  	at org.jboss.as.ejb3.tx.CMTTxInterceptor.required(CMTTxInterceptor.java:327)
  	at org.jboss.as.ejb3.tx.CMTTxInterceptor.processInvocation(CMTTxInterceptor.java:239)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.CurrentInvocationContextInterceptor.processInvocation(CurrentInvocationContextInterceptor.java:41)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.invocationmetrics.WaitTimeInterceptor.processInvocation(WaitTimeInterceptor.java:47)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.security.SecurityContextInterceptor.processInvocation(SecurityContextInterceptor.java:100)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.deployment.processors.StartupAwaitInterceptor.processInvocation(StartupAwaitInterceptor.java:22)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.ShutDownInterceptorFactory$1.processInvocation(ShutDownInterceptorFactory.java:64)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.LoggingInterceptor.processInvocation(LoggingInterceptor.java:67)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ee.component.NamespaceContextInterceptor.processInvocation(NamespaceContextInterceptor.java:50)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.AdditionalSetupInterceptor.processInvocation(AdditionalSetupInterceptor.java:54)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ContextClassLoaderInterceptor.processInvocation(ContextClassLoaderInterceptor.java:64)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)
  	at org.wildfly.security.manager.WildFlySecurityManager.doChecked(WildFlySecurityManager.java:636)
  	at org.jboss.invocation.AccessCheckingInterceptor.processInvocation(AccessCheckingInterceptor.java:61)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)
  	at org.jboss.invocation.PrivilegedWithCombinerInterceptor.processInvocation(PrivilegedWithCombinerInterceptor.java:80)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.ViewService$View.invoke(ViewService.java:198)
  	at org.jboss.as.ee.component.ViewDescription$1.processInvocation(ViewDescription.java:185)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.ProxyInvocationHandler.invoke(ProxyInvocationHandler.java:73)
  	at gov.medicaid.services.ProviderEnrollmentService$$$view14.searchTickets(Unknown Source)
  	at gov.medicaid.controllers.admin.DashboardController.view(DashboardController.java:134)
  	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  	at java.lang.reflect.Method.invoke(Method.java:498)
  	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:176)
  	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:426)
  	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:414)
  	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:790)
  	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:719)
  	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644)
  	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:549)
  	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
  	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
  	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)
  	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:368)
  	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:109)
  	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:97)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:100)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:78)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:119)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:35)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:187)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:79)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:169)
  	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:237)
  	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)
  	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
  	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
  	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
  	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
  	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
  	at org.wildfly.extension.undertow.security.SecurityContextAssociationHandler.handleRequest(SecurityContextAssociationHandler.java:78)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
  	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
  	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
  	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
  	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
  	at io.undertow.security.handlers.NotificationReceiverHandler.handleRequest(NotificationReceiverHandler.java:50)
  	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
  	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
  	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
  	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
  	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
  	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
  	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
  	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
  	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:202)
  	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:805)
  	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
  	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
  	at java.lang.Thread.run(Thread.java:748)
  Caused by: javax.persistence.PersistenceException: org.hibernate.exception.SQLGrammarException: could not extract ResultSet
  	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1692)
  	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1602)
  	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:560)
  	at gov.medicaid.services.impl.ProviderEnrollmentServiceBean.searchTickets(ProviderEnrollmentServiceBean.java:341)
  	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  	at java.lang.reflect.Method.invoke(Method.java:498)
  	at org.jboss.as.ee.component.ManagedReferenceMethodInterceptor.processInvocation(ManagedReferenceMethodInterceptor.java:52)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:437)
  	at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.doMethodInterception(Jsr299BindingsInterceptor.java:82)
  	at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.processInvocation(Jsr299BindingsInterceptor.java:93)
  	at org.jboss.as.ee.component.interceptors.UserInterceptorFactory$1.processInvocation(UserInterceptorFactory.java:63)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.invocationmetrics.ExecutionTimeInterceptor.processInvocation(ExecutionTimeInterceptor.java:43)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.jpa.interceptor.SBInvocationInterceptor.processInvocation(SBInvocationInterceptor.java:47)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:437)
  	at org.jboss.weld.ejb.AbstractEJBRequestScopeActivationInterceptor.aroundInvoke(AbstractEJBRequestScopeActivationInterceptor.java:73)
  	at org.jboss.as.weld.ejb.EjbRequestScopeActivationInterceptor.processInvocation(EjbRequestScopeActivationInterceptor.java:83)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ee.concurrent.ConcurrentContextInterceptor.processInvocation(ConcurrentContextInterceptor.java:45)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InitialInterceptor.processInvocation(InitialInterceptor.java:21)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.interceptors.ComponentDispatcherInterceptor.processInvocation(ComponentDispatcherInterceptor.java:52)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.pool.PooledInstanceInterceptor.processInvocation(PooledInstanceInterceptor.java:51)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.tx.CMTTxInterceptor.invokeInOurTx(CMTTxInterceptor.java:275)
  	... 116 more
  Caused by: org.hibernate.exception.SQLGrammarException: could not extract ResultSet
  	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:106)
  	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
  	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:109)
  	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:95)
  	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:79)
  	at org.hibernate.loader.Loader.getResultSet(Loader.java:2117)
  	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1900)
  	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1876)
  	at org.hibernate.loader.Loader.doQuery(Loader.java:919)
  	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:336)
  	at org.hibernate.loader.Loader.doList(Loader.java:2617)
  	at org.hibernate.loader.Loader.doList(Loader.java:2600)
  	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2429)
  	at org.hibernate.loader.Loader.list(Loader.java:2424)
  	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:501)
  	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:371)
  	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216)
  	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1326)
  	at org.hibernate.internal.QueryImpl.list(QueryImpl.java:87)
  	at org.hibernate.jpa.internal.QueryImpl.list(QueryImpl.java:606)
  	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:529)
  	... 146 more
  Caused by: org.postgresql.util.PSQLException: ERROR: relation "ticket" does not exist
    Position: 165
  	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2476)
  	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2189)
  	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:300)
  	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:428)
  	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:354)
  	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:169)
  	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:117)
  	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  	at java.lang.reflect.Method.invoke(Method.java:498)
  	at org.postgresql.ds.PGPooledConnection$StatementHandler.invoke(PGPooledConnection.java:422)
  	at com.sun.proxy.$Proxy128.executeQuery(Unknown Source)
  	at org.jboss.jca.adapters.jdbc.WrappedPreparedStatement.executeQuery(WrappedPreparedStatement.java:504)
  	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:70)
  	... 162 more
  
  15:47:21,805 ERROR [io.undertow.request] (default task-4) UT005023: Exception handling request to /cms/ops/viewDashboard: org.springframework.web.util.NestedServletException: Request processing failed; nested exception is javax.ejb.EJBException: javax.persistence.PersistenceException: org.hibernate.exception.SQLGrammarException: could not extract ResultSet
  	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:656)
  	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:549)
  	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
  	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
  	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)
  	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:368)
  	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:109)
  	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:97)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:100)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:78)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:119)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:35)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:187)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:79)
  	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
  	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:169)
  	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:237)
  	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)
  	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
  	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
  	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
  	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
  	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
  	at org.wildfly.extension.undertow.security.SecurityContextAssociationHandler.handleRequest(SecurityContextAssociationHandler.java:78)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
  	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
  	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
  	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
  	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
  	at io.undertow.security.handlers.NotificationReceiverHandler.handleRequest(NotificationReceiverHandler.java:50)
  	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
  	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
  	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
  	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
  	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
  	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
  	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.api.LegacyThreadSetupActionWrapper$1.call(LegacyThreadSetupActionWrapper.java:44)
  	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
  	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
  	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
  	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:202)
  	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:805)
  	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
  	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
  	at java.lang.Thread.run(Thread.java:748)
  Caused by: javax.ejb.EJBException: javax.persistence.PersistenceException: org.hibernate.exception.SQLGrammarException: could not extract ResultSet
  	at org.jboss.as.ejb3.tx.CMTTxInterceptor.handleExceptionInOurTx(CMTTxInterceptor.java:187)
  	at org.jboss.as.ejb3.tx.CMTTxInterceptor.invokeInOurTx(CMTTxInterceptor.java:277)
  	at org.jboss.as.ejb3.tx.CMTTxInterceptor.required(CMTTxInterceptor.java:327)
  	at org.jboss.as.ejb3.tx.CMTTxInterceptor.processInvocation(CMTTxInterceptor.java:239)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.CurrentInvocationContextInterceptor.processInvocation(CurrentInvocationContextInterceptor.java:41)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.invocationmetrics.WaitTimeInterceptor.processInvocation(WaitTimeInterceptor.java:47)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.security.SecurityContextInterceptor.processInvocation(SecurityContextInterceptor.java:100)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.deployment.processors.StartupAwaitInterceptor.processInvocation(StartupAwaitInterceptor.java:22)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.ShutDownInterceptorFactory$1.processInvocation(ShutDownInterceptorFactory.java:64)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.LoggingInterceptor.processInvocation(LoggingInterceptor.java:67)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ee.component.NamespaceContextInterceptor.processInvocation(NamespaceContextInterceptor.java:50)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.interceptors.AdditionalSetupInterceptor.processInvocation(AdditionalSetupInterceptor.java:54)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ContextClassLoaderInterceptor.processInvocation(ContextClassLoaderInterceptor.java:64)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)
  	at org.wildfly.security.manager.WildFlySecurityManager.doChecked(WildFlySecurityManager.java:636)
  	at org.jboss.invocation.AccessCheckingInterceptor.processInvocation(AccessCheckingInterceptor.java:61)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)
  	at org.jboss.invocation.PrivilegedWithCombinerInterceptor.processInvocation(PrivilegedWithCombinerInterceptor.java:80)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.ViewService$View.invoke(ViewService.java:198)
  	at org.jboss.as.ee.component.ViewDescription$1.processInvocation(ViewDescription.java:185)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.ProxyInvocationHandler.invoke(ProxyInvocationHandler.java:73)
  	at gov.medicaid.services.ProviderEnrollmentService$$$view14.searchTickets(Unknown Source)
  	at gov.medicaid.controllers.admin.DashboardController.view(DashboardController.java:134)
  	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  	at java.lang.reflect.Method.invoke(Method.java:498)
  	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:176)
  	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:426)
  	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:414)
  	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:790)
  	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:719)
  	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644)
  	... 70 more
  Caused by: javax.persistence.PersistenceException: org.hibernate.exception.SQLGrammarException: could not extract ResultSet
  	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1692)
  	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1602)
  	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:560)
  	at gov.medicaid.services.impl.ProviderEnrollmentServiceBean.searchTickets(ProviderEnrollmentServiceBean.java:341)
  	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  	at java.lang.reflect.Method.invoke(Method.java:498)
  	at org.jboss.as.ee.component.ManagedReferenceMethodInterceptor.processInvocation(ManagedReferenceMethodInterceptor.java:52)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:437)
  	at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.doMethodInterception(Jsr299BindingsInterceptor.java:82)
  	at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.processInvocation(Jsr299BindingsInterceptor.java:93)
  	at org.jboss.as.ee.component.interceptors.UserInterceptorFactory$1.processInvocation(UserInterceptorFactory.java:63)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.invocationmetrics.ExecutionTimeInterceptor.processInvocation(ExecutionTimeInterceptor.java:43)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.jpa.interceptor.SBInvocationInterceptor.processInvocation(SBInvocationInterceptor.java:47)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:437)
  	at org.jboss.weld.ejb.AbstractEJBRequestScopeActivationInterceptor.aroundInvoke(AbstractEJBRequestScopeActivationInterceptor.java:73)
  	at org.jboss.as.weld.ejb.EjbRequestScopeActivationInterceptor.processInvocation(EjbRequestScopeActivationInterceptor.java:83)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ee.concurrent.ConcurrentContextInterceptor.processInvocation(ConcurrentContextInterceptor.java:45)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.InitialInterceptor.processInvocation(InitialInterceptor.java:21)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
  	at org.jboss.as.ee.component.interceptors.ComponentDispatcherInterceptor.processInvocation(ComponentDispatcherInterceptor.java:52)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.component.pool.PooledInstanceInterceptor.processInvocation(PooledInstanceInterceptor.java:51)
  	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
  	at org.jboss.as.ejb3.tx.CMTTxInterceptor.invokeInOurTx(CMTTxInterceptor.java:275)
  	... 116 more
  Caused by: org.hibernate.exception.SQLGrammarException: could not extract ResultSet
  	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:106)
  	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
  	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:109)
  	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:95)
  	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:79)
  	at org.hibernate.loader.Loader.getResultSet(Loader.java:2117)
  	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1900)
  	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1876)
  	at org.hibernate.loader.Loader.doQuery(Loader.java:919)
  	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:336)
  	at org.hibernate.loader.Loader.doList(Loader.java:2617)
  	at org.hibernate.loader.Loader.doList(Loader.java:2600)
  	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2429)
  	at org.hibernate.loader.Loader.list(Loader.java:2424)
  	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:501)
  	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:371)
  	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216)
  	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1326)
  	at org.hibernate.internal.QueryImpl.list(QueryImpl.java:87)
  	at org.hibernate.jpa.internal.QueryImpl.list(QueryImpl.java:606)
  	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:529)
  	... 146 more
  Caused by: org.postgresql.util.PSQLException: ERROR: relation "ticket" does not exist
    Position: 165
  	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2476)
  	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2189)
  	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:300)
  	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:428)
  	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:354)
  	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:169)
  	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:117)
  	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  	at java.lang.reflect.Method.invoke(Method.java:498)
  	at org.postgresql.ds.PGPooledConnection$StatementHandler.invoke(PGPooledConnection.java:422)
  	at com.sun.proxy.$Proxy128.executeQuery(Unknown Source)
  	at org.jboss.jca.adapters.jdbc.WrappedPreparedStatement.executeQuery(WrappedPreparedStatement.java:504)
  	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:70)
  	... 162 more
  
  
  ~~~

** LABELS
   - Z-REQ-PSM-FR-9.5
     The PSM shall ensure proprietary interfaces and protocols between
     modules are not used.
     <<< FR 9.  Meets architecture guideline >>>
** LABEL CHANGES
   - fr-9.5
   + sq-1.3

* [[https://github.com/solutionguidance/psm/issues/79][ 79]] (closed): Deduplicate drools rules / database entries

  Drools is used to enforce rules like "you can't create an acupuncture enrollment without an acupuncture license". The UI asks the database what `LicenseType`s (like an acupuncture license) are associated with a `ProviderType` (like an acupuncturist), and allows uploading of associated licenses. This means that the same information - "acupuncturists require an acupuncture license" - lives in two places (at least in the simple case - there may be more complicated rules).
  
  This duplication makes changing the system more difficult: adding a new provider type means creating a new `ProviderType` (see also #41), creating a new `LicenseType`, linking the two in the database, and creating validation rules in drools (which requires a code change).
  
  We should look more closely at the validation rules and see if we can move them to the database.

** LABELS
   - Z-REQ-PSM-FR-5.5
     The PSM shall maintain the capability to limit billing and
     providers to certain benefit plans, services, by procedure codes,
     ranges of procedure codes, member age or by provider type(s) or
     as otherwise directed by the State.
     <<< FR 5. Manage Enrollment >>>

   - Z-REQ-PSM-FR-9.1
     The PSM shall integrate provider-type business rules described in
     the Enrollment Information Guide into the system.
     <<< FR 9.  Meets architecture guideline >>>

   - Z-REQ-PSM-IU-3.1
     The PSM of shall use standardized business rules definitions that
     reside in a separate application or rules engine.
     <<< IU 3.  Technical Service Classification:  Decision Management >>>

   - Z-REQ-PSM-SQ-1.5
     The PSM shall use D.R.Y. coding principles to avoid unnecessary
     complexity, inflexibility, redundancy, and denormalization in the
     source code and database schemas, and to use precise terminology
     in data structures and operations.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - tech-debt
** LABEL CHANGES
   + sa-4.0
   + sa-4.2
   + iu-3.2
* [[https://github.com/solutionguidance/psm/issues/78][ 78]]   (open): upstream: follow up on WildFly package integrity

  In `INSTALL.md` we advise people to download WildFly from the WildFly site and install it. It'd be better if we could also tell them to check for package integrity via a cryptographic signature. Thus: comment on [the relevant issues.jboss.org bug](https://issues.jboss.org/browse/WFLY-2979) to ask for cryptographic signatures to assure WildFly package integrity. It's an older bug, but [WildFly's new progress on CI](http://wildfly.org/news/2017/05/05/WildFly-CI/) implies that they might be more able to work on the release management issue now than when it was filed.

** LABELS
   - Z-REQ-PSM-SQ-1.3
     The PSM shall use modern source code dependency management
     techniques, and shall use up-to-date versions of upstream
     third-party dependencies.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - infra
   - security
   - task
* [[https://github.com/solutionguidance/psm/issues/74][ 74]]   (open): Remove or generify MN Tax ID form field

  When you fill out an enrollment, the form on the first page includes a field labeled "MN Tax ID".
  
  Remove it, or make it generic, such as "state tax ID". Investigate how the plumbing behind this form field works, and update it as necessary.
  
  ---
  
  Reproduction steps:
  
  1. Create a user with the `Provider` role
  2. Log in as that user
  3. Create a new enrollment
  4. Choose a provider type, such as `X-Ray Services`
  5. See:
  ![mn tax id](https://cloud.githubusercontent.com/assets/1494855/26741550/c89a3062-47a7-11e7-9387-c9729943c519.png)
   

** LABELS
   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - tech-debt
   - ux
* [[https://github.com/solutionguidance/psm/issues/73][ 73]]   (open): Docker compose error on deployment of core app

  After running `sudo docker-compose -p psm up --build` on master at 6481aadb10896bbe1acfb276c7ae9160108aae23, I get the following error (among many other log messages):
  
  ```
  wildfly_1  | 17:17:54,659 ERROR [org.jboss.as.controller.management-operation] (Controller Boot Thread) WFLYCTL0013: Operation ("deploy") failed - address: ([("deployment" => "cms-portal-services.ear")]) - failure description: {
  wildfly_1  |     "WFLYCTL0412: Required services that are not installed:" => [
  wildfly_1  |         "jboss.naming.context.java.jdbc.TaskServiceDS",
  wildfly_1  |         "jboss.naming.context.java.jdbc.MitaDS",
  wildfly_1  |         "jboss.naming.context.java.Mail"
  wildfly_1  |     ]
  ```
  
  I'm not sure how Docker is supposed to add those services to Wildfly, so it's hard for me to debug at the moment.  @jvasile, thoughts?

** LABELS
   - Z-REQ-PSM-SQ-1.4
     The PSM shall use documented build, test, release, and
     installation processes that are automated as much as possible,
     for both development and production use.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - infra
* [[https://github.com/solutionguidance/psm/issues/65][ 65]] (closed): Reliance on JavaScript for form submission may affect many pages.

  Not sure if this is a bug yet, but it might be:
  
  The situation described in issue #40, in which hitting Enter was made to work on the login page through JavaScript associated with an `<a>` element rather than through a proper HTML form button, may affect other pages on the site -- and this method of form submission may have accessibility implications.  Filing this issue so we don't forget to look into this.

** LABELS
   - Z-REQ-PSM-FR-10.2
     The PSM shall be accessible in compliance with Section 508 of the
     Rehabilitation Act.
     <<< FR 10. Compliance >>>

   - accessibility
   - ux
** LABEL CHANGES
   - fr-10.2
   + ad-2.4
* [[https://github.com/solutionguidance/psm/issues/62][ 62]]   (open): Include territories in list of states?

  Where lists of US states appear in the app, should the list include US territories?

** LABELS
   - Z-REQ-PSM-FR-2.6
     The PSM shall require the following fields: Provider Name,
     Business Phone, Provider Street Address, City, State, Zip Code,
     County, SSN, Date of Birth, License Number, IRS Payee Name, DBA
     Name, Payee Address, Payee City, Payee State, Payee Zip Code,
     Payee Tax ID, Provider Email address
     <<< FR 2.  Capability to build provider profile >>>

   - question
   - ux
** LABEL CHANGES
   + ad-3.1
* [[https://github.com/solutionguidance/psm/issues/61][ 61]]   (open): Make list of counties configurable

  Each state that deploys this app will (likely) include a list of its counties in a dropdown menu.  This list of counties should be configurable by an app user or loaded from a file when an instance of the PSM is initiated for the state.  
  
  Currently, @jasonaowen suspects that the code is set up so that *all* counties across states would appear in the dropdown, which is of course not desired.

** LABELS
   - Z-REQ-PSM-FR-2.6
     The PSM shall require the following fields: Provider Name,
     Business Phone, Provider Street Address, City, State, Zip Code,
     County, SSN, Date of Birth, License Number, IRS Payee Name, DBA
     Name, Payee Address, Payee City, Payee State, Payee Zip Code,
     Payee Tax ID, Provider Email address
     <<< FR 2.  Capability to build provider profile >>>

   - backend
   - task
   - ux
** LABEL CHANGES
   + ii-4.5
   + ad-3.1
* [[https://github.com/solutionguidance/psm/issues/57][ 57]]   (open): Improve database schema

  The way the database is structured is not always obvious or intuitive to me. Track such problems here.

** LABELS
   - Z-REQ-PSM-SQ-1.5
     The PSM shall use D.R.Y. coding principles to avoid unnecessary
     complexity, inflexibility, redundancy, and denormalization in the
     source code and database schemas, and to use precise terminology
     in data structures and operations.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - backend
   - tech-debt
** LABEL CHANGES
   + ia-1.1
   + ia-4.2
* [[https://github.com/solutionguidance/psm/issues/56][ 56]] (closed): Create an .editorconfig

  #42 has a few folks who contributed and we already have some whitespace conflicts (mix of tabs and spaces).
  
  Would it be worth setting up an .editorconfig so we could prevent the need for future whitespace-only commits?

** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/53][ 53]] (closed): Conditionalize alert about high-risk providers.

  The red-alert notice about "High" risk level at the bottom of this screen is not currently useful, and is not even conditionalized on the presence of any high-risk providers in the list being displayed above the alert:
  
  ![provider login dashboard](https://cloud.githubusercontent.com/assets/401111/26506653/038c0a14-4213-11e7-8c1e-4b7c9b9771a1.png)
  
  The code location for this is `psm-app/cms-web/WebContent/WEB-INF/pages/provider/dashboard/list.jsp`:
  
  ```
                          <div class="row infoRow">
                              <div class="row red">
                                  <b>* High risk level means:</b>
                              </div>
                              <p>
                                  Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
                              </p>
                          </div>
  ```
  
  
  Since the notice is not conditionalized on the actual presence of any high-risk providers in the pagination group currently being displayed, it is just a distraction right now.  Anyway, we don't even know if the Low/Medium/High risk divisions are going to be the risk-scoring scheme we end up with.
  
  So let's comment out that alert for now, and not distract users until a) we make it conditional and b) we know what we actually want to say about high-risk providers in the first place.
  
  Commenting it out will also solve one of the "Lorem Ipsum" instances we need to clean up for issue #51.

** LABELS
   - Z-REQ-PSM-FR-2.18
     The PSM shall have the capability to ensure that providers that
     have a history of fraud are flagged with a higher risk level at
     the time of screening
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-3.2
     The PSM shall have the capability to create a high-risk list to
     ensure that providers that are suspected or known to be
     fraudulent are flagged at the time of screening.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.4
     The PSM shall separate providers into risk categories limited,
     moderate, and high based on provider type, as established by CMS.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - task
* [[https://github.com/solutionguidance/psm/issues/51][ 51]] (closed): Presentability: use generic PSM logo

  The PSM should have a generic (non-state-specific) logo for dev/demo sandboxes, etc.
  
  Note that this ticket also used to include another presentability concern: getting rid of the "lorem ipsum" nonsense text in the UI, e.g., on the login page.  However, that is now tracked in issue #108.

** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - task
* [[https://github.com/solutionguidance/psm/issues/45][ 45]] (closed): GitHub Wiki?

  GitHub has a wiki.  We don't use it, but the link is there in case somebody wants to contribute.  I'm inclined to disable it because we are not going to garden the wiki.  I'd rather see changes go in to the md files in the repo.  There is a cost, of course, which is that we close off an avenue of participation from people who aren't git-savvy.  Still, I move we disable the wiki and direct those people to the mailing list.

** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/41][ 41]]   (open): Fix or remove provider type creation/deletion

  If you log in as a service admin, there is a button to `Add Provider Type`. Clicking on it produces a stack trace, because several attributes of provider types were removed in 8b28ccfd75bd3b37f6fd93bdcd31e24174633ee2 in response to [#34 Edit Provider Type to add required additional documentation- Service Admin](https://github.com/NASA-Tournament-Lab/coeci-cms-mpsp/issues/34) and [#90 Accepting Provider Agreement](https://github.com/NASA-Tournament-Lab/coeci-cms-mpsp/issues/90).
  
  There is also some complexity around matching the entries in the database to the entries in [an XML file](https://github.com/OpenTechStrategies/psm/blob/a89616ba8deff7f73390f2b0dc32f9b62f3c6954/psm-app/cms-business-model/src/main/resources/Entities.xsd), which may prevent new provider types from being added and needs further research.
  
  Additionally, there is UI around deleting provider types, but it is permanently disabled: there is no backing database column, so everything defaults to undeleteable.
  
  Regardless, either creating new provider types and deleting old provider types should be fully functional, or we should accept that it requires code and/or database changes and remove the broken UI.
  
  ![provider types](https://cloud.githubusercontent.com/assets/1494855/26410646/e85e7dbe-4071-11e7-925e-e2d9123fc6b5.png)

** LABELS
   - Z-REQ-PSM-II-4.5
     The PSM shall be configurable where feasible.
     <<< II 4.  Technical Service Classification:  System Extensibility >>>

   - backend
   - bug
   - docs
   - task
   - tech-debt
   - ux
* [[https://github.com/solutionguidance/psm/issues/39][ 39]]   (open): Make state-specific auth configurable

  Currently, the login page has a drop-down menu for "Domain."  One of the options is "MN-ITS," which presumably refers to Minnesota's Information Technology Services.  The "MN-ITS" shows up elsewhere in the code, too.  
  
  Edit this so that the state IT domain name and settings can be configured, to make it simple to set up the PSM in more than one state.

** LABELS
   - Z-REQ-PSM-AD-5.12
     The PSM shall support roles and responsibilities of individuals
     that are separated through assigned information access
     authorization as necessary to prevent malevolent activity.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - Z-REQ-PSM-II-4.5
     The PSM shall be configurable where feasible.
     <<< II 4.  Technical Service Classification:  System Extensibility >>>

   - backend
   - bug
   - enhancement
   - security
   - task
   - tech-debt
   - ux
* [[https://github.com/solutionguidance/psm/issues/36][ 36]] (closed): Use Hibernate 5, instead of 4

  The PSM had been using Hibernate 4.  Wildfly 10, our application server (see #2), ships with Hibernate 5.  Upgrade the code to work with the new version of Hibernate.
  
  The full list of classes that need to be transformed is:
  
  - [x] AcceptedAgreements
  - [x] Address
  - [x] Affiliation
  - [x] AgreementDocument
  - [x] Asset
  - [x] AssuredService
  - [x] AuditDetail
  - [x] AuditRecord
  - [x] Authentication
  - [x] BeneficialOwner
  - [x] BeneficialOwnerType
  - [x] BinaryContent
  - [x] CategoryOfService
  - [x] CMSUser
  - [x] ContactInformation
  - [x] CountyType
  - [x] Degree
  - [x] DesignatedContact
  - [x] Document
  - [x] Enrollment
  - [x] EnrollmentStatus
  - [x] Entity
  - [x] EntityStructureType
  - [x] Event
  - [x] ExternalAccountLink
  - [x] ExternalProfileLink
  - [x] HelpItem
  - [x] IssuingBoard
  - [x] LegacySystemMapping
  - [x] License
  - [x] LicenseStatus
  - [x] LicenseType
  - [x] Note
  - [x] OwnershipInformation
  - [x] OwnershipType
  - [x] PayToProvider
  - [x] PayToProviderType
  - [x] ProfileStatus
  - [x] ProviderCategoryOfService
  - [x] ProviderProfile
  - [x] ProviderService
  - [x] ProviderStatement
  - [x] ProviderType
  - [x] ProviderTypeSetting
  - [x] QPType
  - [x] RelationshipType
  - [x] RequestType
  - [x] RequiredField
  - [x] RequiredFieldType
  - [x] RiskLevel
  - [x] Role
  - [x] ScreeningSchedule
  - [x] ServiceAssuranceExtType
  - [x] ServiceAssuranceType
  - [x] ServiceCategory
  - [x] SpecialtyType
  - [x] StateType
  
  Some of these have already been transformed. We'll keep track of progress in this issue. (@jasonaowen, please respond with any corrections.)
  
  See [the wip-hibernate branch](https://github.com/OpenTechStrategies/psm/tree/wip-hibernate) for progress on this issue.

** LABELS
   - Z-REQ-PSM-SQ-1.3
     The PSM shall use modern source code dependency management
     techniques, and shall use up-to-date versions of upstream
     third-party dependencies.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/35][ 35]] (closed): Deploy external sources app on Wildfly

  Get the `ext-sources-app` part of the repository running on Wildfly.  This will probably involve some of the same work as #2.

** LABELS
   - Z-REQ-PSM-FR-9.5
     The PSM shall ensure proprietary interfaces and protocols between
     modules are not used.
     <<< FR 9.  Meets architecture guideline >>>

* [[https://github.com/solutionguidance/psm/issues/34][ 34]]   (open): Improve password handling

  There are some best practices around passwords that we should handle. See, for example, 
  - https://www.owasp.org/index.php/Password_Storage_Cheat_Sheet
  - https://stackoverflow.com/a/477578/25637
  
  This issue can, and maybe should, be split into several parts, including:
  - [x] password storage
  - [ ] "Forgot Password" functionality
  - [ ] password complexity policy
  - [ ] two-factor authentication

** LABELS
   - Z-REQ-PSM-AD-5.17
     The PSM shall use only FIPS Pub 140-2-approved (or higher)
     encryption algorithms.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - Z-REQ-PSM-AD-5.18
     The PSM shall be secure from unauthorized access or use, and
     shall sanitize inputs and outputs where possible so as to avoid
     compromising itself or other systems.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - Z-REQ-PSM-FR-7.14
     The PSM's user interface shall be as simple, comprehensible,
     navigable, reliable, robust in the face of error, and responsive
     as possible.
     <<< FR 7. Usability >>>

   - backend
   - security
   - state-question
   - tech-debt
** LABEL CHANGES
   + ad-5.3
   + ad-5.16
* [[https://github.com/solutionguidance/psm/issues/33][ 33]]   (open): Complete or remove the ability to suspend user accounts

  There is an attribute of a user, `status`, which can be either `ACTIVE` or `DISABLED`. New users default to `ACTIVE`, there is no UI that I can find that allows the status to be altered, and AFAICT nothing ever reads this value.
  
  Why is it here? Do we still want it? Either fully implement the ability to suspend an account, or remove the dead code and unused database column.

** LABELS
   - Z-REQ-PSM-AD-5.4
     The PSM shall support a user security profile that controls user
     access rights to data categories and system functions.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - backend
   - tech-debt
** LABEL CHANGES
   + ad-5.14
* [[https://github.com/solutionguidance/psm/issues/32][ 32]]   (open): Understand or remove user IDs

  Users have both a self-selected or assigned username and a system-generated user ID. Why do we have both? They are both (conceptually) primary keys.
  
  There are pieces of code like this: `query.setParameter("username", user.getUserId())`, which I think does not do what it suggests - this is at best confusing, and at worst a bug.
  
  Either figure out (and document!) why we have both, or remove user IDs in favor of usernames.

** LABELS
   - Z-REQ-PSM-AD-5.11
     The PSM shall  have standard Access Control specifications to include:
(i) Assigning a unique name and/or number for identifying and tracking
user identity. (Required) (iii) Implementing electronic procedures
that terminate an electronic session after a predetermined time of
inactivity. (Addressable)

     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - backend
   - tech-debt
* [[https://github.com/solutionguidance/psm/issues/31][ 31]] (closed): PostgreSQL jar hash error

  I've deployed `postgresql-42.1.1.jar` to my local Wildfly server.  Each time I start that server, I get the error: 
  
  ```
  WFLYSRV0137: No deployment content with hash <hash> is available in the deployment content repository for deployment 'postgresql-42.1.1.jar'
  ```
  
  I can delete the `postgresql-42.1.1.jar` deployment from `standalone-full.xml` and redeploy it and all works correctly.  @jasonaowen has also seen this error when he has multiple local deployments.
  
  Leaving an issue here for our records in case this continues to be a problem.  It's not a blocker, just a minor annoyance.

** LABELS
   - Z-REQ-PSM-SQ-1.3
     The PSM shall use modern source code dependency management
     techniques, and shall use up-to-date versions of upstream
     third-party dependencies.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - bug
   - tech-debt
* [[https://github.com/solutionguidance/psm/issues/30][ 30]] (closed): List and document APIs

  Document what APIs this module has -- there's an internal division between the external sources and the psm-app proper.  What external-facing APIs are there?
  
  For context, this documentation will help us determine which APIs are already here and which will we'll need to create.  There are other projects running concurrently with this one (e.g., a reference architecture project), which need to have an overview of what's already included in the PSM.  If we can point to code, that's also helpful for them -- the documentation of how to use the APIs doesn't need to be complete right away.
  

** LABELS
   - Z-REQ-PSM-II-4.2
     The PSM shall document all interfaces in an Interface Control
     Document (ICD), along with how those interfaces are maintained.
     <<< II 4.  Technical Service Classification:  System Extensibility >>>

   - Z-REQ-PSM-II-4.4
     Clearly documented - 
The PSM shall provide detailed API documentation provided for every
API.
     <<< II 4.  Technical Service Classification:  System Extensibility >>>

* [[https://github.com/solutionguidance/psm/issues/29][ 29]]   (open): Document how to edit list of provider types

  Each state has a different list of provider types.  We need to document how to edit the type list that is displayed by the PSM, and move toward making that list configurable.  

** LABELS
   - Z-REQ-PSM-II-4.5
     The PSM shall be configurable where feasible.
     <<< II 4.  Technical Service Classification:  System Extensibility >>>

   - docs
   - enhancement
** LABEL CHANGES
   + sq-1.1
   + ii-4.4
* [[https://github.com/solutionguidance/psm/issues/28][ 28]]   (open): Document production deployments

  Work with an operations engineer from a pilot state to determine what level of documentation around deployments is useful. Over-documenting a process they are familiar with is extra work for us to create and maintain, and for new users to read; under-documenting a process they're not that familiar with adds potentially blocking friction to deployment.

** LABELS
   - Z-REQ-PSM-SQ-1.4
     The PSM shall use documented build, test, release, and
     installation processes that are automated as much as possible,
     for both development and production use.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - state-question
* [[https://github.com/solutionguidance/psm/issues/26][ 26]]   (open): Review forks and include relevant changes

  Other people have worked on the Provider Screening Module. We should review their changes and, if they are useful to our efforts, bring them in.

** LABELS
   - Z-REQ-PSM-SQ-1.5
     The PSM shall use D.R.Y. coding principles to avoid unnecessary
     complexity, inflexibility, redundancy, and denormalization in the
     source code and database schemas, and to use precise terminology
     in data structures and operations.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - state-question
* [[https://github.com/solutionguidance/psm/issues/21][ 21]] (closed): Confirm which data handling standards we need to comply with

  If we are going to get set up as a data wrangler of various data sources, I want to be able to check that we are following any MITA or CMS standards that are appropriate for handling provider info. I presume that *provider* info could not possibly constitute sensitive PII but I would like to double-check this!
  
  I started looking at [the MITA framework](https://www.medicaid.gov/medicaid/data-and-systems/mita/mita-30/index.html) but think it does not address this question.
  
  I am beginning to think that the relevant standards might well be ["Minimum Acceptable Risk Standards for Exchanges (MARS-E) 2.0 Framework"](https://www.cms.gov/CCIIO/Resources/Regulations-and-Guidance/Downloads/2-MARS-E-v2-0-Minimum-Acceptable-Risk-Standards-for-Exchanges-11102015.pdf) -- discussed privately [on CALT]( https://calt.cms.gov/sf/projects/cms_aca_program_security_privacy/) and publicly listed in [cms.gov's Regulations and Guidance](https://www.cms.gov/cciio/resources/regulations-and-guidance/#MinimumAcceptableRiskStandards), explained in [this summary from CMS (pdf)](https://www.medicaid.gov/federal-policy-guidance/downloads/cib-09-23-2015.pdf) and described in [this surprisingly cogent Microsoft compliance page](https://www.microsoft.com/en-us/TrustCenter/Compliance/Mars-E). But I haven't gone deeply enough into it to understand whether it applies just to patients or includes any discussion of providers as well.
  
  And I stumbled across a [NIST standard, "Guide to Protecting the Confidentiality of Personally Identifiable Information (PII)" (pdf)](http://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-122.pdf) -- but this only applies if any of the data we deal with counts as PII.
  
  The resolution of this issue may depend on which federal data services we integrate with, in which case we can close it as a duplicate of #17.
  
  Relates to #10.

** LABELS
   - Z-REQ-PSM-II-2.2
     The PSM shall use a standards for message format to ensure
     interoperability (e.g. XML JSON)
     <<< II 2.  Technical Service Classification:  Data Connectivity >>>

   - Z-REQ-PSM-II-2.3
     Transport interoperability - 
The PSM shall comply with standard data transfer protocols as
applicable to health IT systems, their constituent elements/modules,
and services
     <<< II 2.  Technical Service Classification:  Data Connectivity >>>

   - Z-REQ-PSM-II-2.4
     Syntactic interoperability - 
The PSM shall comply with national standards for data message
formatting, as applicable to health IT systems, their constituent
elements/modules, and services
     <<< II 2.  Technical Service Classification:  Data Connectivity >>>
** LABEL CHANGES
   + iu-2.2
   + ia-3.9
   + ia-4.2

* [[https://github.com/solutionguidance/psm/issues/19][ 19]]   (open): Create new maintainer checklist

  We ought to have a checklist for new repository maintainers. It would include, for instance,
  
  - [ ] Add to list of administrators of https://groups.google.com/d/forum/psm-dev
  - [ ] Add to list at `code_of_conduct.md`

** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - docs
* [[https://github.com/solutionguidance/psm/issues/17][ 17]] (closed): Choose first federal data source

  A few considerations when choosing the first federal data source to connect to:
  
  __1. Which states use it?__
  
  We know that all states must consult the Social Security Administration's Death Master File, the National Plan and Provider Enumeration System (NPPES), the List of Excluded Individuals/Entities (LEIE), the Excluded Parties List System (EPLS) (see [CFR 42](https://www.law.cornell.edu/cfr/text/42/455.436)).  I believe all states also consult [PECOS](https://pecos.cms.hhs.gov/pecos/login.do#headingLv1), but see [this GAO report](https://www.gao.gov/products/GAO-16-402) on the wide variety of databases that states and managed care plans consult when screening providers.
  
  __2. How crucial is it to the function of the PSM?__
  
  EPLS and PECOS both show up in many places in the codebase (245 instances of EPLS and 199 instances of PECOS), while NPPES and LEIE only appear in the documentation.  So, likely EPLS and PECOS would be preferred for this one.
  
  __3. What steps do we need to take to use data from it?  Does it have an API or standard ETL process?__
  
  EPLS data is available in a public extract [here](https://www.sam.gov/portal/SAM/?navigationalstate=JBPNS_rO0ABXdcACJqYXZheC5mYWNlcy5wb3J0bGV0YnJpZGdlLlNUQVRFX0lEAAAAAQApdmlldzpiOWYzY2M4Yi1hZWZmLTRkMmQtOWU0MC01YzkxZTg0MjAyNTYAB19fRU9GX18*&portal:componentId=24f38525-a064-4a77-b09f-3fa5986c2b48&interactionstate=JBPNS_rO0ABXc0ABBfanNmQnJpZGdlVmlld0lkAAAAAQATL2pzZi9uYXZpZ2F0aW9uLmpzcAAHX19FT0ZfXw**&portal:type=action##11), but there are restrictions on access: 
  
  >Systematic access (electronic harvesting) or extraction of content from the website, including the use of "bots" or "spiders", is prohibited.
  
  PECOS doesn't have an API yet, and at least some states still do manual lookups.  A monthly extract may be available.
  
  

** LABELS
   - Z-REQ-PSM-FR-3.13
     The PSM shall have the capability to track and support the
     screening of applications (and ongoing provider updates) for
     National Provider Identifier (NPIs), State licenses, Specialty
     Board certification as appropriate, review team visits when
     necessary, and any other State and/or Federal Requirement.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.14
     The PSM shall cross-reference license and sanction information
     with other state or federal agencies.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.5
     The PSM shall screen limited-risk providers by verifying that the
     provider or supplier meets all applicable federal regulations and
     state requirements for the provider or supplier type, conducting
     license verifications, including licensure verifications across
     state lines for physicians, non-physician practitioners,
     providers and suppliers, and conducting database checks on a
     pre-and post-enrollment basis to ensure that providers and
     suppliers continue to meet the enrollment criteria for their
     provider/supplier type.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.7
     The PSM shall change a provider's risk level due to: imposition
     of a payment suspension within the previous 10 years; termination
     from billing Medicaid; exclusion by the OIG; revocation of
     billing privileges by a Medicare contractor within the previous
     10 years (and such provider/supplier is attempting to establish
     additional Medicare billing privileges by enrolling as a new
     provider or supplier or establish billing privileges for a new
     practice location); exclusion from any federal health care
     program; subject to any final adverse action (as defined in 42
     CFR 424.502) within the past 10 years; instances in which CMS
     lifts a temporary moratorium for a particular provider or
     supplier type and a provider or supplier that was prevented from
     enrolling based on the moratorium, applies for enrollment as a
     Medicare provider or supplier at any time within 6 months from
     the date the moratorium was lifted.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

** LABEL CHANGES
   + ia-3.2
* [[https://github.com/solutionguidance/psm/issues/16][ 16]] (closed): Manage sets of dependencies via Gradle or another tool

  @jasonaowen [writes](https://groups.google.com/d/msg/psm-dev/nzC3pP1XMFg/MOCUKnkhBAAJ):
  
  > From the `psm-app` directory, you can run `ant deploy` to build an EAR file. It depends on libraries provided by the application server - this is potentially something to change later - and my WIP branch pulls those libraries in. 
  
  Rather than depending on Wildfly to provide libraries, manage dependencies via a few different `build.xml`s or use [Gradle](https://gradle.org/).  For example:
  
  - `wildfly-config/build.xml` points at Wildfly libraries
  - `websphere-config/build.xml` downloads stuff from [Maven](https://maven.apache.org/)
  
  The exact approach will be fleshed out as we go.  This issue is for discussion and capturing progress. 

** LABELS
   - Z-REQ-PSM-SQ-1.3
     The PSM shall use modern source code dependency management
     techniques, and shall use up-to-date versions of upstream
     third-party dependencies.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - infra
   - task
   - tech-debt
* [[https://github.com/solutionguidance/psm/issues/12][ 12]] (closed): Find WebSphere and Oracle dependencies in codebase

  As part of #2, find any places where the code would need to be changed for the migrations to Wildfly and Postgres.
  
  Ideally, make these places configurable, so that at some point in the future the platform could be changed through configuration settings.  At present, mark them for that future configurability work.

** LABELS
   - Z-REQ-PSM-SQ-1.3
     The PSM shall use modern source code dependency management
     techniques, and shall use up-to-date versions of upstream
     third-party dependencies.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - Z-REQ-PSM-SQ-1.5
     The PSM shall use D.R.Y. coding principles to avoid unnecessary
     complexity, inflexibility, redundancy, and denormalization in the
     source code and database schemas, and to use precise terminology
     in data structures and operations.
     <<< SQ 1.  Software Quality and Maintainability >>>
** LABEL CHANGES
   + sa-4.1

* [[https://github.com/solutionguidance/psm/issues/11][ 11]] (closed): Separate ext-srcs from main application

  The original authors intended the `ext-srcs` app to function as a separate application.  It has an API that is called by the core PSM app.  In the code's current state, the two apps aren't fully separated.  Their implementation is still closely coupled.  In the future, these might be disentangled.
  
  If they are separated to the point where they can be deployed separately, then the `ext-srcs` app could be used to wrap external data sources for other applications, not just the PSM.  At that point, `ext-srcs` should be moved to its own repository.

** LABELS
   - Z-REQ-PSM-FR-3.23
     The PSM shall reduce processing and transaction time for
     submitting and receiving queries to authoritative data sources
     regarding provider credentials and sanctions.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

** LABEL CHANGES
   + sa-4.1
   + iu-1.1
* [[https://github.com/solutionguidance/psm/issues/10][ 10]]   (open): Clarify user roles / permissions

  As a system administrator, I should only be able to work with user accounts; everything else should be unavailable.
  
  Currently, if I log in as a system administrator, and go to the address of a valid enrollment (eg `http://localhost:9080/cms/provider/enrollment/view?id=11`), that enrollment is shown.
  
  Instead, I should receive a 404 Not Found (not a 403 Forbidden, as that reveals that the enrollment URL is otherwise valid).

** LABELS
   - Z-REQ-PSM-AD-5.12
     The PSM shall support roles and responsibilities of individuals
     that are separated through assigned information access
     authorization as necessary to prevent malevolent activity.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - Z-REQ-PSM-AD-5.4
     The PSM shall support a user security profile that controls user
     access rights to data categories and system functions.
     <<< AD 5.  Technical Service Classification:  Security and Privacy >>>

   - bug
   - security
   - state-question
** LABEL CHANGES
   + ad-1.4
   + ad-5.1
   + ad-5.13
* [[https://github.com/solutionguidance/psm/issues/9][  9]]   (open): Abstract risk-scoring functionality behind a formal service definition.

  If the risk-scoring were abstracted behind a service definition, then the PSM would be able to more easily swap different risk-scoring approaches in and out.  It's not clear how much this abstraction already exists in the code, but based on earlier examination I believe it is not completely abstracted.

** LABELS
   - Z-REQ-PSM-FR-2.18
     The PSM shall have the capability to ensure that providers that
     have a history of fraud are flagged with a higher risk level at
     the time of screening
     <<< FR 2.  Capability to build provider profile >>>

   - Z-REQ-PSM-FR-3.2
     The PSM shall have the capability to create a high-risk list to
     ensure that providers that are suspected or known to be
     fraudulent are flagged at the time of screening.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.4
     The PSM shall separate providers into risk categories limited,
     moderate, and high based on provider type, as established by CMS.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - Z-REQ-PSM-FR-3.7
     The PSM shall change a provider's risk level due to: imposition
     of a payment suspension within the previous 10 years; termination
     from billing Medicaid; exclusion by the OIG; revocation of
     billing privileges by a Medicare contractor within the previous
     10 years (and such provider/supplier is attempting to establish
     additional Medicare billing privileges by enrolling as a new
     provider or supplier or establish billing privileges for a new
     practice location); exclusion from any federal health care
     program; subject to any final adverse action (as defined in 42
     CFR 424.502) within the past 10 years; instances in which CMS
     lifts a temporary moratorium for a particular provider or
     supplier type and a provider or supplier that was prevented from
     enrolling based on the moratorium, applies for enrollment as a
     Medicare provider or supplier at any time within 6 months from
     the date the moratorium was lifted.
     <<< FR 3.  Enable the SMA to provide accurate, streamlined, automated determination of provider eligibility, appeal and revalidation >>>

   - enhancement
   - tech-debt
** LABEL CHANGES
   + sa-4.1
* [[https://github.com/solutionguidance/psm/issues/8][  8]]   (open): Reduce code duplication

  There are some instances where the code does not follow DRY practices.
  
  Thanks to @slifty for pointing out a specific example (I've lightly paraphrased his original text here, all mistakes are mine!):
  
  >Let us consider the "check if string is blank" validation case.
  
  >1) In DeathMasterDAOBean there is a baked in utility method called "checkNullEmpty" -- this method should not be in that file, since it isn't specific to DeathMasterDAO.  The method checks the value and throws an exception.
  
  >2) In other beans, for instance the HealthCareCommonDAO, the same check is done inline.  This means both the check logic and the exception itself are handled separately each time.
  
  >Examples of inline checks:
  
  > - PodiatricMedicineLicenseDAOBean.java (line 98)
  
  > -  SocialWorkLicenseDAOBean.java (line 109)
  
  > - PhysicalTherapyLicenseDAOBean.java (line 112) <-- notice here the code doesn't use the ErrorCode object (as in the other files) but instead has a hand coded string.
  
  >The main reason this is a concern is not so much the check itself, but the result of the check -- the exception being thrown is not necessarily going to be consistent over time and, in fact, isn't even
  consistent now.  This would not be the case if DRY hadn't been violated.
  
  Note also that this doesn't even touch on the fact that (on master) we have both `pesp-jboss/cms-external-sources/services/src/main/java/gov/medicaid/screening/dao/impl/PodiatricMedicineLicenseDAOBean.java` and 
  `pesp-was8.5-ext-srcs/services/src/main/java/gov/medicaid/screening/dao/impl/PodiatricMedicineLicenseDAOBean.java`, which are the exact same file.
  

** LABELS
   - Z-REQ-PSM-SQ-1.5
     The PSM shall use D.R.Y. coding principles to avoid unnecessary
     complexity, inflexibility, redundancy, and denormalization in the
     source code and database schemas, and to use precise terminology
     in data structures and operations.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - tech-debt
* [[https://github.com/solutionguidance/psm/issues/7][  7]] (closed): Automate PSM deployment

  Write a script that allows us to deploy a new instance of the PSM automatically.  There's been some discussion of using [Fabric](http://www.fabfile.org/) for this.
  
  Later, we'll likely put this in a cron job so that some of our public-facing instances can be destroyed and re-deployed nightly.

** LABELS
   - Z-REQ-PSM-SQ-1.4
     The PSM shall use documented build, test, release, and
     installation processes that are automated as much as possible,
     for both development and production use.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/6][  6]] (closed): Draft intake policy for 3rd-party code

  Create a policy for determining whether a given library can be used in this project and is compliant with our license.

** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>
** LABEL CHANGES
   + sq-1.3

* [[https://github.com/solutionguidance/psm/issues/5][  5]] (closed): Document dev/test deployments

  While completing #2, write clear directions about how to complete this process.  These instructions should include the exact shell commands used as often as possible, so that these can be converted to an automated process.  Documentation should also make note of the environment used for the installation.
  
  This process has been begun in [INSTALL.md](https://github.com/OpenTechStrategies/psm/blob/master/INSTALL.md).

** LABELS
   - Z-REQ-PSM-SQ-1.1
     The PSM shall have an open source repository and source code base
     organized to be welcoming to outside contributors.
     <<< SQ 1.  Software Quality and Maintainability >>>
** LABEL CHANGES
   + sq-1.4

* [[https://github.com/solutionguidance/psm/issues/4][  4]] (closed): Merge old 'local-deployment' branch into master.

  The changes on the `local-deployment` branch can just go to `master` now, and `local-deployment` can be archived.

** LABELS
   - Z-REQ-PSM-SQ-1.5
     The PSM shall use D.R.Y. coding principles to avoid unnecessary
     complexity, inflexibility, redundancy, and denormalization in the
     source code and database schemas, and to use precise terminology
     in data structures and operations.
     <<< SQ 1.  Software Quality and Maintainability >>>

   - task
* [[https://github.com/solutionguidance/psm/issues/3][  3]] (closed): Determine Oracle-specificity / PostgreSQL-compatibility of existing SQL.

  Let's determine what (if anything) needs to be done to make the SQL PostgreSQL-compatible.  We might want to start by getting our past research on the status of the PSM's SQL out here into public view.

** LABELS
   - Z-REQ-PSM-FR-9.5
     The PSM shall ensure proprietary interfaces and protocols between
     modules are not used.
     <<< FR 9.  Meets architecture guideline >>>

   - question
* [[https://github.com/solutionguidance/psm/issues/2][  2]] (closed): Run in WildFly (JBoss) or other open source application server.

  Run in an open source application server, defaulting to WildFly (formerly JBoss), with no dependency on IBM WebSphere.

** LABELS
   - Z-REQ-PSM-FR-9.5
     The PSM shall ensure proprietary interfaces and protocols between
     modules are not used.
     <<< FR 9.  Meets architecture guideline >>>

   - Z-REQ-PSM-SQ-1.3
     The PSM shall use modern source code dependency management
     techniques, and shall use up-to-date versions of upstream
     third-party dependencies.
     <<< SQ 1.  Software Quality and Maintainability >>>

* [[https://github.com/solutionguidance/psm/issues/1][  1]] (closed): Support PostgreSQL or other open source database.

  Make the PSM usable with an open source database, defaulting to PostgreSQL, with no dependency on Oracle.

** LABELS
   - Z-REQ-PSM-FR-9.5
     The PSM shall ensure proprietary interfaces and protocols between
     modules are not used.
     <<< FR 9.  Meets architecture guideline >>>

** LABEL CHANGES
   + iu-1.1
